<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>React 基础笔记(React 路由 版本)(二十一)</title>
      <link href="/2019/12/13/reactbasic21/"/>
      <url>/2019/12/13/reactbasic21/</url>
      
        <content type="html"><![CDATA[<h2 id="React-路由必须要用-React-router-dom"><a href="#React-路由必须要用-React-router-dom" class="headerlink" title="React 路由必须要用 React-router-dom"></a>React 路由必须要用 React-router-dom</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i  react<span class="token operator">-</span>router<span class="token operator">-</span>dom <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="基础版本"><a href="#基础版本" class="headerlink" title="基础版本"></a>基础版本</h2><h3 id="1-在要使用的路由页面使用-BrowserRouter-Route"><a href="#1-在要使用的路由页面使用-BrowserRouter-Route" class="headerlink" title="(1)在要使用的路由页面使用 BrowserRouter,Route"></a>(1)在要使用的路由页面使用 BrowserRouter,Route</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserRouter<span class="token punctuation">,</span> Route <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>引用 BrowersRouter,Route 组件 Router 里面有四个属性 一个 path 一个 render 渲染函数,一个 exact 表示绝对匹配 一个 component 渲染组件</p></li><li><p>不加 exact 的话 你访问/detail 的时候它会把前面的主页也渲染出来，路径不是绝对匹配</p></li><li><p>Route 相当于 Vue 里面的 router-view</p></li><li><p>代码如下</p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Link<span class="token punctuation">,</span> Route <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">import</span> List <span class="token keyword">from</span> <span class="token string">'../layout/home-page-layout'</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>BrowserRouter<span class="token operator">></span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>Route      path<span class="token operator">=</span><span class="token string">"/"</span>      render<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span>主页<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token punctuation">}</span><span class="token punctuation">}</span>      exact    <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/detail"</span> component<span class="token operator">=</span><span class="token punctuation">{</span>List<span class="token punctuation">}</span> exact <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>BrowserRouter<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-组件里面使用的时候跳转用-Link-最好使用-NavLink-后面会介绍"><a href="#2-组件里面使用的时候跳转用-Link-最好使用-NavLink-后面会介绍" class="headerlink" title="(2)组件里面使用的时候跳转用 Link(最好使用 NavLink,后面会介绍)"></a>(2)组件里面使用的时候跳转用 Link(最好使用 NavLink,后面会介绍)</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Router<span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span>ul<span class="token operator">></span>            <span class="token operator">&lt;</span>li<span class="token operator">></span>              <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/"</span><span class="token operator">></span>首页<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>            <span class="token operator">&lt;</span>li<span class="token operator">></span>              <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/other"</span><span class="token operator">></span>其他页<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-完整版"><a href="#3-完整版" class="headerlink" title="(3) 完整版"></a>(3) 完整版</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> render <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Route<span class="token punctuation">,</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token keyword">class</span> <span class="token class-name">Home</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token keyword">this</span> a Home page<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Other</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token keyword">this</span> a Other page<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Router<span class="token operator">></span>        <span class="token operator">&lt;</span>div<span class="token operator">></span>          <span class="token operator">&lt;</span>ul<span class="token operator">></span>            <span class="token operator">&lt;</span>li<span class="token operator">></span>              <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/home"</span><span class="token operator">></span>首页<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>            <span class="token operator">&lt;</span>li<span class="token operator">></span>              <span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token string">"/other"</span><span class="token operator">></span>其他页<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>          <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/home"</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Home<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>          <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/other"</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Other<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Main <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="路由传递参数"><a href="#路由传递参数" class="headerlink" title="路由传递参数"></a>路由传递参数</h2><h3 id="params"><a href="#params" class="headerlink" title="params"></a>params</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">'/path/:name'</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Path<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>link to<span class="token operator">=</span><span class="token string">"/path/2"</span><span class="token operator">></span>xxx<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>pathname<span class="token punctuation">:</span><span class="token string">"/path/"</span> <span class="token operator">+</span> name<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>读取参数用<span class="token punctuation">:</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>match<span class="token punctuation">.</span>params<span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>好处刷新地址栏参数依旧存在,坏处只能传递字符串，URL 过长</p></blockquote><h3 id="query"><a href="#query" class="headerlink" title="query"></a>query</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">'/query'</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Query<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> pathname <span class="token punctuation">:</span> <span class="token string">' /query'</span> <span class="token punctuation">,</span> query <span class="token punctuation">:</span> <span class="token punctuation">{</span> name <span class="token punctuation">:</span> <span class="token string">'sunny'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>pathname<span class="token punctuation">:</span><span class="token string">"/query"</span><span class="token punctuation">,</span>query<span class="token punctuation">:</span> <span class="token punctuation">{</span> name <span class="token punctuation">:</span> <span class="token string">'sunny'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>读取参数用<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>location<span class="token punctuation">.</span>query<span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>好处 传参优雅 坏处刷新页面 参数消失</p></blockquote><h3 id="state"><a href="#state" class="headerlink" title="state"></a>state</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">'/sort '</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Sort<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>Link to<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> pathname <span class="token punctuation">:</span> <span class="token string">' /sort '</span> <span class="token punctuation">,</span> state <span class="token punctuation">:</span> <span class="token punctuation">{</span> name <span class="token punctuation">:</span> <span class="token string">'sunny'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>pathname<span class="token punctuation">:</span><span class="token string">"/sort "</span><span class="token punctuation">,</span>state <span class="token punctuation">:</span> <span class="token punctuation">{</span> name <span class="token punctuation">:</span> <span class="token string">'sunny'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>读取参数用<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>location<span class="token punctuation">.</span>query<span class="token punctuation">.</span>state<span class="token punctuation">.</span>name<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>好处坏处同 query</p></blockquote><h3 id="search"><a href="#search" class="headerlink" title="search"></a>search</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">'/web/departManange '</span> component<span class="token operator">=</span><span class="token punctuation">{</span>DepartManange<span class="token punctuation">}</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span>link to<span class="token operator">=</span><span class="token string">"web/departManange?tenantId=12121212"</span><span class="token operator">></span>xxx<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">></span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>pathname<span class="token punctuation">:</span><span class="token string">"/web/departManange?tenantId"</span> <span class="token operator">+</span> row<span class="token punctuation">.</span>tenantId<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>读取参数用<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>好坏处同 params</p></blockquote><blockquote><p>注意事项</p><ol><li>Router 里面只能出现一个子节点.</li><li>Link 必须放在 BrowserRouter 的里面否则不能用</li></ol></blockquote><h2 id="要是使用函数跳转的话-必须要在页面上引用-withRouter-否则不起作用-要是子路由获取参数也需要-withRouter"><a href="#要是使用函数跳转的话-必须要在页面上引用-withRouter-否则不起作用-要是子路由获取参数也需要-withRouter" class="headerlink" title="要是使用函数跳转的话,必须要在页面上引用 withRouter,否则不起作用,要是子路由获取参数也需要 withRouter"></a>要是使用函数跳转的话,必须要在页面上引用 withRouter,否则不起作用,要是子路由获取参数也需要 withRouter</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Toppic <span class="token keyword">as</span> Topwrapper <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../style'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> withRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span> <span class="token comment" spellcheck="true">//引入withRouter</span><span class="token keyword">class</span> <span class="token class-name">Toppic</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      showflag<span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> _this <span class="token operator">=</span> <span class="token keyword">this</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        _this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          showflag<span class="token punctuation">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        _this<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          showflag<span class="token punctuation">:</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>showflag<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">(</span>        <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>          <span class="token operator">&lt;</span>Topwrapper onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handletop<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>顶部<span class="token operator">&lt;</span><span class="token operator">/</span>Topwrapper<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>      <span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">null</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">handletop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> pathname<span class="token punctuation">:</span> <span class="token string">'/detail'</span><span class="token punctuation">,</span> query<span class="token punctuation">:</span> <span class="token punctuation">{</span> id<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//重点看</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">withRouter</span><span class="token punctuation">(</span>Toppic<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//暴露出去</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Switch-作用就是优先匹配，他要是找到第一个，后面的就不再匹配"><a href="#Switch-作用就是优先匹配，他要是找到第一个，后面的就不再匹配" class="headerlink" title="Switch 作用就是优先匹配，他要是找到第一个，后面的就不再匹配"></a>Switch 作用就是优先匹配，他要是找到第一个，后面的就不再匹配</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span> Route<span class="token punctuation">,</span> Link <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-router-dom'</span><span class="token punctuation">;</span><span class="token operator">&lt;</span>Router<span class="token operator">></span>  <span class="token operator">&lt;</span>Switch<span class="token operator">></span>    <span class="token operator">&lt;</span>Route exact path<span class="token operator">=</span><span class="token string">"/"</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Jsdemo<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/Jsdemob"</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Jsdemob<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token comment" spellcheck="true">/*canshu和aa是要传递的两个参数对应的名词*/</span>    <span class="token operator">&lt;</span>Route path<span class="token operator">=</span><span class="token string">"/Jsdemoc/:canshu/:aa"</span> component<span class="token operator">=</span><span class="token punctuation">{</span>Jsdemoc<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Redirect <span class="token keyword">from</span><span class="token operator">=</span><span class="token string">"/redirect"</span> to<span class="token operator">=</span><span class="token string">"/Jsdemob"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>Route component<span class="token operator">=</span><span class="token punctuation">{</span>Error<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span> <span class="token comment" spellcheck="true">//这个一定要在所有连接最后</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Switch<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>Router<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="NavLink-标准-个人建议使用"><a href="#NavLink-标准-个人建议使用" class="headerlink" title="NavLink 标准 个人建议使用"></a>NavLink 标准 个人建议使用</h2><ul><li>Link 的属性他都有,他是 link 的一个特定的版本,会在匹配上当前的 URL 的时候给已经渲染的元素添加参数</li></ul><ol><li><p>activeClassName(string) 设置选中样式,默认值 active</p></li><li><p>activeStyle(object) 当前元素被选中时,为元素添加样式</p></li><li><p>exact(bool)为 true 时 只有当导致和完全匹配 class 和 style 才会用</p></li><li><p>strict(bool) 为 true 时,在确定为位置是否与当前 URL 匹配时，将考虑位置 pathname 后的斜线</p></li><li><p>isActive(func)判断链接是否激活额外逻辑的功能</p></li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span>  BrowserRouter <span class="token keyword">as</span> Router<span class="token punctuation">,</span>  Route<span class="token punctuation">,</span>  Link<span class="token punctuation">,</span>  NavLink<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"react-router-dom"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// activeClassName选中时样式为selected</span><span class="token operator">&lt;</span>NavLink  to<span class="token operator">=</span><span class="token string">"/faq"</span>  activeClassName<span class="token operator">=</span><span class="token string">"selected"</span><span class="token operator">></span>FAQs<span class="token operator">&lt;</span><span class="token operator">/</span>NavLink<span class="token operator">></span><span class="token comment" spellcheck="true">// 选中时样式为activeStyle的样式设置</span><span class="token operator">&lt;</span>NavLink  to<span class="token operator">=</span><span class="token string">"/faq"</span>  activeStyle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>    fontWeight<span class="token punctuation">:</span> <span class="token string">'bold'</span><span class="token punctuation">,</span>    color<span class="token punctuation">:</span> <span class="token string">'red'</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>FAQs<span class="token operator">&lt;</span><span class="token operator">/</span>NavLink<span class="token operator">></span><span class="token comment" spellcheck="true">// 当event id为奇数的时候，激活链接</span><span class="token keyword">const</span> oddEvent <span class="token operator">=</span> <span class="token punctuation">(</span>match<span class="token punctuation">,</span> location<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>match<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token boolean">false</span>  <span class="token punctuation">}</span>  <span class="token keyword">const</span> eventID <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>match<span class="token punctuation">.</span>params<span class="token punctuation">.</span>eventID<span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>eventID<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> eventID <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>NavLink  to<span class="token operator">=</span><span class="token string">"/events/123"</span>  isActive<span class="token operator">=</span><span class="token punctuation">{</span>oddEvent<span class="token punctuation">}</span><span class="token operator">></span>Event <span class="token number">123</span><span class="token operator">&lt;</span><span class="token operator">/</span>NavLink<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>Router 里面要有包裹层</p></li><li><p>NavLink 是链接,可以添加类名之类的</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(CSS react-transition-group 过渡动画 版本)(二十)</title>
      <link href="/2019/12/12/reactbasic20/"/>
      <url>/2019/12/12/reactbasic20/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-React-动画必须安装包-react-transition-group"><a href="#安装-React-动画必须安装包-react-transition-group" class="headerlink" title="安装 React 动画必须安装包 react-transition-group"></a>安装 React 动画必须安装包 react-transition-group</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i react<span class="token operator">-</span>transition<span class="token operator">-</span>group <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="利用-CSSTransition-作为壳子套-html-标签"><a href="#利用-CSSTransition-作为壳子套-html-标签" class="headerlink" title="利用 CSSTransition 作为壳子套 html 标签"></a>利用 CSSTransition 作为壳子套 html 标签</h2><ul><li><p>in 表示开关是否执行</p></li><li><p>timeout 表示动画执行的时间</p></li><li><p>appear 表示是否一加载就执行</p></li><li><p>className 动画执行的名称</p></li><li><p>unmountOnExit 动画执行完节点消失</p></li><li><p>onEnter 表示钩子函数刚进入的时候，里面就一个参数 el</p></li><li><p>onEnter onEntering onEntered onExit onExiting onExited 钩子函数</p></li></ul><h3 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token string">'./donghua.css'</span><span class="token keyword">class</span> <span class="token class-name">Donghua</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      flag<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>CSSTransition        <span class="token keyword">in</span><span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>flag<span class="token punctuation">}</span>        timeout<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2000</span><span class="token punctuation">}</span>        appear<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span>        classNames<span class="token operator">=</span><span class="token string">"fade"</span>        unmountOnExit        onEnter<span class="token operator">=</span><span class="token punctuation">{</span>el <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">'red'</span>        <span class="token punctuation">}</span><span class="token punctuation">}</span>      <span class="token operator">></span>        <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>          <span class="token operator">&lt;</span>div<span class="token operator">></span>红色<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>CSSTransition<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="donghua-css"><a href="#donghua-css" class="headerlink" title="donghua.css"></a>donghua.css</h3><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.fade-enter</span>,<span class="token class">.fade-appear</span> </span><span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.fade-appear-active</span> </span><span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">80%</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">2</span>s linear<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.fade-enter-active</span> </span><span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">80%</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">2</span>s linear<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.fade-enter-done</span> </span><span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">80%</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.fade-exit</span> </span><span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">80%</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.fade-exit-active</span> </span><span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">2</span>s linear<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.fade-exit-done</span> </span><span class="token punctuation">{</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ReactCss-动画组合"><a href="#ReactCss-动画组合" class="headerlink" title="ReactCss 动画组合"></a>ReactCss 动画组合</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>TransitionGroup key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">></span>  <span class="token operator">&lt;</span>CSSTransition    <span class="token keyword">in</span>    timeout<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">2000</span><span class="token punctuation">}</span>    appear<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span>    classNames<span class="token operator">=</span><span class="token string">"fade"</span>    unmountOnExit    onEnter<span class="token operator">=</span><span class="token punctuation">{</span>el <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">'red'</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>  <span class="token operator">></span>    <span class="token operator">&lt;</span>List content<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span> index<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span> deletedate<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>deleteone<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>CSSTransition<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>TransitionGroup<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>react-transition-group 使用</p></li><li><p>react-transition-group 使用规则</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(CSS 样式冲突, 使用中间件 styled-components 版本)(十九)</title>
      <link href="/2019/12/11/reactbasic19/"/>
      <url>/2019/12/11/reactbasic19/</url>
      
        <content type="html"><![CDATA[<h1 id="React-基础笔记-CSS-样式冲突-使用中间件-styled-components-版本-十九"><a href="#React-基础笔记-CSS-样式冲突-使用中间件-styled-components-版本-十九" class="headerlink" title="React 基础笔记(CSS 样式冲突, 使用中间件 styled-components 版本)(十九)"></a>React 基础笔记(CSS 样式冲突, 使用中间件 styled-components 版本)(十九)</h1><blockquote><p>styled-components 他的作用就是怕组件里面个个 CSS 之间相互重叠，覆盖,犯冲突,所以引入了这个组件,因为它只对本组件管用</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm install <span class="token operator">--</span>save styled<span class="token operator">-</span>components<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h2><blockquote><p>用组件的形式编写 css</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//必须要引入</span><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">'styled-components'</span><span class="token keyword">export</span> <span class="token keyword">const</span> HomeWraper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token string">`  width: 100%;  height: 100px;  border-bottom: 1px solid #ccc;`</span></span><span class="token keyword">export</span> <span class="token keyword">const</span> ContentWraper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token string">`  max-width: 1200px;  height: 100px;  margin: 0 auto;  border-bottom: 0px;`</span></span><span class="token keyword">export</span> <span class="token keyword">const</span> LogoWraper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token string">`  width: 100px;  height: 80px;  float: left;  margin-top: 10px;  margin-left: 20px;`</span></span><span class="token keyword">export</span> <span class="token keyword">const</span> MiddleWraper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token string">`  width: 880px;  height: 100px;  float: left;`</span></span><span class="token keyword">export</span> <span class="token keyword">const</span> RightWraper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token string">`  width: 100px;  height: 100px;  float: left;`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>上面的代码定义了 5 个组件 HomeWraper,ContentWraper,LogoWraper,MiddleWraper,RightWraper,这样每一个组件对应唯一的样式，不出现污染的状况</li></ul><blockquote><p>组件里面这样写</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> <span class="token punctuation">{</span>  HomeWraper<span class="token punctuation">,</span>  ContentWraper<span class="token punctuation">,</span>  LogoWraper<span class="token punctuation">,</span>  MiddleWraper<span class="token punctuation">,</span>  RightWraper<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../css/header'</span><span class="token keyword">class</span> <span class="token class-name">Header</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  state <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>        <span class="token operator">&lt;</span>HomeWraper<span class="token operator">></span>          <span class="token operator">&lt;</span>ContentWraper<span class="token operator">></span>            <span class="token operator">&lt;</span>LogoWraper <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>MiddleWraper <span class="token operator">/</span><span class="token operator">></span>            <span class="token operator">&lt;</span>RightWraper <span class="token operator">/</span><span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>ContentWraper<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>HomeWraper<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Header<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="全局样式"><a href="#全局样式" class="headerlink" title="全局样式"></a>全局样式</h2><ul><li><p>styled-components 提供了 createGlobalStyle 可以设置全局样式</p></li><li><p>例如 下面就是简单版本的全局引入，里面有了 iconfont 请注意路径要匹配对</p></li><li><p>代码</p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> createGlobalStyle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'styled-components'</span><span class="token keyword">const</span> GrobalStyle <span class="token operator">=</span> createGlobalStyle<span class="token template-string"><span class="token string">`    html, body, div, span {    margin: 0;    padding: 0;    border: 0;    font-size: 100%;    font: inherit;    vertical-align: baseline;    }    /* HTML5 display-role reset for older browsers */    article, aside, details, figcaption, figure,    footer, header, hgroup, menu, nav, section {    display: block;    }    body {    line-height: 1;    background:red;    }    ol, ul {    list-style: none;    }    blockquote, q {    quotes: none;    }    blockquote:before, blockquote:after,    q:before, q:after {    content: '';    content: none;    }    table {    border-collapse: collapse;    border-spacing: 0;    }  @font-face {font-family: "iconfont";  src: url('../iconfont/iconfont.eot?t=1563781351915'); /* IE9 */}.iconfont {  font-family: "iconfont" !important;  font-size: 16px;  font-style: normal;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.icon-tupian:before {  content: "\e643";}.icon-fanhui:before {  content: "\e624";}.icon-jiantouxia:before {  content: "\e62d";}.icon-sousuo:before {  content: "\e632";}`</span></span><span class="token keyword">export</span> <span class="token keyword">default</span> GrobalStyle<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>页面上引入全局样式的时候千万注意 它也是组件，但是不能包含其他组件 必须优先引入，在 app.js 里面 Global 必须放在外面</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Global <span class="token keyword">from</span> <span class="token string">'./pages/commonstyle'</span><span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>        <span class="token operator">&lt;</span>Global <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>PageUi          inputValue<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>inputValue<span class="token punctuation">}</span>          handchange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handchange<span class="token punctuation">}</span>          handClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handClick<span class="token punctuation">}</span>          deleteItem<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>deleteItem<span class="token punctuation">}</span>          list<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>list<span class="token punctuation">}</span>        <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Index <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> App<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="styled-components-规则"><a href="#styled-components-规则" class="headerlink" title="styled-components 规则"></a>styled-components 规则</h2><h3 id="背景图片引入"><a href="#背景图片引入" class="headerlink" title="背景图片引入"></a>背景图片引入</h3><ul><li>${}里面放的变量</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> styled <span class="token keyword">from</span> <span class="token string">'styled-components'</span><span class="token keyword">import</span> Middleimg <span class="token keyword">from</span> <span class="token string">'../../../images/2019-07-20_200948.png'</span><span class="token keyword">export</span> <span class="token keyword">const</span> MiddleWraper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token string">`  width: 880px;  height: 100px;  float: left;  background: url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>Middleimg<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">);`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="组件传值的形式也可以"><a href="#组件传值的形式也可以" class="headerlink" title="组件传值的形式也可以"></a>组件传值的形式也可以</h3><ul><li><p>组件传值也只能是地址不能是相对路径</p></li><li><p>父组件</p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'./components/Header.js'</span><span class="token keyword">class</span> <span class="token class-name">Index</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      imgurl<span class="token punctuation">:</span>        <span class="token string">'http://fuss10.elemecdn.com/c/cd/c12745ed8a5171e13b427dbc39401jpeg.jpeg?imageView2/1/w/114/h/114'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>        <span class="token operator">&lt;</span>Header imgurl<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>imgurl<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Index<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子组件 里面把值放到属性里面</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>RightWraper imgurl<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>imgurl<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>然后 css 里面变量就是$(props)=&gt;{props.imgurl}</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> RightWraper <span class="token operator">=</span> styled<span class="token punctuation">.</span>div<span class="token template-string"><span class="token string">`  width: 100px;  height: 100px;  float: left;  background-image: url(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>props <span class="token operator">=</span><span class="token operator">></span> props<span class="token punctuation">.</span>imgurl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">);  background-size: contain;`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> NavSearch <span class="token operator">=</span> styled<span class="token punctuation">.</span>input<span class="token punctuation">.</span><span class="token function">attrs</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    placeholder<span class="token punctuation">:</span> <span class="token string">'搜索'</span>，    type<span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token template-string"><span class="token string">`  width: 160px;  height: 38px;  margin-top: 9px;  padding: 0 40px 0 20px;  box-sizing: border-box;  background-color: #eee;  outline: none;  border: none;  border-radius: 19px;  color: #666;  &amp;::placeholder {    color: #999;  }  &amp;.focused {    width: 240px;  }`</span></span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><ul><li><p>比如一个按钮 button 只想改变颜色,大小宽度和高度都不变</p></li><li><p>styled(Button)</p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> Button <span class="token operator">=</span> styled<span class="token punctuation">.</span>button<span class="token template-string"><span class="token string">`  width: 50px;  height: 50px;  float: left;  background: black;  color: white;`</span></span><span class="token keyword">export</span> <span class="token keyword">const</span> Button1 <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span>Button<span class="token punctuation">)</span><span class="token template-string"><span class="token string">`  background: red;  color: yellow;`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>利用 styled-components 这样可以避免 css 混淆</p></li><li><p>styled-components 法则</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(redux 拆分成多个小 redux 版本)(十八)</title>
      <link href="/2019/12/10/reactbasic18/"/>
      <url>/2019/12/10/reactbasic18/</url>
      
        <content type="html"><![CDATA[<h1 id="React-基础笔记-redux-拆分成多个小-redux-版本-十八"><a href="#React-基础笔记-redux-拆分成多个小-redux-版本-十八" class="headerlink" title="React 基础笔记(redux 拆分成多个小 redux 版本)(十八)"></a>React 基础笔记(redux 拆分成多个小 redux 版本)(十八)</h1><blockquote><p>有时候逻辑非常复杂我们需要将各个部件分成多个 reducer 这样好区分</p></blockquote><h2 id="建立组件里面小的-reducer-文件"><a href="#建立组件里面小的-reducer-文件" class="headerlink" title="建立组件里面小的 reducer 文件"></a>建立组件里面小的 reducer 文件</h2><h3 id="在每个组件下面建立文件夹起名叫-reducer-文件夹里面创建个-reducer-js-文件"><a href="#在每个组件下面建立文件夹起名叫-reducer-文件夹里面创建个-reducer-js-文件" class="headerlink" title="在每个组件下面建立文件夹起名叫 reducer 文件夹里面创建个 reducer.js 文件"></a>在每个组件下面建立文件夹起名叫 reducer 文件夹里面创建个 reducer.js 文件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> ACTION_FOCUSED_CHANGE <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'../../../store/actionTypes'</span><span class="token keyword">const</span> defaultState <span class="token operator">=</span> <span class="token punctuation">{</span>  focused<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>state <span class="token operator">=</span> defaultState<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> ACTION_FOCUSED_CHANGE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    newState<span class="token punctuation">.</span>focused <span class="token operator">=</span> <span class="token operator">!</span>newState<span class="token punctuation">.</span>focused    <span class="token keyword">return</span> newState  <span class="token punctuation">}</span>  <span class="token keyword">return</span> state<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改总的-reducer-文件，引入小组件的-reducer-文件"><a href="#修改总的-reducer-文件，引入小组件的-reducer-文件" class="headerlink" title="修改总的 reducer 文件，引入小组件的 reducer 文件"></a>修改总的 reducer 文件，引入小组件的 reducer 文件</h3><ul><li>必须借助 redux 里面的 combineReducers</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> combineReducers <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux'</span><span class="token keyword">import</span> headerReducer <span class="token keyword">from</span> <span class="token string">'../commoncomponents/header/reducer/reducer'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">combineReducers</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  header<span class="token punctuation">:</span> headerReducer<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改组件里面的文件-引入-state-的时候变量名称必须变了-重要"><a href="#修改组件里面的文件-引入-state-的时候变量名称必须变了-重要" class="headerlink" title="修改组件里面的文件 引入 state 的时候变量名称必须变了(重要)"></a>修改组件里面的文件 引入 state 的时候变量名称必须变了(重要)</h3><ul><li>原先 state.focuesd 现在变成了 state.header.focused 对应就是总的 redux 起的名字</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> mapStateToProps <span class="token operator">=</span> state <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    focused<span class="token punctuation">:</span> state<span class="token punctuation">.</span>header<span class="token punctuation">.</span>focused <span class="token comment" spellcheck="true">//要改变了</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> mapDispatchToProps <span class="token operator">=</span> dispatch <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    <span class="token function">handlefocus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token function">METHOD_ACTION_CHANGEFOCUSED</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">handleblur</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token function">METHOD_ACTION_CHANGEFOCUSED</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>  mapStateToProps<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//这里面放的是数据</span>  mapDispatchToProps <span class="token comment" spellcheck="true">//里面放的是操作的数据的方法</span><span class="token punctuation">)</span><span class="token punctuation">(</span>HeaderWrap<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.要是业务量大了,就必须要拆分</p>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(Redux-redux 版本)(十七)</title>
      <link href="/2019/12/09/reactbasic17/"/>
      <url>/2019/12/09/reactbasic17/</url>
      
        <content type="html"><![CDATA[<h1 id="React-基础笔记-Redux-redux-版本-十七"><a href="#React-基础笔记-Redux-redux-版本-十七" class="headerlink" title="React 基础笔记(Redux-redux 版本)(十七)"></a>React 基础笔记(Redux-redux 版本)(十七)</h1><blockquote><p>他前面的步骤和基础版本差不多，也得创建仓库和模板,他的作用就是把一些需要处理公共数据的逻辑放到组件的外面,这样组件就是变成 UI 组件</p></blockquote><h2 id="1-使用-Redux-就必须要提前安装"><a href="#1-使用-Redux-就必须要提前安装" class="headerlink" title="(1)使用 Redux 就必须要提前安装"></a>(1)使用 Redux 就必须要提前安装</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i redux <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-安装-React-redux"><a href="#2-安装-React-redux" class="headerlink" title="(2) 安装 React-redux"></a>(2) 安装 React-redux</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i react<span class="token operator">-</span>redux<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-在-src-目录下创建一个-store-文件夹-里面创建一个-index-js-文件作为公共仓库"><a href="#3-在-src-目录下创建一个-store-文件夹-里面创建一个-index-js-文件作为公共仓库" class="headerlink" title="(3)在 src 目录下创建一个 store 文件夹,里面创建一个 index.js 文件作为公共仓库"></a>(3)在 src 目录下创建一个 store 文件夹,里面创建一个 index.js 文件作为公共仓库</h2><ul><li>公共模板</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux'</span><span class="token comment" spellcheck="true">// 引入reducer</span><span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">'./reducer'</span><span class="token comment" spellcheck="true">// 放入reducer</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> store<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-创建-reducer-文件他里面接受两个参数-state-action-state-就是获取所有的公共数据"><a href="#4-创建-reducer-文件他里面接受两个参数-state-action-state-就是获取所有的公共数据" class="headerlink" title="(4)创建 reducer 文件他里面接受两个参数(state,action) state 就是获取所有的公共数据"></a>(4)创建 reducer 文件他里面接受两个参数(state,action) state 就是获取所有的公共数据</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> CHANGE_VALUE<span class="token punctuation">,</span> CLICK_CHANGE<span class="token punctuation">,</span> DELETE_ITEM <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actiontypes'</span><span class="token keyword">const</span> defaultState <span class="token operator">=</span> <span class="token punctuation">{</span>  inputValue<span class="token punctuation">:</span> <span class="token string">'123'</span><span class="token punctuation">,</span>  list<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token string">'Racing car sprays burning fuel into crowd.'</span><span class="token punctuation">,</span>    <span class="token string">'Japanese princess to wed commoner.'</span><span class="token punctuation">,</span>    <span class="token string">'Australian walks 100km after outback crash.'</span><span class="token punctuation">,</span>    <span class="token string">'Man charged over missing wedding girl.'</span><span class="token punctuation">,</span>    <span class="token string">'Los Angeles battles huge wildfires.'</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>state <span class="token operator">=</span> defaultState<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//这里判断action的type然后在返回state</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> CHANGE_VALUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newresult <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//必须要重新生成一个新的对象,也不能使用Object.asign这样有的时候不起作用,而且每个判断里面必须有返回值</span>    newresult<span class="token punctuation">.</span>inputValue <span class="token operator">=</span> action<span class="token punctuation">.</span>value    <span class="token keyword">return</span> newresult  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> CLICK_CHANGE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newData<span class="token punctuation">.</span>inputValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      newData<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newData<span class="token punctuation">.</span>inputValue<span class="token punctuation">)</span>      newData<span class="token punctuation">.</span>inputValue <span class="token operator">=</span> <span class="token string">''</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> newData  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 这里就是删除方法,必须返回新数据</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> DELETE_ITEM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    newData<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> newData  <span class="token punctuation">}</span>  <span class="token keyword">return</span> state<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-调试的时候要借助-redux-工具-store-里面必须要加入这句话-window-开头的"><a href="#5-调试的时候要借助-redux-工具-store-里面必须要加入这句话-window-开头的" class="headerlink" title="(5)调试的时候要借助 redux 工具,store 里面必须要加入这句话 window 开头的"></a>(5)调试的时候要借助 redux 工具,store 里面必须要加入这句话 window 开头的</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux'</span><span class="token comment" spellcheck="true">//引入reducer</span><span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">'./reducer'</span><span class="token comment" spellcheck="true">//放入reducer</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>  reducer<span class="token punctuation">,</span>  window<span class="token punctuation">.</span>__REDUX_DEVTOOLS_EXTENSION__ <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">__REDUX_DEVTOOLS_EXTENSION__</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> store<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这样后端基本上完事，下面就是前台的</p></blockquote><h2 id="6-在-index-js-第一个渲染的时候提供一个壳子，让所有的组件都能使用-store"><a href="#6-在-index-js-第一个渲染的时候提供一个壳子，让所有的组件都能使用-store" class="headerlink" title="(6) 在 index.js 第一个渲染的时候提供一个壳子，让所有的组件都能使用 store"></a>(6) 在 index.js 第一个渲染的时候提供一个壳子，让所有的组件都能使用 store</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span class="token keyword">import</span> TodoList <span class="token keyword">from</span> <span class="token string">'./Todolist'</span><span class="token comment" spellcheck="true">//引入react-redux 提供的一个标签</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Provider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-redux'</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store/index'</span><span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">(</span>  <span class="token comment" spellcheck="true">// {Todolist组件还有下面的组件都可以使用store}</span>  <span class="token operator">&lt;</span>Provider store<span class="token operator">=</span><span class="token punctuation">{</span>store<span class="token punctuation">}</span><span class="token operator">></span>    <span class="token operator">&lt;</span>TodoList <span class="token operator">/</span><span class="token operator">></span>    <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* {类似a组件之类的} */</span><span class="token punctuation">}</span>    <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* &lt;a>&lt;/a> */</span><span class="token punctuation">}</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">></span><span class="token punctuation">)</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>App<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-组件里面使用"><a href="#7-组件里面使用" class="headerlink" title="(7) 组件里面使用"></a>(7) 组件里面使用</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//必须要引入connect</span><span class="token keyword">import</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-redux'</span><span class="token comment" spellcheck="true">//然后在类的外面定义两个常量,两个常量都是方法,返回的都是对象</span><span class="token keyword">const</span> mapStateToProps <span class="token operator">=</span> state <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    inputValue<span class="token punctuation">:</span> state<span class="token punctuation">.</span>inputValue<span class="token punctuation">,</span>    list<span class="token punctuation">:</span> state<span class="token punctuation">.</span>list  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> mapDispatchToProps <span class="token operator">=</span> dispatch <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    <span class="token function">handleChange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> value <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value      <span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'change_value'</span><span class="token punctuation">,</span>        value      <span class="token punctuation">}</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">changeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> action <span class="token operator">=</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'change_list'</span>      <span class="token punctuation">}</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">deleteItem</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> action <span class="token operator">=</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'deleteItem'</span><span class="token punctuation">,</span>        value<span class="token punctuation">:</span> index      <span class="token punctuation">}</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//最后利用store挂钩</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>  mapStateToProps<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//这里面放的是数据</span>  mapDispatchToProps <span class="token comment" spellcheck="true">//里面放的是操作的数据的方法</span><span class="token punctuation">)</span><span class="token punctuation">(</span>TodoList<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-完整版本"><a href="#8-完整版本" class="headerlink" title="(8) 完整版本"></a>(8) 完整版本</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token comment" spellcheck="true">// import store from './store/index'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> connect <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-redux'</span><span class="token keyword">class</span> <span class="token class-name">TodoList</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span>      changeList<span class="token punctuation">,</span>      inputValue<span class="token punctuation">,</span>      handleChange<span class="token punctuation">,</span>      list<span class="token punctuation">,</span>      deleteItem    <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>        <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* {做完了映射,里面的数据就是继承了,因为最开始有个标签，他的级别高} */</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span>inputValue<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button type<span class="token operator">=</span><span class="token string">"primary"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span>changeList<span class="token punctuation">}</span><span class="token operator">></span>          点击我        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>ul<span class="token operator">></span>          <span class="token punctuation">{</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>              <span class="token operator">&lt;</span>li                key<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span>                onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>                  <span class="token function">deleteItem</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>                <span class="token punctuation">}</span><span class="token punctuation">}</span>              <span class="token operator">></span>                <span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token operator">--</span><span class="token operator">-</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span>              <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>            <span class="token punctuation">)</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//第一步映射把state数据映射到公共数据上</span><span class="token keyword">const</span> mapStateToProps <span class="token operator">=</span> state <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    inputValue<span class="token punctuation">:</span> state<span class="token punctuation">.</span>inputValue<span class="token punctuation">,</span>    list<span class="token punctuation">:</span> state<span class="token punctuation">.</span>list  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> mapDispatchToProps <span class="token operator">=</span> dispatch <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    <span class="token function">handleChange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> value <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value      <span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'change_value'</span><span class="token punctuation">,</span>        value      <span class="token punctuation">}</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">changeList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> action <span class="token operator">=</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'change_list'</span>      <span class="token punctuation">}</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">deleteItem</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> action <span class="token operator">=</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'deleteItem'</span><span class="token punctuation">,</span>        value<span class="token punctuation">:</span> index      <span class="token punctuation">}</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//导出这里要变化了,它的意思就是TodoList和store做链接</span><span class="token comment" spellcheck="true">//第二步连接</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">connect</span><span class="token punctuation">(</span>  mapStateToProps<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//这里面放的是数据</span>  mapDispatchToProps <span class="token comment" spellcheck="true">//里面放的是操作的数据的方法</span><span class="token punctuation">)</span><span class="token punctuation">(</span>TodoList<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>react-redux 使用流程</li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(Redux sage 版本)(十六)</title>
      <link href="/2019/12/08/reactbasic16/"/>
      <url>/2019/12/08/reactbasic16/</url>
      
        <content type="html"><![CDATA[<h1 id="React-基础笔记-Redux-sage-版本-十六"><a href="#React-基础笔记-Redux-sage-版本-十六" class="headerlink" title="React 基础笔记(Redux sage 版本)(十六)"></a>React 基础笔记(Redux sage 版本)(十六)</h1><blockquote><p>Saga 和 chunk 不一样。thunk 是子弹形成前封装,Saga 是子弹发射出去后封装，相当于多了一步</p></blockquote><h2 id="1-安装-redux"><a href="#1-安装-redux" class="headerlink" title="(1) 安装 redux"></a>(1) 安装 redux</h2><pre class="line-numbers language-javascript"><code class="language-javascript"> npm i redux <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-安装-redux-saga-插件"><a href="#2-安装-redux-saga-插件" class="headerlink" title="(2) 安装 redux-saga 插件"></a>(2) 安装 redux-saga 插件</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i redux<span class="token operator">-</span>saga <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-建立仓库模板"><a href="#3-建立仓库模板" class="headerlink" title="(3)建立仓库模板"></a>(3)建立仓库模板</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore<span class="token punctuation">,</span> applyMiddleware<span class="token punctuation">,</span> compose <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux'</span><span class="token keyword">import</span> createSagaMiddleware <span class="token keyword">from</span> <span class="token string">'redux-saga'</span><span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">'./reducer'</span><span class="token keyword">import</span> mySaga <span class="token keyword">from</span> <span class="token string">'./saga'</span><span class="token comment" spellcheck="true">// create the saga middleware</span><span class="token keyword">const</span> sagaMiddleware <span class="token operator">=</span> <span class="token function">createSagaMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// mount it on the Store</span><span class="token keyword">const</span> composeEnhancers <span class="token operator">=</span>  <span class="token keyword">typeof</span> window <span class="token operator">===</span> <span class="token string">'object'</span> <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>__REDUX_DEVTOOLS_EXTENSION_COMPOSE__    <span class="token operator">?</span> window<span class="token punctuation">.</span><span class="token function">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">:</span> compose<span class="token keyword">const</span> enhancer <span class="token operator">=</span> <span class="token function">composeEnhancers</span><span class="token punctuation">(</span><span class="token function">applyMiddleware</span><span class="token punctuation">(</span>sagaMiddleware<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> enhancer<span class="token punctuation">)</span><span class="token comment" spellcheck="true">// then run the saga</span>sagaMiddleware<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>mySaga<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> store<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-新建-saga-文件-saga-子弹合并工厂"><a href="#4-新建-saga-文件-saga-子弹合并工厂" class="headerlink" title="(4)新建 saga 文件,saga 子弹合并工厂"></a>(4)新建 saga 文件,saga 子弹合并工厂</h2><ul><li>可以先写 yield 函数,里面就是 console.log 值</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> put<span class="token punctuation">,</span> takeEvery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux-saga/effects'</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">initlist</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>"执行了<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">mySaga</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">yield</span> <span class="token function">takeEvery</span><span class="token punctuation">(</span>MAKE_INIT<span class="token punctuation">,</span> initlist<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> mySaga<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>正式文件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> put<span class="token punctuation">,</span> takeEvery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux-saga/effects'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> MAKE_INIT <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actiontypes'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> ACTION_INIT_LIST <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actionCreater'</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">initlist</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">yield</span> axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/api/data1'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//必须有yield</span>  <span class="token keyword">let</span> data <span class="token operator">=</span> value<span class="token punctuation">.</span>data  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">ACTION_INIT_LIST</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//子弹做好了</span>  <span class="token keyword">yield</span> <span class="token function">put</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//必须有yield</span><span class="token punctuation">}</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">mySaga</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">yield</span> <span class="token function">takeEvery</span><span class="token punctuation">(</span>MAKE_INIT<span class="token punctuation">,</span> initlist<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> mySaga<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-reducer-文件"><a href="#5-reducer-文件" class="headerlink" title="(5) reducer 文件"></a>(5) reducer 文件</h2><pre class="line-numbers language-javascript"><code class="language-javascript">mport <span class="token punctuation">{</span> CHANGE_VALUE<span class="token punctuation">,</span> CLICK_CHANGE<span class="token punctuation">,</span> DELETE_ITEM <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actiontypes'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>state <span class="token operator">=</span> defaultState<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> CHANGE_VALUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newresult <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    newresult<span class="token punctuation">.</span>inputValue <span class="token operator">=</span> action<span class="token punctuation">.</span>value    <span class="token keyword">return</span> newresult  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> CLICK_CHANGE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newData<span class="token punctuation">.</span>inputValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      newData<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newData<span class="token punctuation">.</span>inputValue<span class="token punctuation">)</span>      newData<span class="token punctuation">.</span>inputValue <span class="token operator">=</span> <span class="token string">''</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> newData  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 这里就是删除方法,必须返回新数据</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> DELETE_ITEM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    newData<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> newData  <span class="token punctuation">}</span>  <span class="token keyword">return</span> state<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-actiontype-js-和-actioncreater-js"><a href="#6-actiontype-js-和-actioncreater-js" class="headerlink" title="(6) actiontype.js 和 actioncreater.js"></a>(6) actiontype.js 和 actioncreater.js</h2><ul><li>actioncreater.js</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> CHANGE_VALUE<span class="token punctuation">,</span> CLICK_CHANGE<span class="token punctuation">,</span> DELETE_ITEM <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actiontypes'</span><span class="token keyword">export</span> <span class="token keyword">const</span> ACTION_CHANGE_VALUE <span class="token operator">=</span> value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    type<span class="token punctuation">:</span> CHANGE_VALUE<span class="token punctuation">,</span>    value  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">const</span> ACTION_CLICK_CHANGE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    type<span class="token punctuation">:</span> CLICK_CHANGE  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">const</span> ACTION_DELETE_ITEM <span class="token operator">=</span> value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    type<span class="token punctuation">:</span> DELETE_ITEM<span class="token punctuation">,</span>    value  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>actiontype.js</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> CHANGE_VALUE <span class="token operator">=</span> <span class="token string">'change_value'</span><span class="token keyword">export</span> <span class="token keyword">const</span> CLICK_CHANGE <span class="token operator">=</span> <span class="token string">'click_change'</span><span class="token keyword">export</span> <span class="token keyword">const</span> DELETE_ITEM <span class="token operator">=</span> <span class="token string">'delete_item'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="7-在组件里面使用"><a href="#7-在组件里面使用" class="headerlink" title="(7)在组件里面使用"></a>(7)在组件里面使用</h2><ul><li>在构造函数里面监听数据的改变</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//获取仓库的数据就是store.getState()</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 输出的结果就是indexValue,list</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span>storechange <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storechange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//监听,事件里面更新数据</span>    store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>storechange<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//方法里面直接更新数据</span>  <span class="token function">storechange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>不推荐使用 saga 使用 thunk 足以</li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(Redux thunk 版本)(十五)</title>
      <link href="/2019/12/07/reactbasic15/"/>
      <url>/2019/12/07/reactbasic15/</url>
      
        <content type="html"><![CDATA[<h1 id="React-基础笔记-Redux-thunk-版本-十五"><a href="#React-基础笔记-Redux-thunk-版本-十五" class="headerlink" title="React 基础笔记(Redux thunk 版本)(十五)"></a>React 基础笔记(Redux thunk 版本)(十五)</h1><blockquote><p>React-redux 最主要的作用就是让 action 返回内容除了对象还可以是方法</p></blockquote><h2 id="1-安装-redux"><a href="#1-安装-redux" class="headerlink" title="(1) 安装 redux"></a>(1) 安装 redux</h2><pre class="line-numbers language-javascript"><code class="language-javascript"> npm i redux <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-安装-redux-thunk-插件"><a href="#2-安装-redux-thunk-插件" class="headerlink" title="(2) 安装 redux-thunk 插件"></a>(2) 安装 redux-thunk 插件</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i redux<span class="token operator">-</span>thunk <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="3-使用中间件改变仓库-store-下面的-index-js"><a href="#3-使用中间件改变仓库-store-下面的-index-js" class="headerlink" title="(3) 使用中间件改变仓库 store 下面的 index.js"></a>(3) 使用中间件改变仓库 store 下面的 index.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore<span class="token punctuation">,</span> applyMiddleware<span class="token punctuation">,</span> compose <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux'</span><span class="token keyword">import</span> thunk <span class="token keyword">from</span> <span class="token string">'redux-thunk'</span><span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">'./reducer'</span><span class="token keyword">const</span> middleware <span class="token operator">=</span> <span class="token punctuation">[</span>thunk<span class="token punctuation">]</span><span class="token keyword">const</span> composeEnhancers <span class="token operator">=</span>  <span class="token keyword">typeof</span> window <span class="token operator">===</span> <span class="token string">'object'</span> <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>__REDUX_DEVTOOLS_EXTENSION_COMPOSE__    <span class="token operator">?</span> window<span class="token punctuation">.</span><span class="token function">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">:</span> compose<span class="token keyword">const</span> enhancer <span class="token operator">=</span> <span class="token function">composeEnhancers</span><span class="token punctuation">(</span>  <span class="token function">applyMiddleware</span><span class="token punctuation">(</span><span class="token operator">...</span>middleware<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// other store enhancers if any</span><span class="token punctuation">)</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span> enhancer<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> store<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-创建-reducer-文件他里面接受两个参数-state-action-state-就是获取所有的公共数据"><a href="#4-创建-reducer-文件他里面接受两个参数-state-action-state-就是获取所有的公共数据" class="headerlink" title="(4) 创建 reducer 文件他里面接受两个参数(state,action) state 就是获取所有的公共数据"></a>(4) 创建 reducer 文件他里面接受两个参数(state,action) state 就是获取所有的公共数据</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> CHANGE_VALUE<span class="token punctuation">,</span> CLICK_CHANGE<span class="token punctuation">,</span> DELETE_ITEM <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actiontypes'</span><span class="token keyword">const</span> defaultState <span class="token operator">=</span> <span class="token punctuation">{</span>  inputValue<span class="token punctuation">:</span> <span class="token string">'123'</span><span class="token punctuation">,</span>  list<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token string">'Racing car sprays burning fuel into crowd.'</span><span class="token punctuation">,</span>    <span class="token string">'Japanese princess to wed commoner.'</span><span class="token punctuation">,</span>    <span class="token string">'Australian walks 100km after outback crash.'</span><span class="token punctuation">,</span>    <span class="token string">'Man charged over missing wedding girl.'</span><span class="token punctuation">,</span>    <span class="token string">'Los Angeles battles huge wildfires.'</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>state <span class="token operator">=</span> defaultState<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//这里判断action的type然后在返回state</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> CHANGE_VALUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newresult <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//必须要重新生成一个新的对象,也不能使用Object.asign这样有的时候不起作用,而且每个判断里面必须有返回值</span>    newresult<span class="token punctuation">.</span>inputValue <span class="token operator">=</span> action<span class="token punctuation">.</span>value    <span class="token keyword">return</span> newresult  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> CLICK_CHANGE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newData<span class="token punctuation">.</span>inputValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      newData<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newData<span class="token punctuation">.</span>inputValue<span class="token punctuation">)</span>      newData<span class="token punctuation">.</span>inputValue <span class="token operator">=</span> <span class="token string">''</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> newData  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 这里就是删除方法,必须返回新数据</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> DELETE_ITEM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    newData<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> newData  <span class="token punctuation">}</span>  <span class="token keyword">return</span> state<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-创建子弹两个文件-actiontypes-js-和-actionCreater-js-actionCreater-js-里面可以返回一个方法"><a href="#5-创建子弹两个文件-actiontypes-js-和-actionCreater-js-actionCreater-js-里面可以返回一个方法" class="headerlink" title="(5) 创建子弹两个文件 actiontypes.js 和 actionCreater.js ,actionCreater.js 里面可以返回一个方法"></a>(5) 创建子弹两个文件 actiontypes.js 和 actionCreater.js ,actionCreater.js 里面可以返回一个方法</h2><ul><li>actiontypes.js 可以理解为子弹名称</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> CHANGE_VALUE <span class="token operator">=</span> <span class="token string">'change_value'</span><span class="token keyword">export</span> <span class="token keyword">const</span> CLICK_CHANGE <span class="token operator">=</span> <span class="token string">'click_change'</span><span class="token keyword">export</span> <span class="token keyword">const</span> DELETE_ITEM <span class="token operator">=</span> <span class="token string">'delete_item'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>actionCreater.js 创建子弹</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> ACTION_INIT_LIST <span class="token operator">=</span> value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    type<span class="token punctuation">:</span> CHANGE_VALUE<span class="token punctuation">,</span>    value  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//利用redux-thunk 返回方法</span><span class="token keyword">export</span> <span class="token keyword">const</span> ACTION_METHOD_INIT <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> dispatch <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/api/data1'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>      <span class="token keyword">let</span> value <span class="token operator">=</span> res<span class="token punctuation">.</span>data <span class="token comment" spellcheck="true">//获取到数据</span>      <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">ACTION_INIT_LIST</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//把数据封装到actions里面</span>      <span class="token function">dispatch</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//然后发射出去</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-组件里面发射出去"><a href="#6-组件里面发射出去" class="headerlink" title="(6) 组件里面发射出去"></a>(6) 组件里面发射出去</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//先引入子弹</span><span class="token keyword">import</span> <span class="token punctuation">{</span>  ACTION_CHANGE_VALUE<span class="token punctuation">,</span>  ACTION_CLICK_CHANGE<span class="token punctuation">,</span>  ACTION_DELETE_ITEM<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./store/actionCreater'</span> <span class="token operator">&lt;</span>Button  type<span class="token operator">=</span><span class="token string">"primary"</span>  style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token string">'150px'</span><span class="token punctuation">,</span>    height<span class="token punctuation">:</span> <span class="token string">'30px'</span><span class="token punctuation">,</span>    marginTop<span class="token punctuation">:</span> <span class="token string">'20px'</span><span class="token punctuation">,</span>    marginLeft<span class="token punctuation">:</span> <span class="token string">'50px'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handClick<span class="token punctuation">}</span><span class="token operator">></span>  请输入文字<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span> <span class="token comment" spellcheck="true">// 发射出去子弹</span> <span class="token function">handClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">ACTION_METHOD_INIT</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-组件里面使用的时候"><a href="#7-组件里面使用的时候" class="headerlink" title="(7)组件里面使用的时候"></a>(7)组件里面使用的时候</h3><ul><li>在构造函数里面监听数据的改变</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//获取仓库的数据就是store.getState()</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 输出的结果就是indexValue,list</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">this</span><span class="token punctuation">.</span>storechange <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storechange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//监听,事件里面更新数据</span>    store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>storechange<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//方法里面直接更新数据</span>  <span class="token function">storechange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>常用方法</li></ol><ul><li><p>store.dispatch(action) 发射出去 action</p></li><li><p>store.getState() 获取 redux 数据</p></li><li><p>store.subscribe() 监听数据变化的</p></li></ul><ol start="2"><li><p>创建公共数据流程</p></li><li><p>redux 里面可以返回一个函数 里面必须有 dispatch 发射出去</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(Redux 基础版本)(十四)</title>
      <link href="/2019/12/06/reactbasic14/"/>
      <url>/2019/12/06/reactbasic14/</url>
      
        <content type="html"><![CDATA[<h2 id="Redux-就是存放公共数据的地方"><a href="#Redux-就是存放公共数据的地方" class="headerlink" title="Redux 就是存放公共数据的地方"></a>Redux 就是存放公共数据的地方</h2><blockquote><p>Redux 里面有使用插件的比如 thunk,saga,react-redux 也有什么都不使用的。</p></blockquote><h2 id="Redux-基础版本"><a href="#Redux-基础版本" class="headerlink" title="Redux 基础版本"></a>Redux 基础版本</h2><ol><li>首先要建立仓库架构体系</li></ol><ul><li><p>(store,reduce,actiontypes,actioncreater) 4 个文件</p></li><li><p>actioncreater 里面是方法，必须返回一个对象. 里面就两个属性 一个 type 一个 value,value 可以没有</p></li></ul><ol start="2"><li><p>派发 action,利用 store.dispatch(action) actions 里面必须有 return 返回数据</p></li><li><p>监听数据的改变 store.subscribe(this.事件)</p></li><li><p>然后在上面的事件中更新数据 this.setState(store.getState())</p></li></ol><h3 id="1-使用-Redux-就必须要提前安装"><a href="#1-使用-Redux-就必须要提前安装" class="headerlink" title="(1)使用 Redux 就必须要提前安装"></a>(1)使用 Redux 就必须要提前安装</h3><pre class="line-numbers language-javascript"><code class="language-javascript">npm i redux <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-在-src-目录下创建一个-store-文件夹-里面创建一个-index-js-文件作为公共仓库"><a href="#2-在-src-目录下创建一个-store-文件夹-里面创建一个-index-js-文件作为公共仓库" class="headerlink" title="(2)在 src 目录下创建一个 store 文件夹,里面创建一个 index.js 文件作为公共仓库"></a>(2)在 src 目录下创建一个 store 文件夹,里面创建一个 index.js 文件作为公共仓库</h3><ul><li>公共模板</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux'</span><span class="token comment" spellcheck="true">// 引入reducer</span><span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">'./reducer'</span><span class="token comment" spellcheck="true">// 放入reducer</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> store<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-创建-reducer-文件他里面接受两个参数-state-action-state-就是获取所有的公共数据"><a href="#3-创建-reducer-文件他里面接受两个参数-state-action-state-就是获取所有的公共数据" class="headerlink" title="(3)创建 reducer 文件他里面接受两个参数(state,action) state 就是获取所有的公共数据"></a>(3)创建 reducer 文件他里面接受两个参数(state,action) state 就是获取所有的公共数据</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> CHANGE_VALUE<span class="token punctuation">,</span> CLICK_CHANGE<span class="token punctuation">,</span> DELETE_ITEM <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actiontypes'</span><span class="token keyword">const</span> defaultState <span class="token operator">=</span> <span class="token punctuation">{</span>  inputValue<span class="token punctuation">:</span> <span class="token string">'123'</span><span class="token punctuation">,</span>  list<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token string">'Racing car sprays burning fuel into crowd.'</span><span class="token punctuation">,</span>    <span class="token string">'Japanese princess to wed commoner.'</span><span class="token punctuation">,</span>    <span class="token string">'Australian walks 100km after outback crash.'</span><span class="token punctuation">,</span>    <span class="token string">'Man charged over missing wedding girl.'</span><span class="token punctuation">,</span>    <span class="token string">'Los Angeles battles huge wildfires.'</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>state <span class="token operator">=</span> defaultState<span class="token punctuation">,</span> action<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//这里判断action的type然后在返回state</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> CHANGE_VALUE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newresult <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//必须要重新生成一个新的对象,也不能使用Object.asign这样有的时候不起作用,而且每个判断里面必须有返回值</span>    newresult<span class="token punctuation">.</span>inputValue <span class="token operator">=</span> action<span class="token punctuation">.</span>value    <span class="token keyword">return</span> newresult  <span class="token punctuation">}</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> CLICK_CHANGE<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>newData<span class="token punctuation">.</span>inputValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      newData<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newData<span class="token punctuation">.</span>inputValue<span class="token punctuation">)</span>      newData<span class="token punctuation">.</span>inputValue <span class="token operator">=</span> <span class="token string">''</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> newData  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">// 这里就是删除方法,必须返回新数据</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type <span class="token operator">===</span> DELETE_ITEM<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> newState <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">)</span>    newData<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> newData  <span class="token punctuation">}</span>  <span class="token keyword">return</span> state<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-调试的时候要借助-redux-工具-store-里面必须要加入这句话-window-开头的"><a href="#4-调试的时候要借助-redux-工具-store-里面必须要加入这句话-window-开头的" class="headerlink" title="(4)调试的时候要借助 redux 工具,store 里面必须要加入这句话 window 开头的"></a>(4)调试的时候要借助 redux 工具,store 里面必须要加入这句话 window 开头的</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'redux'</span><span class="token comment" spellcheck="true">//引入reducer</span><span class="token keyword">import</span> reducer <span class="token keyword">from</span> <span class="token string">'./reducer'</span><span class="token comment" spellcheck="true">//放入reducer</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>  reducer<span class="token punctuation">,</span>  window<span class="token punctuation">.</span>__REDUX_DEVTOOLS_EXTENSION__ <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">__REDUX_DEVTOOLS_EXTENSION__</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> store<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这样后端基本上完事，下面就是前台的</p></blockquote><h3 id="5-创建子弹两个文件-actiontypes-js-和-actionCreater-js"><a href="#5-创建子弹两个文件-actiontypes-js-和-actionCreater-js" class="headerlink" title="(5) 创建子弹两个文件 actiontypes.js 和 actionCreater.js"></a>(5) 创建子弹两个文件 actiontypes.js 和 actionCreater.js</h3><ul><li>actiontypes.js 可以理解为子弹名称</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> CHANGE_VALUE <span class="token operator">=</span> <span class="token string">'change_value'</span><span class="token keyword">export</span> <span class="token keyword">const</span> CLICK_CHANGE <span class="token operator">=</span> <span class="token string">'click_change'</span><span class="token keyword">export</span> <span class="token keyword">const</span> DELETE_ITEM <span class="token operator">=</span> <span class="token string">'delete_item'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>actioncreater.js 制造子弹(必须是方法，返回的是一个对象)</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token punctuation">{</span> CHANGE_VALUE<span class="token punctuation">,</span> CLICK_CHANGE<span class="token punctuation">,</span> DELETE_ITEM <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./actiontypes'</span><span class="token keyword">export</span> <span class="token keyword">const</span> ACTION_CHANGE_VALUE <span class="token operator">=</span> value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    type<span class="token punctuation">:</span> CHANGE_VALUE<span class="token punctuation">,</span>    value  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">const</span> ACTION_CLICK_CHANGE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    type<span class="token punctuation">:</span> CLICK_CHANGE  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">const</span> ACTION_DELETE_ITEM <span class="token operator">=</span> value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    type<span class="token punctuation">:</span> DELETE_ITEM<span class="token punctuation">,</span>    value  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-组件里面发射出去"><a href="#6-组件里面发射出去" class="headerlink" title="(6)组件里面发射出去"></a>(6)组件里面发射出去</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//先引入子弹</span><span class="token keyword">import</span> <span class="token punctuation">{</span>  ACTION_CHANGE_VALUE<span class="token punctuation">,</span>  ACTION_CLICK_CHANGE<span class="token punctuation">,</span>  ACTION_DELETE_ITEM<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./store/actionCreater'</span> <span class="token operator">&lt;</span>Button  type<span class="token operator">=</span><span class="token string">"primary"</span>  style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>    width<span class="token punctuation">:</span> <span class="token string">'150px'</span><span class="token punctuation">,</span>    height<span class="token punctuation">:</span> <span class="token string">'30px'</span><span class="token punctuation">,</span>    marginTop<span class="token punctuation">:</span> <span class="token string">'20px'</span><span class="token punctuation">,</span>    marginLeft<span class="token punctuation">:</span> <span class="token string">'50px'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handClick<span class="token punctuation">}</span><span class="token operator">></span>  请输入文字<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span> <span class="token comment" spellcheck="true">// 发射出去子弹</span> <span class="token function">handClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token function">ACTION_CLICK_CHANGE</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-组件里面使用的时候"><a href="#7-组件里面使用的时候" class="headerlink" title="(7)组件里面使用的时候"></a>(7)组件里面使用的时候</h3><ul><li>在构造函数里面监听数据的改变</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//获取仓库的数据就是store.getState()</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// 输出的结果就是indexValue,list</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>storechange <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>storechange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//监听,事件里面更新数据</span>    store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>storechange<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//方法里面直接更新数据</span>  <span class="token function">storechange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>常用方法</li></ol><ul><li><p>store.dispatch(action) 发射出去 action</p></li><li><p>store.getState() 获取 redux 数据</p></li><li><p>store.subscribe() 监听数据变化的</p></li></ul><ol start="2"><li>创建公共数据流程</li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(使用 PropTypes 进行类型检查)(十三)</title>
      <link href="/2019/12/05/reactbasic13/"/>
      <url>/2019/12/05/reactbasic13/</url>
      
        <content type="html"><![CDATA[<h2 id="要是想检查-PropTypes-必须配置-PropTypes-属性"><a href="#要是想检查-PropTypes-必须配置-PropTypes-属性" class="headerlink" title="要是想检查 PropTypes 必须配置 PropTypes 属性"></a>要是想检查 PropTypes 必须配置 PropTypes 属性</h2><ul><li>例如 子组件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">'prop-types'</span><span class="token keyword">class</span> <span class="token class-name">Greeting</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>Greeting<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>  name<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>propTypes 仅在开发模式下检查</p></blockquote><h2 id="PropTypes-验证不同类型的举例"><a href="#PropTypes-验证不同类型的举例" class="headerlink" title="PropTypes 验证不同类型的举例"></a>PropTypes 验证不同类型的举例</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> PropTypes <span class="token keyword">from</span> <span class="token string">'prop-types'</span>MyComponent<span class="token punctuation">.</span>propTypes <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 你可以将属性声明为 JS 原生类型，默认情况下</span>  <span class="token comment" spellcheck="true">// 这些属性都是可选的。</span>  optionalArray<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>array<span class="token punctuation">,</span>  optionalBool<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>bool<span class="token punctuation">,</span>  optionalFunc<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">,</span>  optionalNumber<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>  optionalObject<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>object<span class="token punctuation">,</span>  optionalString<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>  optionalSymbol<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>symbol<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 任何可被渲染的元素（包括数字、字符串、元素或数组）</span>  <span class="token comment" spellcheck="true">// (或 Fragment) 也包含这些类型。</span>  optionalNode<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>node<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 一个 React 元素。</span>  optionalElement<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>element<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 一个 React 元素类型（即，MyComponent）。</span>  optionalElementType<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>elementType<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 你也可以声明 prop 为类的实例，这里使用</span>  <span class="token comment" spellcheck="true">// JS 的 instanceof 操作符。</span>  optionalMessage<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>Message<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 你可以让你的 prop 只能是特定的值，指定它为</span>  <span class="token comment" spellcheck="true">// 枚举类型。</span>  optionalEnum<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'News'</span><span class="token punctuation">,</span> <span class="token string">'Photos'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 一个对象可以是几种类型中的任意一个类型</span>  optionalUnion<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">oneOfType</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>    PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">,</span>    PropTypes<span class="token punctuation">.</span><span class="token function">instanceOf</span><span class="token punctuation">(</span>Message<span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 可以指定一个数组由某一类型的元素组成</span>  optionalArrayOf<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 可以指定一个对象由某一类型的值组成</span>  optionalObjectOf<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">objectOf</span><span class="token punctuation">(</span>PropTypes<span class="token punctuation">.</span>number<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 可以指定一个对象由特定的类型值组成</span>  optionalObjectWithShape<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">shape</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    color<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>    fontSize<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// An object with warnings on extra properties</span>  optionalObjectWithStrictShape<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">exact</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    name<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>string<span class="token punctuation">,</span>    quantity<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>number  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 你可以在任何 PropTypes 属性后面加上 `isRequired` ，确保</span>  <span class="token comment" spellcheck="true">// 这个 prop 没有被提供时，会打印警告信息。</span>  requiredFunc<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>func<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 任意类型的数据</span>  requiredAny<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span>any<span class="token punctuation">.</span>isRequired<span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 你可以指定一个自定义验证器。它在验证失败时应返回一个 Error 对象。</span>  <span class="token comment" spellcheck="true">// 请不要使用 `console.warn` 或抛出异常，因为这在 `onOfType` 中不会起作用。</span>  customProp<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> propName<span class="token punctuation">,</span> componentName<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex">/matchme/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>props<span class="token punctuation">[</span>propName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>        'Invalid prop <span class="token template-string"><span class="token string">`' +          propName +          '`</span></span> supplied to' <span class="token operator">+</span>          ' <span class="token template-string"><span class="token string">`' +          componentName +          '`</span></span><span class="token punctuation">.</span> Validation failed<span class="token punctuation">.</span>'      <span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 你也可以提供一个自定义的 `arrayOf` 或 `objectOf` 验证器。</span>  <span class="token comment" spellcheck="true">// 它应该在验证失败时返回一个 Error 对象。</span>  <span class="token comment" spellcheck="true">// 验证器将验证数组或对象中的每个值。验证器的前两个参数</span>  <span class="token comment" spellcheck="true">// 第一个是数组或对象本身</span>  <span class="token comment" spellcheck="true">// 第二个是他们当前的键。</span>  customArrayProp<span class="token punctuation">:</span> PropTypes<span class="token punctuation">.</span><span class="token function">arrayOf</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>    propValue<span class="token punctuation">,</span>    key<span class="token punctuation">,</span>    componentName<span class="token punctuation">,</span>    location<span class="token punctuation">,</span>    propFullName  <span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex">/matchme/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>propValue<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>        'Invalid prop <span class="token template-string"><span class="token string">`' +          propFullName +          '`</span></span> supplied to' <span class="token operator">+</span>          ' <span class="token template-string"><span class="token string">`' +          componentName +          '`</span></span><span class="token punctuation">.</span> Validation failed<span class="token punctuation">.</span>'      <span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>使用 PropTypes 对传递过来的数据进行验证</li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(补充说明 ref,语义等等)(十二)</title>
      <link href="/2019/12/04/reactbasic12/"/>
      <url>/2019/12/04/reactbasic12/</url>
      
        <content type="html"><![CDATA[<h2 id="Fragment-语义化标签"><a href="#Fragment-语义化标签" class="headerlink" title="Fragment 语义化标签"></a>Fragment 语义化标签</h2><ul><li>当最外层不想用 div 又必须使用包裹层的时候</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">function</span> <span class="token function">ListItem</span><span class="token punctuation">(</span><span class="token punctuation">{</span> item <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>      <span class="token operator">&lt;</span>dt<span class="token operator">></span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>term<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>dt<span class="token operator">></span>      <span class="token operator">&lt;</span>dd<span class="token operator">></span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>dd<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">Glossary</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>dl<span class="token operator">></span>      <span class="token punctuation">{</span>props<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>        <span class="token operator">&lt;</span>ListItem item<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span> key<span class="token operator">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>dl<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="htmlFor-比如-label-不能直接写-for"><a href="#htmlFor-比如-label-不能直接写-for" class="headerlink" title="htmlFor 比如 label 不能直接写 for"></a>htmlFor 比如 label 不能直接写 for</h2><ul><li>要用 htmlFor 来代替</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">htmlFor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>namedInput<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>namedInput<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="ref-来控制节点"><a href="#ref-来控制节点" class="headerlink" title="ref 来控制节点"></a>ref 来控制节点</h2><h3 id="1-给元素绑定-ref-ref-里面必须是方法"><a href="#1-给元素绑定-ref-ref-里面必须是方法" class="headerlink" title="1.给元素绑定 ref,ref 里面必须是方法"></a>1.给元素绑定 ref,ref 里面必须是方法</h3><pre class="line-numbers language-html"><code class="language-html">&lt;input type="text" value={this.state.value} onChange = {this.changeall}ref={(content)=>{this.content=content}} ><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-使用的时候"><a href="#2-使用的时候" class="headerlink" title="2. 使用的时候"></a>2. 使用的时候</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">changeall</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">)</span>  <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>content<span class="token punctuation">.</span>value  <span class="token comment" spellcheck="true">/*这种情况就是异步操作*/</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      value    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Context-可以直接传递很多层"><a href="#Context-可以直接传递很多层" class="headerlink" title="Context 可以直接传递很多层"></a>Context 可以直接传递很多层</h2><blockquote><p>有的时候父组件给子组件一层层传递数据非常麻烦，所以可以利用 Context 来传递</p></blockquote><h3 id="1-创建上下文的组件"><a href="#1-创建上下文的组件" class="headerlink" title="1. 创建上下文的组件"></a>1. 创建上下文的组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> <span class="token punctuation">{</span> Provider<span class="token punctuation">,</span> Consumer <span class="token punctuation">}</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span>defaultValue<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-父组件放置共享数据"><a href="#2-父组件放置共享数据" class="headerlink" title="2. 父组件放置共享数据"></a>2. 父组件放置共享数据</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">/*要共享的数据*/</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token comment" spellcheck="true">/*里面是要渲染的东西比如子组件*/</span><span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-子组件要使用父组件的数据了"><a href="#3-子组件要使用父组件的数据了" class="headerlink" title="3.子组件要使用父组件的数据了"></a>3.子组件要使用父组件的数据了</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>Consumer<span class="token operator">></span>  <span class="token punctuation">{</span>value <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/*value就是父组件传递过来的数据子组件可以使用*/</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Consumer<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实例的例子"><a href="#实例的例子" class="headerlink" title="实例的例子"></a>实例的例子</h2><h3 id="1-App-js-父组件"><a href="#1-App-js-父组件" class="headerlink" title="1. App.js 父组件"></a>1. App.js 父组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//App.js</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> Son <span class="token keyword">from</span> <span class="token string">'./son'</span> <span class="token comment" spellcheck="true">//引入子组件</span><span class="token comment" spellcheck="true">// 创建一个 theme Context,</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span> Provider<span class="token punctuation">,</span> Consumer <span class="token punctuation">}</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createContext</span><span class="token punctuation">(</span><span class="token string">'默认名称'</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">'小人头'</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token comment" spellcheck="true">//Provider共享容器 接收一个name属性</span>      <span class="token operator">&lt;</span>Provider value<span class="token operator">=</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div          style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>            border<span class="token punctuation">:</span> <span class="token string">'1px solid red'</span><span class="token punctuation">,</span>            width<span class="token punctuation">:</span> <span class="token string">'30%'</span><span class="token punctuation">,</span>            margin<span class="token punctuation">:</span> <span class="token string">'50px auto'</span><span class="token punctuation">,</span>            textAlign<span class="token punctuation">:</span> <span class="token string">'center'</span>          <span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token operator">></span>          <span class="token operator">&lt;</span>p<span class="token operator">></span>父组件定义的值<span class="token punctuation">:</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>          <span class="token operator">&lt;</span>Son <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Provider<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-son-js-子组件"><a href="#2-son-js-子组件" class="headerlink" title="2.son.js 子组件"></a>2.son.js 子组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//son.js 子类</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Consumer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./index'</span> <span class="token comment" spellcheck="true">//引入父组件的Consumer容器</span><span class="token keyword">import</span> Grandson <span class="token keyword">from</span> <span class="token string">'./grandson.js'</span> <span class="token comment" spellcheck="true">//引入子组件</span><span class="token keyword">function</span> <span class="token function">Son</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">//Consumer容器,可以拿到上文传递下来的name属性,并可以展示对应的值</span>    <span class="token operator">&lt;</span>Consumer<span class="token operator">></span>      <span class="token punctuation">{</span>name <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>        <span class="token operator">&lt;</span>div          style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>            border<span class="token punctuation">:</span> <span class="token string">'1px solid blue'</span><span class="token punctuation">,</span>            width<span class="token punctuation">:</span> <span class="token string">'60%'</span><span class="token punctuation">,</span>            margin<span class="token punctuation">:</span> <span class="token string">'20px auto'</span><span class="token punctuation">,</span>            textAlign<span class="token punctuation">:</span> <span class="token string">'center'</span>          <span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token operator">></span>          <span class="token operator">&lt;</span>p<span class="token operator">></span>子组件。获取父组件的值<span class="token punctuation">:</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>          <span class="token punctuation">{</span><span class="token comment" spellcheck="true">/* 孙组件内容 */</span><span class="token punctuation">}</span>          <span class="token operator">&lt;</span>Grandson <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>Consumer<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Son<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-grandson-js-孙组件"><a href="#3-grandson-js-孙组件" class="headerlink" title="3. grandson.js 孙组件"></a>3. grandson.js 孙组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//grandson.js 孙类</span><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> <span class="token punctuation">{</span> Consumer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'./index'</span> <span class="token comment" spellcheck="true">//引入父组件的Consumer容器</span><span class="token keyword">function</span> <span class="token function">Grandson</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">//Consumer容器,可以拿到上文传递下来的name属性,并可以展示对应的值</span>    <span class="token operator">&lt;</span>Consumer<span class="token operator">></span>      <span class="token punctuation">{</span>name <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>        <span class="token operator">&lt;</span>div          style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>            border<span class="token punctuation">:</span> <span class="token string">'1px solid green'</span><span class="token punctuation">,</span>            width<span class="token punctuation">:</span> <span class="token string">'60%'</span><span class="token punctuation">,</span>            margin<span class="token punctuation">:</span> <span class="token string">'50px auto'</span><span class="token punctuation">,</span>            textAlign<span class="token punctuation">:</span> <span class="token string">'center'</span>          <span class="token punctuation">}</span><span class="token punctuation">}</span>        <span class="token operator">></span>          <span class="token operator">&lt;</span>p<span class="token operator">></span>孙组件。获取传递下来的值<span class="token punctuation">:</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>Consumer<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Grandson<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>Fragment 可以当个包裹标签</p></li><li><p>ref 可以控制接待你</p></li><li><p>爷爷组件给孙组件传值,利用 Context 这样父给子，子给孙.没有必要一级一级传递</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(卡槽)(十一)</title>
      <link href="/2019/12/03/reactbasic11/"/>
      <url>/2019/12/03/reactbasic11/</url>
      
        <content type="html"><![CDATA[<h2 id="不具名卡槽-直接使用"><a href="#不具名卡槽-直接使用" class="headerlink" title="不具名卡槽,直接使用"></a>不具名卡槽,直接使用</h2><blockquote><p>在 React 中要是想传递 html 必须借助 children prop 来渲染</p></blockquote><ul><li>例如父组件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">FancyBorder</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'FancyBorder-'</span> <span class="token operator">+</span> props<span class="token punctuation">.</span>color<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token comment" spellcheck="true">/*重点来了*/</span>      <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子组件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">WelcomeDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>FancyBorder color<span class="token operator">=</span><span class="token string">"blue"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>h1 className<span class="token operator">=</span><span class="token string">"Dialog-title"</span><span class="token operator">></span>welcome<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>      <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"Dialog-message"</span><span class="token operator">></span>Thank you <span class="token keyword">for</span> you visting<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>FancyBorder<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这样的话子组件通过传递 props.children 来渲染父组件传递的 html</p></blockquote><h2 id="带有名称的卡槽"><a href="#带有名称的卡槽" class="headerlink" title="带有名称的卡槽"></a>带有名称的卡槽</h2><p>有的时候我们要传递的 html 不止一处,所以需要命名卡槽</p><blockquote><p>通过传递 left,right</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">SolitPane</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token keyword">return</span> <span class="token punctuation">(</span>     <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"SplitPane"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"left"</span><span class="token operator">></span>          <span class="token punctuation">{</span>props<span class="token punctuation">.</span>left<span class="token punctuation">}</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>         <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"right"</span><span class="token operator">></span>        <span class="token punctuation">{</span>props<span class="token punctuation">.</span>right<span class="token punctuation">}</span>         <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>   <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>SolitPane    left<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>Contacts<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span>    right<span class="token operator">=</span><span class="token punctuation">{</span><span class="token operator">&lt;</span>Chat<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span>    <span class="token operator">></span> <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="卡槽和属性一起传递"><a href="#卡槽和属性一起传递" class="headerlink" title="卡槽和属性一起传递"></a>卡槽和属性一起传递</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Dialog</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>FancyBorder color<span class="token operator">=</span><span class="token string">"blue"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>h1 className<span class="token operator">=</span><span class="token string">"Dialog-title"</span><span class="token operator">></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>      <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"Dialog-message"</span><span class="token operator">></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>      <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>FancyBorder<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">SignUpDialog</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleSignUp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleSignUp<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> login<span class="token punctuation">:</span> <span class="token string">''</span> <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Dialog        title<span class="token operator">=</span><span class="token string">"Mars Exploration Program"</span>        message<span class="token operator">=</span><span class="token string">"How should we refer to you?"</span>      <span class="token operator">></span>        <span class="token operator">&lt;</span>input value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>login<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSignUp<span class="token punctuation">}</span><span class="token operator">></span>Sign Me Up<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Dialog<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleChange</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> login<span class="token punctuation">:</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleSignUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`Welcome aboard, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>login<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!`</span></span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>利用 props.children 传递 html</p></li><li><p>利用属性起名字 left={<xxx/>} 来传递</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(父子组件传值)(十)</title>
      <link href="/2019/12/02/reactbasic10/"/>
      <url>/2019/12/02/reactbasic10/</url>
      
        <content type="html"><![CDATA[<h2 id="1-利用-props"><a href="#1-利用-props" class="headerlink" title="(1) 利用 props"></a>(1) 利用 props</h2><blockquote><p>React 中 props 在 react 中父给子传递的都是属性,方法都可以传递,子属性要是想改变父组件的值只有调用父组件的方法，而不是发射出去事件让父组件监听</p></blockquote><ul><li>父组件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> <span class="token string">'./Todolist.css'</span><span class="token keyword">import</span> TodoItem <span class="token keyword">from</span> <span class="token string">'./Todoitem.js'</span> <span class="token comment" spellcheck="true">// 引入子组件</span><span class="token keyword">class</span> <span class="token class-name">Todolist</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      value<span class="token punctuation">:</span> <span class="token string">'请输入内容'</span><span class="token punctuation">,</span>      list<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>        <span class="token operator">&lt;</span>input          type<span class="token operator">=</span><span class="token string">"text"</span>          value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">}</span>          onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>changeall<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>button className<span class="token operator">=</span><span class="token string">"btn"</span> onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>dianji<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span>          请点击        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>        <span class="token operator">&lt;</span>ul<span class="token operator">></span>          <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>              <span class="token operator">&lt;</span>TodoItem                data<span class="token operator">=</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span>                index<span class="token operator">=</span><span class="token punctuation">{</span>index<span class="token punctuation">}</span>                deleteItem<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>deleteDate<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token comment" spellcheck="true">//props绑定事件,必须把bind this传进来</span>              <span class="token operator">/</span><span class="token operator">></span>            <span class="token punctuation">)</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">dianji</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>list<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">]</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      list<span class="token punctuation">:</span> result<span class="token punctuation">,</span>      value<span class="token punctuation">:</span> <span class="token string">''</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">changeall</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> value <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      value    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">deleteDate</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>list<span class="token punctuation">]</span>    result<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//删除数组制定项</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      list<span class="token punctuation">:</span> result    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Todolist<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子组件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component<span class="token punctuation">,</span> Fragment <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">class</span> <span class="token class-name">Todoitem</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>deleteData <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>deleteData<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>Fragment<span class="token operator">></span>        <span class="token operator">&lt;</span>li onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>deleteData<span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>data<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>Fragment<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">deleteData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>index    <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">deleteItem</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> Todoitem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>利用 props 进行给子组件传值</li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础学习---表单(九)</title>
      <link href="/2019/12/01/reactbasic9/"/>
      <url>/2019/12/01/reactbasic9/</url>
      
        <content type="html"><![CDATA[<h2 id="React-里-input"><a href="#React-里-input" class="headerlink" title="React 里 input"></a>React 里 input</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">NameForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      value<span class="token punctuation">:</span> <span class="token string">""</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">handleChange</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      value<span class="token punctuation">:</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleSubmit</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">{</span>   <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"提交的名字:"</span><span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>   event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span>label<span class="token operator">></span>名字<span class="token punctuation">:</span>      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>      <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"提交"</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>通过 value 属性绑定输入值,获取属性值的时候就是 e.target.value</p></blockquote><h2 id="textarea-标签"><a href="#textarea-标签" class="headerlink" title="textarea 标签"></a>textarea 标签</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">EssayForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      value<span class="token punctuation">:</span> <span class="token string">'请撰写一篇关于你喜欢的 DOM 元素的文章.'</span>    <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleChange</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">:</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleSubmit</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'提交的文章: '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token punctuation">}</span><span class="token operator">></span>        <span class="token operator">&lt;</span>label<span class="token operator">></span>          文章<span class="token punctuation">:</span>          <span class="token operator">&lt;</span>textarea value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"提交"</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="select-标签"><a href="#select-标签" class="headerlink" title="select 标签"></a>select 标签</h2><ul><li>React 由于 selected 属性缘故,椰子选项默认被选中,React 并不会使用 selected 属性.而在根 select 标签上使用 value 属性,而是在根 select 标签上使用 value 属性</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">FlavorForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> <span class="token string">'coconut'</span> <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleChange</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">:</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleSubmit</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'你喜欢的风味是: '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">)</span>    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>form onSubmit<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleSubmit<span class="token punctuation">}</span><span class="token operator">></span>        <span class="token operator">&lt;</span>label<span class="token operator">></span>          选择你喜欢的风味<span class="token punctuation">:</span>          <span class="token operator">&lt;</span>select value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>value<span class="token punctuation">}</span> onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleChange<span class="token punctuation">}</span><span class="token operator">></span>            <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">"grapefruit"</span><span class="token operator">></span>葡萄柚<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>            <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">"lime"</span><span class="token operator">></span>酸橙<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>            <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">"coconut"</span><span class="token operator">></span>椰子<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>            <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">"mango"</span><span class="token operator">></span>芒果<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"提交"</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="多个输入开始"><a href="#多个输入开始" class="headerlink" title="多个输入开始"></a>多个输入开始</h2><p>当需要处理多个 input 元素时候，我们可以给每个元素添加 name 属性,并让处理函数依据 event.target.name 的值选择要执行的操作</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Reservation</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      isGoing<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      numberOfGuests<span class="token punctuation">:</span> <span class="token number">2</span>    <span class="token punctuation">}</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleInputChange <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleInputChange<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleInputChange</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> target <span class="token operator">=</span> event<span class="token punctuation">.</span>target    <span class="token keyword">const</span> value <span class="token operator">=</span> target<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'checkbox'</span> <span class="token operator">?</span> target<span class="token punctuation">.</span>checked <span class="token punctuation">:</span> target<span class="token punctuation">.</span>value    <span class="token keyword">const</span> name <span class="token operator">=</span> target<span class="token punctuation">.</span>name    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      <span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">:</span> value    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>form<span class="token operator">></span>        <span class="token operator">&lt;</span>label<span class="token operator">></span>          参与<span class="token punctuation">:</span>          <span class="token operator">&lt;</span>input            name<span class="token operator">=</span><span class="token string">"isGoing"</span>            type<span class="token operator">=</span><span class="token string">"checkbox"</span>            checked<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isGoing<span class="token punctuation">}</span>            onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInputChange<span class="token punctuation">}</span>          <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>        <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>label<span class="token operator">></span>          来宾人数<span class="token punctuation">:</span>          <span class="token operator">&lt;</span>input            name<span class="token operator">=</span><span class="token string">"numberOfGuests"</span>            type<span class="token operator">=</span><span class="token string">"number"</span>            value<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>numberOfGuests<span class="token punctuation">}</span>            onChange<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleInputChange<span class="token punctuation">}</span>          <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>表单内的元素可以通过设置 value 属性来赋值</p></li><li><p>获取值 e.target.value</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础学习---列表 key(八)</title>
      <link href="/2019/11/30/reactbasic8/"/>
      <url>/2019/11/30/reactbasic8/</url>
      
        <content type="html"><![CDATA[<h2 id="渲染多个组件"><a href="#渲染多个组件" class="headerlink" title="渲染多个组件"></a>渲染多个组件</h2><p>你可以通过使用{}在 JSX 内构建一个元素集合</p><blockquote><p>我们使用 Javascript 中的 map()方法来遍历 numbers 数组.将数组中的每个元素变成 li 标签,最后我们将得到的数组赋值给 listItems</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">const</span> listItems <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>number <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们把整个 listItems 插入到 ul 元素中去,然后渲染 DOM</p><pre class="line-numbers language-javascript"><code class="language-javascript">ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>ul<span class="token operator">></span><span class="token punctuation">{</span>listItems<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="基础列表组件"><a href="#基础列表组件" class="headerlink" title="基础列表组件"></a>基础列表组件</h2><ul><li>渲染一个列表组件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">function</span> <span class="token function">NumberList</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> numbers <span class="token operator">=</span> props<span class="token punctuation">.</span>numbers  <span class="token keyword">const</span> listItems <span class="token operator">=</span> numbers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>number <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token punctuation">;</span><span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">{</span>number<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span>number<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>ul<span class="token operator">></span><span class="token punctuation">{</span>listItems<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  <span class="token operator">&lt;</span>NumberList numbers<span class="token operator">=</span><span class="token punctuation">{</span>numbers<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>列表循环,必须要有 key 否则会报错,Key 值必须是独一无二的</p></blockquote><h2 id="key-只是兄弟节点之间必须唯一"><a href="#key-只是兄弟节点之间必须唯一" class="headerlink" title="key 只是兄弟节点之间必须唯一"></a>key 只是兄弟节点之间必须唯一</h2><p>数组元素中使用的 key 在其兄弟节点中应该是独一无二的,当我们生成两个不同的数组时候,我们可以使用相同的 key 值</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Blog</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//左边第一个组件</span>  <span class="token keyword">const</span> sidebar <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>      <span class="token punctuation">{</span>props<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>post <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token punctuation">;</span><span class="token operator">&lt;</span>li key<span class="token operator">=</span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>  <span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//右边一个组件</span>  <span class="token keyword">const</span> content <span class="token operator">=</span> props<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>posts <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token punctuation">;</span><span class="token operator">&lt;</span>div key<span class="token operator">=</span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>id<span class="token punctuation">}</span><span class="token operator">></span>      <span class="token operator">&lt;</span>h3<span class="token operator">></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">></span>      <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">{</span>post<span class="token punctuation">.</span>content<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token punctuation">{</span>sidebar<span class="token punctuation">}</span>      <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">></span>      <span class="token punctuation">{</span>content<span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token punctuation">[</span>  <span class="token punctuation">{</span> id<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'Hello,world'</span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token string">'Welcome to learning'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> id<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string">'Hello,world'</span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token string">'Welcome to learning'</span> <span class="token punctuation">}</span><span class="token punctuation">]</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Blog posts<span class="token operator">=</span><span class="token punctuation">{</span>posts<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="在-JSX-中嵌入-map"><a href="#在-JSX-中嵌入-map" class="headerlink" title="在 JSX 中嵌入 map()"></a>在 JSX 中嵌入 map()</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">NumberList</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> numbers <span class="token operator">=</span> props<span class="token punctuation">.</span>numbers  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>      <span class="token punctuation">{</span>numbers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>number <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token punctuation">;</span><span class="token operator">&lt;</span>ListItem key<span class="token operator">=</span><span class="token punctuation">{</span>number<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样的话代码就很清晰，逻辑上非常清楚</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>循环的话能嵌套多个组件.{}里面也能写</p></li><li><p>循环的话必须有 key 值</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础学习---条件渲染(七)</title>
      <link href="/2019/11/29/reactbasic7/"/>
      <url>/2019/11/29/reactbasic7/</url>
      
        <content type="html"><![CDATA[<h2 id="在-React-中-你可以创建不用的组件来封装你各种行为-然后依据不用的状态-你只渲染对应状态下的部分内容"><a href="#在-React-中-你可以创建不用的组件来封装你各种行为-然后依据不用的状态-你只渲染对应状态下的部分内容" class="headerlink" title="在 React 中,你可以创建不用的组件来封装你各种行为,然后依据不用的状态,你只渲染对应状态下的部分内容"></a>在 React 中,你可以创建不用的组件来封装你各种行为,然后依据不用的状态,你只渲染对应状态下的部分内容</h2><blockquote><p>React 中的条件渲染和 JS 一样,使用 if 或者条件运算符去创建元素来表现当前的状态</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">UserGreeting</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Welcome back<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">GuestGreeting</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Please sign up<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在创建一个 Greeting 组件,它会依据用户是否登陆来决定显示上面哪个组件</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Greeting</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> result_flag <span class="token operator">=</span> props<span class="token punctuation">.</span>flag  <span class="token keyword">if</span> <span class="token punctuation">(</span>result_flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>UserGreeting <span class="token operator">/</span><span class="token operator">></span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>GuestGreeting <span class="token operator">/</span><span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Greeting flag<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实际效果"><a href="#实际效果" class="headerlink" title="实际效果"></a>实际效果</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Greeting</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> isLoggedIn <span class="token operator">=</span> props<span class="token punctuation">.</span>isLoggedIn  <span class="token keyword">if</span> <span class="token punctuation">(</span>isLoggedIn<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>UserGreeting <span class="token operator">/</span><span class="token operator">></span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>GuestGreeting <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">LoginControl</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleLoginClick <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleLoginClick<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleLogoutClick <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleLogoutClick<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> isLoggedIn<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">handleLoginClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isLoggedIn<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">handleLogoutClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> isLoggedIn<span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">const</span> isLoggedIn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isLoggedIn    <span class="token keyword">let</span> button <span class="token operator">=</span> <span class="token keyword">null</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>isLoggedIn<span class="token punctuation">)</span> <span class="token punctuation">{</span>      button <span class="token operator">=</span> <span class="token operator">&lt;</span>LogoutButton onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleLogoutClick<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      button <span class="token operator">=</span> <span class="token operator">&lt;</span>LoginButton onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleLoginClick<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>Greeting isLoggedIn<span class="token operator">=</span><span class="token punctuation">{</span>isLoggedIn<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>        <span class="token punctuation">{</span>button<span class="token punctuation">}</span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>LoginControl <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'example'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="与-amp-amp-逻辑运算符"><a href="#与-amp-amp-逻辑运算符" class="headerlink" title="与&amp;&amp;逻辑运算符"></a>与&amp;&amp;逻辑运算符</h2><p>通过花括号包裹代码,可以在 JSX 中嵌入任何表达式,这也包括了 js 逻辑与预算符</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Mailbox</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> unreadMessages <span class="token operator">=</span> props<span class="token punctuation">.</span>unreadMessages  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>      <span class="token punctuation">{</span>unreadMessages<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>You have <span class="token punctuation">{</span>unreadMessages<span class="token punctuation">.</span>length<span class="token punctuation">}</span> unread messages<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>      <span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'React'</span><span class="token punctuation">,</span> <span class="token string">'Re: React'</span><span class="token punctuation">,</span> <span class="token string">'Re:Re: React'</span><span class="token punctuation">]</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  <span class="token operator">&lt;</span>Mailbox unreadMessages<span class="token operator">=</span><span class="token punctuation">{</span>messages<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> isLoggedIn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isLoggedIn<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      The user is <span class="token operator">&lt;</span>b<span class="token operator">></span><span class="token punctuation">{</span>isLoggedIn <span class="token operator">?</span> <span class="token string">'currently'</span> <span class="token punctuation">:</span> <span class="token string">'not'</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>b<span class="token operator">></span> logged <span class="token keyword">in</span><span class="token punctuation">.</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>阻止条件渲染</p></blockquote><p>在极少数的情况下 要是 render 方法直接返回 null,从而不进行任何渲染</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">WarningBanner</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>props<span class="token punctuation">.</span>warn<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token keyword">null</span>  <span class="token punctuation">}</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"warning"</span><span class="token operator">></span>Warning<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>class 外面可以写方法传进来 props,渲染</li><li>if 判断</li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础学习---事件处理(六)</title>
      <link href="/2019/11/28/reactbasic6/"/>
      <url>/2019/11/28/reactbasic6/</url>
      
        <content type="html"><![CDATA[<h2 id="React-元素的事件处理和-DOM-元素相似-但是有一点不同"><a href="#React-元素的事件处理和-DOM-元素相似-但是有一点不同" class="headerlink" title="React 元素的事件处理和 DOM 元素相似,但是有一点不同"></a>React 元素的事件处理和 DOM 元素相似,但是有一点不同</h2><ol><li><p>React 事件的命名采用小驼峰式,而不是纯小写</p></li><li><p>使用 JSX 语法时你需要传一个函数作为事件处理函数，而不是一个字符串</p></li></ol><p>例如:传统的 HTML</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>activateLasers()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在 React 中则不同</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">onClick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{activateLasers}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  按钮<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>在 React 中你不能通过返回 false 来阻止默认行为,你必须使用 e.preventDefault()来阻止</p></blockquote><p>例如</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">handleClick</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"The Link was clicked"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"#"</span> onClick<span class="token operator">=</span><span class="token string">"handleClick"</span><span class="token operator">></span>      Click me    <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="特别注意-this-指向在使用事件以前必须要在-constructor-里面注册事件-绑定事件"><a href="#特别注意-this-指向在使用事件以前必须要在-constructor-里面注册事件-绑定事件" class="headerlink" title="特别注意 this 指向在使用事件以前必须要在 constructor 里面注册事件,绑定事件"></a>特别注意 this 指向在使用事件以前必须要在 constructor 里面注册事件,绑定事件</h2><blockquote><p>事件使用之前必须要绑定 this,要不然方法里面的 this 就是 undefined,绑定 this 写在构造函数里面</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Toggle</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      flag<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleClick <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleClick<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      flag<span class="token punctuation">:</span><span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleClick<span class="token punctuation">}</span><span class="token operator">></span>          点击我      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  <span class="token operator">&lt;</span>Toggle<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="向事件里面传递参数"><a href="#向事件里面传递参数" class="headerlink" title="向事件里面传递参数"></a>向事件里面传递参数</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Toggle</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      flag<span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>handleClick <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>handleClick<span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token function">handleClick</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      flag<span class="token punctuation">:</span><span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">handleClick</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>          点击我      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  <span class="token operator">&lt;</span>Toggle<span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>在 React 中不能在 React 中你不能通过返回 false 来阻止默认行为,你必须使用 e.preventDefault()来阻止</p></li><li><p>事件使用之前必须要绑定 this,要不然方法里面的 this 就是 undefined,绑定 this 写在构造函数里面</p></li><li><p>事件里面传入参数</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础学习---State&amp;生命周期(五)</title>
      <link href="/2019/11/27/reactbasic5/"/>
      <url>/2019/11/27/reactbasic5/</url>
      
        <content type="html"><![CDATA[<h2 id="State-与-props-类似-但是-State-是私有的-并且完全受控于当前组件"><a href="#State-与-props-类似-但是-State-是私有的-并且完全受控于当前组件" class="headerlink" title="State 与 props 类似,但是 State 是私有的,并且完全受控于当前组件"></a>State 与 props 类似,但是 State 是私有的,并且完全受控于当前组件</h2><h3 id="创建一个-class-组件"><a href="#创建一个-class-组件" class="headerlink" title="创建一个 class 组件"></a>创建一个 class 组件</h3><ol><li>创建一个同名的 ES6 class 并且继承于 React.Component</li><li>添加一个空的 render()方法</li><li>在 render 中使用 this.props 替换 props</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Clock</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span>world<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>It is <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每次组件更新时候 render 方法都会被调用,但只要在相同的 DOM 节点中渲染<Clock/>就仅有一个 Clock 组件的 class 实例被创建使用.这就使我们可以用 state 或者生命周期方法等很多其他特性</p><h3 id="向-class-组件中添加局部的-state"><a href="#向-class-组件中添加局部的-state" class="headerlink" title="向 class 组件中添加局部的 state"></a>向 class 组件中添加局部的 state</h3><ol><li>把 render()方法中的 this.props.date 替换成 this.state.date</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Clock</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span> world<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>It is <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>添加一个 class 构造函数,然后在该函数中为 this.state 赋初值</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Clock</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//通过props传递到父类的构造函数中</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span> date<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>      <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span> world<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>        <span class="token operator">&lt;</span>h2<span class="token operator">></span>It is <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>Clock <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="将生命周期方法添加到-Class-中"><a href="#将生命周期方法添加到-Class-中" class="headerlink" title="将生命周期方法添加到 Class 中"></a>将生命周期方法添加到 Class 中</h2><h3 id="生命周期函数指的是在特定的时候才能运行的函数，React-有八大生命周期函数"><a href="#生命周期函数指的是在特定的时候才能运行的函数，React-有八大生命周期函数" class="headerlink" title="生命周期函数指的是在特定的时候才能运行的函数，React 有八大生命周期函数"></a>生命周期函数指的是在特定的时候才能运行的函数，React 有八大生命周期函数</h3><ol><li><p>componentWillMount 组件在被挂载的时候执行 render 之前</p></li><li><p>componentDidMount 组件挂载之后执行 render 之后,这里一般放请求数据一些异步操作</p></li><li><p>shouldComponentUpdate 无论是 props 还是 state，组件被更新前一定会执行它。它必须有返回值,它就是开关要是 false 就不更新了,它里面有两个参数第一个 nextProps，第二个 nextState . nextProps 表示下一个要传递的父数据，nextState 表示下一个 State 改变,这样子组件里面的 render 就不会重新渲染</p></li></ol><blockquote><p>shouldComponentUpdate 只是对本组件使用要是 false 对于 props 来说它只是渲染了 props 当父组件除了 props 以外的元素更新的话，它不会在更新.要是对于 state 来说,他不会渲染。所以加个判断会比较好</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">,</span>nextState<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>nextProps<span class="token punctuation">.</span>xxx<span class="token operator">!=</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>xxx<span class="token punctuation">)</span>  <span class="token punctuation">{</span>       <span class="token keyword">return</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token boolean">false</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>componentWillUpdate 组件被更新前,并且 shouldComponentUpdate 返回 true 执行以后</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//只有shouldComponentUpdate</span><span class="token comment" spellcheck="true">// 组件被更新之前,并且shouldComponentUpdate返回true执行</span><span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"组件更新之前"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>componentDidUpdate 组件更新之后</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"组件更新之后"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="6"><li>componentWillReceiveProps(最难理解的)</li></ol><blockquote><p>当一个组件从父组件接受了参数，只要父组件的 render 函数被重新执行了(也就是大于第一次)子组件这个生命周期函数就执行</p></blockquote><ol start="7"><li>componentWillUnmount 组件被卸载</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"组件被卸载"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="8"><li>render 渲染节点的函数,里面必须有 return</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>       <span class="token operator">&lt;</span>h1<span class="token operator">></span>哈哈哈<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>生命周期的函数执行顺序</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//第一步  componentWillMount</span><span class="token comment" spellcheck="true">//第二步  componentDidMount</span><span class="token comment" spellcheck="true">//第三步  render</span><span class="token comment" spellcheck="true">//第四步  shouldComponentUpdate</span><span class="token comment" spellcheck="true">//第五步  componentWillUpdate</span><span class="token comment" spellcheck="true">//第六步  componentDidUpdate</span><span class="token comment" spellcheck="true">//第七步  componentWillReceiveProps</span><span class="token comment" spellcheck="true">//第八步  componentWillUnmount</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更新数据的时候必须要用-this-setState-来更新组件"><a href="#更新数据的时候必须要用-this-setState-来更新组件" class="headerlink" title="更新数据的时候必须要用 this.setState()来更新组件"></a>更新数据的时候必须要用 this.setState()来更新组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Clock</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//构造函数</span>  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>      date<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//更新数据 获取数据</span>  <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">let</span> _this <span class="token operator">=</span> <span class="token keyword">this</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>timeID <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      _this<span class="token punctuation">.</span><span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//卸载组件的时候清除定时器</span>  <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timeID<span class="token punctuation">)</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">//核心函数,利用setState改变</span>  <span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      date<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="正确的使用-setState"><a href="#正确的使用-setState" class="headerlink" title="正确的使用 setState"></a>正确的使用 setState</h2><h3 id="不要直接修改-State"><a href="#不要直接修改-State" class="headerlink" title="不要直接修改 State"></a>不要直接修改 State</h3><ul><li>例如:此代码不会重新渲染组件(错误)</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>commet <span class="token operator">=</span> <span class="token string">'Hello'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>(正确)而是使用 setState()</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  commet<span class="token punctuation">:</span> <span class="token string">'Hello'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>构造函数是唯一可以给 this.setState()赋值的地方</p></blockquote><h3 id="State-的更新是异步的"><a href="#State-的更新是异步的" class="headerlink" title="State 的更新是异步的"></a>State 的更新是异步的</h3><ul><li>因为 this.props 和 this.state 可能会异步更新,所以不要依赖他们的值来更新下一个状态</li></ul><p>比如下面的这个无法更新计数器(错误的)</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  count<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>counter <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>increment<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>setState 回调函数</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span>  <span class="token punctuation">{</span>    foo<span class="token punctuation">:</span> <span class="token number">123</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>所以只有在 setState()接受一个函数而不是一个对象,这个函数用上一个 state 作为第一个参数,将此次更新被应用时的 props 作为第二个参数</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> props<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  counter<span class="token punctuation">:</span> state<span class="token punctuation">.</span>counter <span class="token operator">+</span> props<span class="token punctuation">.</span>increment<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>上面使用了箭头函数,不过也可以使用普通函数</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    counter<span class="token punctuation">:</span> state<span class="token punctuation">.</span>counter <span class="token operator">+</span> props<span class="token punctuation">.</span>increment  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据向下流动的"><a href="#数据向下流动的" class="headerlink" title="数据向下流动的"></a>数据向下流动的</h2><blockquote><p>不管父组件或者子组件都无法知道某个组件是有状态还是无状态的,并且它们不关心它是函数组件还是 class 组件</p></blockquote><blockquote><p>组件可以选择把它的 state 作为 props 向下传递到它的子组件中</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>It is {this.state.data.toLocaleTimeString()}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>对于自定义组件同样使用</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormatteDate</span> <span class="token attr-name">date</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{this.state.date}<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>每一个组件里面必须要有构造函数 super(props)</p></li><li><p>生命周期函数</p></li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//第一步  componentWillMount</span><span class="token comment" spellcheck="true">//第二步  componentDidMount</span><span class="token comment" spellcheck="true">//第三步  render</span><span class="token comment" spellcheck="true">//第四步  shouldComponentUpdate</span><span class="token comment" spellcheck="true">//第五步  componentWillUpdate</span><span class="token comment" spellcheck="true">//第六步  componentDidUpdate</span><span class="token comment" spellcheck="true">//第七步  componentWillReceiveProps</span><span class="token comment" spellcheck="true">//第八步  componentWillUnmount</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li>单项数据流</li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础学习---组件&amp;Props(四)</title>
      <link href="/2019/11/26/reactbasic4/"/>
      <url>/2019/11/26/reactbasic4/</url>
      
        <content type="html"><![CDATA[<h2 id="组件的核心"><a href="#组件的核心" class="headerlink" title="组件的核心"></a>组件的核心</h2><blockquote><p>组件允许你将 UI 拆分成独立的可复用的代码片段,并且对每个片段进行独立构思。</p></blockquote><p>组件从概念上类似 JS 函数,它接受任意的入参(“props”),并返回用于描述页面展示内容的 React 元素</p><h2 id="函数组件与-class-组件"><a href="#函数组件与-class-组件" class="headerlink" title="函数组件与 class 组件"></a>函数组件与 class 组件</h2><h3 id="定义组件最简单的方式就是编写-JS-函数"><a href="#定义组件最简单的方式就是编写-JS-函数" class="headerlink" title="定义组件最简单的方式就是编写 JS 函数"></a>定义组件最简单的方式就是编写 JS 函数</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Welcome</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>该函数是一个有效的 React 组件,因为它接受唯一带有数据的”props”(代表属性)对象与并返回一个 React 元素,这类组件被称为”函数组件”,因为它本质就是 JS 函数</p></blockquote><h3 id="第二种方法还可以用-ES6-来定义组件"><a href="#第二种方法还可以用-ES6-来定义组件" class="headerlink" title="第二种方法还可以用 ES6 来定义组件"></a>第二种方法还可以用 ES6 来定义组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Welcome</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span>  <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面两种方法在 React 里是等效的</p><h2 id="渲染组件"><a href="#渲染组件" class="headerlink" title="渲染组件"></a>渲染组件</h2><h3 id="React-也可以让用户自定义组件"><a href="#React-也可以让用户自定义组件" class="headerlink" title="React 也可以让用户自定义组件"></a>React 也可以让用户自定义组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Welcome</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">}</span><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>Welcome name<span class="token operator">=</span><span class="token string">"Sara"</span> <span class="token operator">/</span><span class="token operator">></span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码最后的渲染结果就是 Sara</p><ol><li><p>调用 ReactDOM.render()函数传入<Welcome name="Sara">作为参数</p></li><li><p>React 调用 Welcome 组件,并将{name:’Sara’}作为 props 传入</p></li><li><p>Welcome 组件将<code>&lt;h1&gt;Hello,Sara&lt;/h1&gt;</code>作为返回值</p></li><li><p>ReactDOM 将 DOM 高效的更新为<code>&lt;h1&gt;Hello,Sata&lt;/h1&gt;</code></p></li></ol><blockquote><p>特别注意: 组件名称必须以大写字母开头,React 会将以小写字母开头的组件视为原生 DOM 标签,例如<code>&lt;div/&gt;</code>代表 HTML 的 div 标签,而<Welcome/>则代表了一个组件,并且需要在作用域内使用 Welcome</p></blockquote><h2 id="组合组件"><a href="#组合组件" class="headerlink" title="组合组件"></a>组合组件</h2><ul><li><p>组件可以在其输出中引用其他组件。这就可以让我们用同一组件来抽象出任何层次的细节。按钮，表单，对话框。甚至整个屏幕的内容.在 React 应用程序中,这些都可以当作组件</p></li><li><p>例如我们可以多次渲染组件</p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Welcome</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>Welcome name<span class="token operator">=</span><span class="token string">"Sara"</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Welcome name<span class="token operator">=</span><span class="token string">"Cahal"</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Welcome name<span class="token operator">=</span><span class="token string">"Edite"</span> <span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>App <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="提取组件"><a href="#提取组件" class="headerlink" title="提取组件"></a>提取组件</h2><h3 id="全部组件"><a href="#全部组件" class="headerlink" title="全部组件"></a>全部组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Comment</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Comment"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"UserInfo"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>img          className<span class="token operator">=</span><span class="token string">"Avatar"</span>          src<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>author<span class="token punctuation">.</span>avatarUrl<span class="token punctuation">}</span>          alt<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>author<span class="token punctuation">.</span>name<span class="token punctuation">}</span>        <span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"UserInfo-name"</span><span class="token operator">></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>author<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Commet-text"</span><span class="token operator">></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Commet-date"</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token function">formatDate</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个组件用于描述一个社交网站的评论功能,它接收 author(对象),text(字符串),以及 date(日期)作为 props</p><p>该组件由于嵌套关系,变的难以维护。而且很难复用它的个个部分.因此让我们从中提取一些组件出来.</p><h3 id="拆分第一步-Avatar-组件"><a href="#拆分第一步-Avatar-组件" class="headerlink" title="拆分第一步 Avatar 组件"></a>拆分第一步 Avatar 组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Avatar</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>user<span class="token punctuation">.</span>avatarUrl<span class="token punctuation">}</span> alt<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><p>Avatar 不需要知道它在 Commet 组件内部是如何渲染的，因此我们给它的 props 起了一个更通用的名字:user 而不是 author</p></li><li><p>我们建议从组件自身的角度命名 props 而不是依赖于调用组件的上下文命名</p></li></ul><p>下面针对上面那个做一下调整</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Commet</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>       <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Comment"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"UserInfo"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>Avatar user<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>author<span class="token punctuation">}</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"UserInfo-name"</span><span class="token operator">></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>author<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Commet-text"</span><span class="token operator">></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Commet-date"</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token function">formatDate</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来我们将提取 UserInfo 组件,该组件在用户旁渲染 Avatar 组件</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">UserInfo</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"UserInfo"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>Avatar user<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>user<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"UserInfo-name"</span><span class="token operator">></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>user<span class="token punctuation">.</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样进一步简化</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Commet</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Comment"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>UserInfo user<span class="token operator">=</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>author<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Comment-text"</span><span class="token operator">></span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">"Comment-date"</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token function">formatDate</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Props-的只读性"><a href="#Props-的只读性" class="headerlink" title="Props 的只读性"></a>Props 的只读性</h2><blockquote><p>组件无论是使用函数声明还是通过 class 声明,都绝对不能修改自身的 props</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">sum</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样的函数被称为”纯函数”,因为该函数不会尝试更改入参,且多次调用下相同的入参始终返回相同的结果</p><p>相反下面这个就不是纯函数</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">withdraw</span><span class="token punctuation">(</span>account<span class="token punctuation">,</span> amount<span class="token punctuation">)</span> <span class="token punctuation">{</span>  account<span class="token punctuation">.</span>total <span class="token operator">-</span><span class="token operator">=</span> amount<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>props 里面的数据绝对不能更改</p></li><li><p>组件的定义里面必须要有 return,要是一行就不用()要是多行必须加()</p></li><li><p>组件里面可以嵌套组件。没有个数限制。为了更好的使用，建议强烈拆分组件</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础学习---元素渲染(三)</title>
      <link href="/2019/11/25/reactbasic3/"/>
      <url>/2019/11/25/reactbasic3/</url>
      
        <content type="html"><![CDATA[<h2 id="元素是构成-React-应用的最小砖块"><a href="#元素是构成-React-应用的最小砖块" class="headerlink" title="元素是构成 React 应用的最小砖块"></a>元素是构成 React 应用的最小砖块</h2><p>元素描述了你在屏幕上想看到的内容</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span>world<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>与浏览器 DOM 不同 ，React 元素是创建开销极小的普通对象.React DOM 会负责更新 DOM 来与 React 元素保持一致.</p></blockquote><h2 id="将一个元素渲染为-DOM"><a href="#将一个元素渲染为-DOM" class="headerlink" title="将一个元素渲染为 DOM"></a>将一个元素渲染为 DOM</h2><p>假设你的 HTML 文件某处有一个 div</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>我们将其称为根节点,因为根节点的所有内容都由 React DOM 管理</p></li><li><p>仅仅使用 React 构建的应用通常只有单一的根节点,但是如果你将 React 集成到一个已有的应用中,那么你可以在应用中包含任意多的独立根 DOM 节点.</p></li><li><p>想要一个 React 元素渲染到根 DOM 节点中,必须要通过 ReactDOM.render()</p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span> Hello<span class="token punctuation">,</span>world<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="更新已渲染的元素"><a href="#更新已渲染的元素" class="headerlink" title="更新已渲染的元素"></a>更新已渲染的元素</h2><ul><li><p>React 元素是不可变对象.一旦被创建,你就无法更改它的子元素或者属性,一个元素就像电影里面的单帧,他表示某个特定时刻的 UI</p></li><li><p>而更新 UI 唯一的方式是创建一个全新的元素,并将其传入 ReactDOM.render()</p></li></ul><p>考虑一个计时器的例子:</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span>world<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>      <span class="token operator">&lt;</span>h2<span class="token operator">></span>It is <span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token function">setInterval</span><span class="token punctuation">(</span>tick<span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="React-只会更新它需要更新的部分"><a href="#React-只会更新它需要更新的部分" class="headerlink" title="React 只会更新它需要更新的部分"></a>React 只会更新它需要更新的部分</h2><ul><li>ReactDOM 会将元素和它的子元素与它们之前的状态进行比较,并且只会进行必要的更新来使 DOM 达到预期的状态</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>元素是组件里面一个最小的部分</p></li><li><p>元素必须放在 render 函数下面,并且 render 函数下面必须有 return 返回值</p></li><li><p>React 只有在数据发生改变的时候,并且最终在 render 函数里面渲染的才会更新 DOM</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础学习---JSX(二)</title>
      <link href="/2019/11/24/reactbasic2/"/>
      <url>/2019/11/24/reactbasic2/</url>
      
        <content type="html"><![CDATA[<h2 id="JSX-简介"><a href="#JSX-简介" class="headerlink" title="JSX 简介"></a>JSX 简介</h2><ul><li>JSX 是一个 Javascript 的语法扩展,JSX 可以很好的描述 UI 呈现出它应有交互的本质形式，JSX 可能会让人联想到模板语言,但它具有 Javascript 的全部功能,JSX 可以生成 React 元素.</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span> world<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="JSX-使用"><a href="#JSX-使用" class="headerlink" title="JSX 使用"></a>JSX 使用</h2><h3 id="在-JSX-中嵌入表达式"><a href="#在-JSX-中嵌入表达式" class="headerlink" title="在 JSX 中嵌入表达式"></a>在 JSX 中嵌入表达式</h3><p>举个例子,我们声明了一个 name 的变量,然后在 JSX 中使用它，并将它包裹在大括号中</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">'John Perez'</span><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span> hello<span class="token punctuation">,</span><span class="token punctuation">{</span>name<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'root'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在 JSX 语法中你可以在大括号中放置任何有效的 JS 表达式,例如 2+2,user.firstname 或者 formatName(user)都是有效的 JS 表达式</p></blockquote><ul><li>在下面的例子中我们将 formatName(user)结果,并将结果嵌套到 h1 元素中</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">formatName</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> user<span class="token punctuation">.</span>firstname <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> user<span class="token punctuation">.</span>lastname<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>  firstname<span class="token punctuation">:</span><span class="token string">"John"</span><span class="token punctuation">,</span>  lastname<span class="token punctuation">:</span><span class="token string">"smisth"</span><span class="token punctuation">}</span><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token operator">&lt;</span>h1<span class="token operator">></span>    Hello<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function">formatName</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">!</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">}</span>ReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>  element<span class="token punctuation">,</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在编译后 JSX 表达式会被转为普通的函数调用,并且会得到 JS 对象,也就是说里面必须有 return</p></blockquote><h3 id="JSX-也可以是一个表达式"><a href="#JSX-也可以是一个表达式" class="headerlink" title="JSX 也可以是一个表达式"></a>JSX 也可以是一个表达式</h3><ul><li>你也可以在 if 语句或者 for 循环的代码块中使用 JSX,将 JSX 赋值给变量,把 JSX 当参数传入,以及从函数中返回 JSX</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getGreetinf</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token function">formatName</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token punctuation">,</span>Stringer<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="JSX-特定属性"><a href="#JSX-特定属性" class="headerlink" title="JSX 特定属性"></a>JSX 特定属性</h3><ul><li>通过引号将属性值变成字符串</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>div tabindex<span class="token operator">=</span><span class="token string">"0"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>也可以使用大括号在属性中插入一个 JS 表达式</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>img<span class="token punctuation">}</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>img<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>千万记得大括号或者引号只能用其中的一个,引号就是表示字符串,大括号就表示变量,对同一属性不能同时使用这两种符号</p></blockquote><blockquote><p>JSX 在这里使用的小驼峰法命名,比如 class 变成了 className ,而 tabindex 变成了 tabIndex</p></blockquote><h3 id="使用-JSX-指定子元素"><a href="#使用-JSX-指定子元素" class="headerlink" title="使用 JSX 指定子元素"></a>使用 JSX 指定子元素</h3><ul><li>假如一个标签里面没有内容,你可以使用/&gt;来闭合标签,就像 XML 语法一样</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token punctuation">{</span>user<span class="token punctuation">.</span>imgurl<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>JSX 标签里能够包含很多子元素</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token operator">&lt;</span>div<span class="token operator">></span>     <span class="token operator">&lt;</span>h1<span class="token operator">></span>Hello<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span>     <span class="token operator">&lt;</span>h2<span class="token operator">></span>Good to see you <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="JSX-防止注入攻击"><a href="#JSX-防止注入攻击" class="headerlink" title="JSX 防止注入攻击"></a>JSX 防止注入攻击</h3><blockquote><p>ReactDom 在渲染所有输入内容之前,默认就会进行转义.他可以确保在你的应用中,永远不会注入哪些并非自己明确编写的内容,所有的内容在渲染之前都被转换成了字符串,这样防止攻击.</p></blockquote><h3 id="JSX-表示对象"><a href="#JSX-表示对象" class="headerlink" title="JSX 表示对象"></a>JSX 表示对象</h3><ul><li>Babel 会把 JSX 转译成一个名为 React.createElement()函数调用</li></ul><p>以下两种实例代码等效</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token operator">&lt;</span>h1 className<span class="token operator">=</span><span class="token string">"greeting"</span><span class="token operator">></span>     Hello<span class="token punctuation">,</span>world<span class="token operator">!</span>   <span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">></span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>等价于</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> element <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>  <span class="token string">'h1'</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> className<span class="token punctuation">:</span> <span class="token string">'greeting'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token string">'Hello,world!'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>所以 React.createElement()会预先执行一些检查,以帮助你编写无措代码,但实际上他创建了这样一个对象，这些对象被称为 React 元素,他们描述了你屏幕上看到的内容，然后使用它们来构建 DOM 以及保持更新.</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>JSX 语法里面可以用{}来表示变量，表达式等等</p></li><li><p>引号和{}只能二选一，引号就表示字符串,大括号就表示变量或者表达式。要是表达式外面套了层引号就就表示字符串了</p></li><li><p>在 JSX 里面 class 必须写成 className 否则它不识别 class,而且命名采用的是小驼峰法.</p></li><li><p>JSX 里面的元素必须有个包裹层，而且需要闭合</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React基础学记笔记</title>
      <link href="/2019/11/23/reactall/"/>
      <url>/2019/11/23/reactall/</url>
      
        <content type="html"><![CDATA[<h2 id="留坑"><a href="#留坑" class="headerlink" title="留坑"></a>留坑</h2>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React 基础笔记(简介和特点)(一)</title>
      <link href="/2019/11/23/reactone/"/>
      <url>/2019/11/23/reactone/</url>
      
        <content type="html"><![CDATA[<h1 id="React-基础笔记-简介和特点-一"><a href="#React-基础笔记-简介和特点-一" class="headerlink" title="React 基础笔记(简介和特点)(一)"></a>React 基础笔记(简介和特点)(一)</h1><h2 id="React-简介"><a href="#React-简介" class="headerlink" title="React 简介"></a>React 简介</h2><ol><li><p>react 发展 –Facebook 在构建 instagram 网站的时候遇见两个问题</p></li><li><p>数据绑定的时候，大量操作真实 DOM，性能成本太高</p></li><li><p>网站的数据流向太混乱,不好控制.</p></li></ol><blockquote><p>React 把用户界面抽象成一个个组件，如按钮组件 Button、对话框组件 Dialog、日期组件 Calendar。开发者通过组合这些组件，最终得到功能丰富、可交互的页面。通过引入 JSX 语法，复用组件变得非常容易，同时也能保证组件结构清晰。有了组件这层抽象，React 把代码和真实渲染目标隔离开来，除了可以在浏览器端渲染到 DOM 来开发网页外，还能用于开发原生移动应用</p></blockquote><h2 id="React-特点"><a href="#React-特点" class="headerlink" title="React 特点"></a>React 特点</h2><ul><li><p>声明式设计 – React 采用声明范式,可以轻松描述应用(自动 dom 操作)</p></li><li><p>高效 – React 通过对 DOM 的模拟(虚拟 DOM),最大限度的减少与 DOM 的交互</p></li><li><p>灵活 – React 可以与已知的库或者框架很好的配合</p></li><li><p>(重点)JSX – JSX 是 javascript 语法的拓展</p></li><li><p>(重点)组件 – 通过 React 构建组件,使得代码更加容易得到复用,能够很好的应用在大项目的开发</p></li><li><p>(重点)单向响应的数据流 – React 实现了单向相应的数据流,从而减少了重复代码,这也是它比传统的数据绑定更简单</p></li></ul><blockquote><p>React 的精髓是函数式编程,React 的核心是组件,组件的设计目的是提高代码复用率，降低测试难度和代码复杂度.</p></blockquote><h2 id="React-操作原理"><a href="#React-操作原理" class="headerlink" title="React 操作原理"></a>React 操作原理</h2><ul><li>传统 DOM 更新</li></ul><blockquote><p>在传统页面的开发模式中,每次需要更新页面时,都要手动操作 DOM 来更新</p></blockquote><ul><li>虚拟 DOM 更新</li></ul><blockquote><p>DOM 操作非常昂贵,前端性能开发中性能消耗最大的就是 DOM 操作,而这一部分会让整体项目的代码变得难以维护.React 把真实 DOM 树转换成 JS 对象树也就是虚拟 DOM 存在</p></blockquote><h2 id="React-函数式编程"><a href="#React-函数式编程" class="headerlink" title="React 函数式编程"></a>React 函数式编程</h2><blockquote><p>他的主要思想就是把运算过程尽量写成一系列嵌套的函数调用</p></blockquote><p>函数的编程好处</p><ol><li>代码简洁,快速开发</li><li>方便的代码管理</li><li>代码的热升级</li></ol><h2 id="React-JSX-语法的由来"><a href="#React-JSX-语法的由来" class="headerlink" title="React JSX 语法的由来"></a>React JSX 语法的由来</h2><blockquote><p>JSX 将 HTML 语法直接加入到 JS 代码中,通过翻译器转换到纯 JS 后，由浏览器执行。实际开发中 JSX 在产品打包阶段都已经编译成纯 JS，反而让代码更加直观易于维护</p></blockquote><ol><li><p>编译过程由 Babel 的 JSX 编译器来实现</p></li><li><p>JSX 的官方定义是类 XML 语法的 ECMAscript 扩展</p></li><li><p>组件就是一个集合体,就是把 html,js,css 放在一期形成一个组件,组件的写法就是 jsx 语法编写</p></li></ol><h2 id="React-事件机制"><a href="#React-事件机制" class="headerlink" title="React 事件机制"></a>React 事件机制</h2><ul><li><p>函数声明需要与 render 函数同级,因为在 react.creatClass 传入的是对象,声明的函数也是一个对象,是 React 对象对外暴露的原型链,render 会计算 return 方法,同样计算同级的方法</p></li><li><p>直接写事件机制 onClick={this.函数名}</p></li><li><p>将函数变量封装到全局变量中</p></li><li><p>原型链写法</p></li><li><p>在 jsx 中写逻辑 - 要写在 render 和 return 之间</p></li><li><p>注释的标签方法是</p></li></ul><p><code>{/* */}</code></p><ul><li>组件嵌套不能多个节点渲染，否则最后一个组件覆盖前面的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> React </category>
          
      </categories>
      
      
        <tags>
            
            <tag> React </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记(一)</title>
      <link href="/2019/11/22/pythonbasic1/"/>
      <url>/2019/11/22/pythonbasic1/</url>
      
        <content type="html"><![CDATA[<h2 id="留坑"><a href="#留坑" class="headerlink" title="留坑"></a>留坑</h2>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记</title>
      <link href="/2019/11/21/pythonall/"/>
      <url>/2019/11/21/pythonall/</url>
      
        <content type="html"><![CDATA[<h2 id="留坑"><a href="#留坑" class="headerlink" title="留坑"></a>留坑</h2>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中使用数学计算</title>
      <link href="/2019/11/20/vuecha7/"/>
      <url>/2019/11/20/vuecha7/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-中使用数学计算"><a href="#Vue-中使用数学计算" class="headerlink" title="Vue 中使用数学计算"></a>Vue 中使用数学计算</h1><h2 id="计算的话推荐用-Math-js"><a href="#计算的话推荐用-Math-js" class="headerlink" title="计算的话推荐用 Math.js"></a>计算的话推荐用 Math.js</h2><h3 id="1-安装它"><a href="#1-安装它" class="headerlink" title="(1) 安装它"></a>(1) 安装它</h3><blockquote><p>Math.js 是专门为 JavaScript 和 Node.js 提供的一个广泛的数学库。它具有灵活的表达式解析器，支持符号计算，配有大量内置函数和常量，并提供集成解决方案来处理不同的数据类型<br>像数字，大数字(超出安全数的数字)，复数，分数，单位和矩阵。 功能强大，易于使用。</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">npm install mathjs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="(2)使用"></a>(2)使用</h3><blockquote><p>引用</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> math <span class="token keyword">from</span> <span class="token string">'mathjs'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>使用</p></blockquote><ul><li><p>开方 math.sqrt(4)</p></li><li><p>加法 math.add()</p></li><li><p>减法 math.subtract()</p></li><li><p>除法 math.divide()</p></li><li><p>乘法 math.multiply()</p></li></ul><blockquote><p>加法</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//0.30000000000000004</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>math<span class="token punctuation">.</span><span class="token function">bignumber</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span><span class="token function">bignumber</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//'0.3'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>表达式也可以</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">math<span class="token punctuation">.</span><span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">'sqrt(4) + 2'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="数据格式化"><a href="#数据格式化" class="headerlink" title="数据格式化"></a>数据格式化</h2><ul><li><p>千分位</p></li><li><p>金额</p></li><li><p>保留几位小数</p></li><li><p>舍去舍入</p></li></ul><h3 id="必须用类库"><a href="#必须用类库" class="headerlink" title="必须用类库"></a>必须用类库</h3><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="(1)安装"></a>(1)安装</h4><pre class="line-numbers language-javascript"><code class="language-javascript">npm i accounting<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="2-使用-1"><a href="#2-使用-1" class="headerlink" title="(2)使用"></a>(2)使用</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// Default usage:</span>accounting<span class="token punctuation">.</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token number">12345678</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// $12,345,678.00</span><span class="token comment" spellcheck="true">// European formatting (custom symbol and separators), can also use options object as second parameter:</span>accounting<span class="token punctuation">.</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token number">4999.99</span><span class="token punctuation">,</span> <span class="token string">'€'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// €4.999,99</span><span class="token comment" spellcheck="true">// Negative values can be formatted nicely:</span>accounting<span class="token punctuation">.</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">500000</span><span class="token punctuation">,</span> <span class="token string">'£ '</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// £ -500,000</span><span class="token comment" spellcheck="true">// Simple `format` string allows control of symbol position (%v = value, %s = symbol):</span>accounting<span class="token punctuation">.</span><span class="token function">formatMoney</span><span class="token punctuation">(</span><span class="token number">5318008</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> symbol<span class="token punctuation">:</span> <span class="token string">'GBP'</span><span class="token punctuation">,</span> format<span class="token punctuation">:</span> <span class="token string">'%v %s'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 5,318,008.00 GBP</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="formatNumber"><a href="#formatNumber" class="headerlink" title="formatNumber"></a>formatNumber</h4><pre class="line-numbers language-javascript"><code class="language-javascript">accounting<span class="token punctuation">.</span><span class="token function">formatNumber</span><span class="token punctuation">(</span><span class="token number">5318008</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 5,318,008</span>accounting<span class="token punctuation">.</span><span class="token function">formatNumber</span><span class="token punctuation">(</span><span class="token number">9876543.21</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 9 876 543.210</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="toFixed"><a href="#toFixed" class="headerlink" title="toFixed()"></a>toFixed()</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token number">0.615</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// "0.61"</span>accounting<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">0.615</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// "0.62"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="unformat"><a href="#unformat" class="headerlink" title="unformat()"></a>unformat()</h4><pre class="line-numbers language-javascript"><code class="language-javascript">accounting<span class="token punctuation">.</span><span class="token function">unformat</span><span class="token punctuation">(</span><span class="token string">'£ 12,345,678.90 GBP'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 12345678.9</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中使用Stripe</title>
      <link href="/2019/11/18/vuecha6/"/>
      <url>/2019/11/18/vuecha6/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-中使用-Stripe-来验证信用卡"><a href="#Vue-中使用-Stripe-来验证信用卡" class="headerlink" title="Vue 中使用 Stripe 来验证信用卡"></a>Vue 中使用 Stripe 来验证信用卡</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i vue<span class="token operator">-</span>stripe<span class="token operator">-</span>elements<span class="token operator">-</span>plus <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="第二部在开始的-index-html-引入-v3"><a href="#第二部在开始的-index-html-引入-v3" class="headerlink" title="第二部在开始的 index.html 引入 v3"></a>第二部在开始的 index.html 引入 v3</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://js.stripe.com/v3/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="重点两个参数"><a href="#重点两个参数" class="headerlink" title="重点两个参数"></a>重点两个参数</h2><blockquote><p>stripe 必须要你自己设定 options 必须要有参数可以参照下面的链接</p></blockquote><blockquote><p><a href="https://stripe.com/docs/stripe.js#element-options" target="_blank" rel="noopener">https://stripe.com/docs/stripe.js#element-options</a></p></blockquote><h2 id="验证信用卡号，CVC，过期日期"><a href="#验证信用卡号，CVC，过期日期" class="headerlink" title="验证信用卡号，CVC，过期日期"></a>验证信用卡号，CVC，过期日期</h2><blockquote><p>验证 Number,cvc,过期时间</p></blockquote><blockquote><p>完整版</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>credit-card-inputs<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{ complete }<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>card-number</span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stripe-element card-number<span class="token punctuation">"</span></span>      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cardNumber<span class="token punctuation">"</span></span>      <span class="token attr-name">:stripe</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stripe<span class="token punctuation">"</span></span>      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span>      <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number <span class="token punctuation">=</span> $event.complete<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>card-expiry</span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stripe-element card-expiry<span class="token punctuation">"</span></span>      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cardExpiry<span class="token punctuation">"</span></span>      <span class="token attr-name">:stripe</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stripe<span class="token punctuation">"</span></span>      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span>      <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>expiry <span class="token punctuation">=</span> $event.complete<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>card-cvc</span>      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stripe-element card-cvc<span class="token punctuation">"</span></span>      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cardCvc<span class="token punctuation">"</span></span>      <span class="token attr-name">:stripe</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stripe<span class="token punctuation">"</span></span>      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>options<span class="token punctuation">"</span></span>      <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cvc <span class="token punctuation">=</span> $event.complete<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> <span class="token punctuation">{</span> CardNumber<span class="token punctuation">,</span> CardExpiry<span class="token punctuation">,</span> CardCvc <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vue-stripe-elements-plus'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'stripe'</span><span class="token punctuation">,</span> <span class="token string">'options'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        complete<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        number<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        expiry<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        cvc<span class="token punctuation">:</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    components<span class="token punctuation">:</span> <span class="token punctuation">{</span> CardNumber<span class="token punctuation">,</span> CardExpiry<span class="token punctuation">,</span> CardCvc <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>complete <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>number <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>expiry <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>cvc        <span class="token comment" spellcheck="true">// field completed, find field to focus next</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>number<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>expiry<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>cardExpiry<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>cvc<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>cardCvc<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>expiry<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>cvc<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>cardCvc<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>number<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>cardNumber<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// no focus magic for the CVC field as it gets complete with three</span>        <span class="token comment" spellcheck="true">// numbers, but can also have four</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    watch<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">number</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token function">expiry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token function">cvc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector"><span class="token class">.credit-card-inputs.complete</span> </span><span class="token punctuation">{</span>    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid green<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="支持的方法"><a href="#支持的方法" class="headerlink" title="支持的方法"></a>支持的方法</h2><ul><li>createToken()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-create-token" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-create-token</a></p></blockquote><ul><li>createSource()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-create-source" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-create-source</a></p></blockquote><ul><li>retrieveSource()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-retrieve-source" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-retrieve-source</a></p></blockquote><ul><li>paymentRequest()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-payment-request" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-payment-request</a></p></blockquote><ul><li>redirectToCheckout()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-redirect-to-checkout" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-redirect-to-checkout</a></p></blockquote><ul><li>retrievePaymentIntent()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-retrieve-payment-intent" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-retrieve-payment-intent</a></p></blockquote><ul><li>handleCardPayment()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-handle-card-payment" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-handle-card-payment</a></p></blockquote><ul><li>handleCardSetup()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-handle-card-setup" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-handle-card-setup</a></p></blockquote><ul><li>handleCardAction()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-handle-card-action" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-handle-card-action</a></p></blockquote><ul><li>confirmPaymentIntent()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-confirm-payment-intent" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-confirm-payment-intent</a></p></blockquote><ul><li>createPaymentMethod()</li></ul><blockquote><p><a href="https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method" target="_blank" rel="noopener">https://stripe.com/docs/stripe-js/reference#stripe-create-payment-method</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中使用Ueedit富文本</title>
      <link href="/2019/11/16/vuecha5/"/>
      <url>/2019/11/16/vuecha5/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-中使用-Ueedit-富文本"><a href="#Vue-中使用-Ueedit-富文本" class="headerlink" title="Vue 中使用 Ueedit 富文本"></a>Vue 中使用 Ueedit 富文本</h1><h2 id="1-安装-vue-ueditor-wrap"><a href="#1-安装-vue-ueditor-wrap" class="headerlink" title="(1) 安装 vue-ueditor-wrap"></a>(1) 安装 vue-ueditor-wrap</h2><pre class="line-numbers language-javascript"><code class="language-javascript">cnpm i vue<span class="token operator">-</span>ueditor<span class="token operator">-</span>wrap# 或者yarn add vue<span class="token operator">-</span>ueditor<span class="token operator">-</span>wrap<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-下载-Ueedit-文件，并使用"><a href="#2-下载-Ueedit-文件，并使用" class="headerlink" title="(2) 下载 Ueedit 文件，并使用"></a>(2) 下载 Ueedit 文件，并使用</h2><p><a href="http://ueditor.baidu.com/website/download.html" target="_blank" rel="noopener">点此下载 Ueedit</a></p><h3 id="下载好以后在-public-目录下新建一个文件夹起名叫-UEditor-把对应的文件放进去"><a href="#下载好以后在-public-目录下新建一个文件夹起名叫-UEditor-把对应的文件放进去" class="headerlink" title="下载好以后在 public 目录下新建一个文件夹起名叫 UEditor,把对应的文件放进去"></a>下载好以后在 public 目录下新建一个文件夹起名叫 UEditor,把对应的文件放进去</h3><h3 id="引入-vue-ueditor-wrap-组件"><a href="#引入-vue-ueditor-wrap-组件" class="headerlink" title="引入 vue-ueditor-wrap 组件"></a>引入 vue-ueditor-wrap 组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> VueUeditorWrap <span class="token keyword">from</span> <span class="token string">'vue-ueditor-wrap'</span> <span class="token comment" spellcheck="true">// ES6 Module</span><span class="token comment" spellcheck="true">// 或者</span><span class="token keyword">const</span> VueUeditorWrap <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'vue-ueditor-wrap'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// CommonJS</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="你可以通过外链的形式直接引入-cdn-来使用"><a href="#你可以通过外链的形式直接引入-cdn-来使用" class="headerlink" title="你可以通过外链的形式直接引入 cdn 来使用"></a>你可以通过外链的形式直接引入 cdn 来使用</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/npm/vue-ueditor-wrap@latest/lib/vue-ueditor-wrap.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="注册组件"><a href="#注册组件" class="headerlink" title="注册组件"></a>注册组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript">components<span class="token punctuation">:</span> <span class="token punctuation">{</span>  VueUeditorWrap<span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 或者在 main.js 里将它注册为全局组件</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'vue-ueditor-wrap'</span><span class="token punctuation">,</span> VueUeditorWrap<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="v-model-绑定数据"><a href="#v-model-绑定数据" class="headerlink" title="v-model 绑定数据"></a>v-model 绑定数据</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-ueditor-wrap</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-ueditor-wrap</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>data 数据里面</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    msg<span class="token punctuation">:</span> <span class="token string">'&lt;h2>&lt;img src="http://img.baidu.com/hi/jx2/j_0003.gif"/>Vue + UEditor + v-model双向绑定&lt;/h2>'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="这个时候页面应该一片空白，需要补充下数据"><a href="#这个时候页面应该一片空白，需要补充下数据" class="headerlink" title="这个时候页面应该一片空白，需要补充下数据"></a>这个时候页面应该一片空白，需要补充下数据</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-ueditor-wrap</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span> <span class="token attr-name">:config</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myConfig<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-ueditor-wrap</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>data 里面的数据</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> <span class="token punctuation">{</span>    msg<span class="token punctuation">:</span> <span class="token string">'&lt;h2>&lt;img src="http://img.baidu.com/hi/jx2/j_0003.gif"/>Vue + UEditor + v-model双向绑定&lt;/h2>'</span><span class="token punctuation">,</span>    myConfig<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 编辑器不自动被内容撑高</span>      autoHeightEnabled<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 初始容器高度</span>      initialFrameHeight<span class="token punctuation">:</span> <span class="token number">240</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 初始容器宽度</span>      initialFrameWidth<span class="token punctuation">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 上传文件接口（这个地址是我为了方便各位体验文件上传功能搭建的临时接口，请勿在生产环境使用！！！）</span>      serverUrl<span class="token punctuation">:</span> <span class="token string">'http://35.201.165.105:8000/controller.php'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// UEditor 资源文件的存放路径，如果你使用的是 vue-cli 生成的项目，通常不需要设置该选项，vue-ueditor-wrap 会自动处理常见的情况，如果需要特殊配置，参考下方的常见问题2</span>      UEDITOR_HOME_URL<span class="token punctuation">:</span> <span class="token string">'/static/UEditor/'</span> <span class="token comment" spellcheck="true">//要是cli3.0的话直接就是/UEditor</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="到此为止-UEditor-组件正式完成。"><a href="#到此为止-UEditor-组件正式完成。" class="headerlink" title="到此为止 UEditor 组件正式完成。"></a>到此为止 UEditor 组件正式完成。</h3><h2 id="高级版本"><a href="#高级版本" class="headerlink" title="高级版本"></a>高级版本</h2><h3 id="1-如何获取-UEditor-实例"><a href="#1-如何获取-UEditor-实例" class="headerlink" title="(1) 如何获取 UEditor 实例"></a>(1) 如何获取 UEditor 实例</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-ueditor-wrap</span> <span class="token attr-name">@ready</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ready<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-ueditor-wrap</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>JS 代码</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>  ready <span class="token punctuation">(</span>editorInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`编辑器实例</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>editorInstance<span class="token punctuation">.</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: `</span></span><span class="token punctuation">,</span> editorInstance<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-设置组件的-beforeDestroy-钩子函数里销毁-UEditor-实例"><a href="#2-设置组件的-beforeDestroy-钩子函数里销毁-UEditor-实例" class="headerlink" title="(2)设置组件的 beforeDestroy 钩子函数里销毁 UEditor 实例"></a>(2)设置组件的 beforeDestroy 钩子函数里销毁 UEditor 实例</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-ueditor-wrap</span> <span class="token attr-name">:destroy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-ueditor-wrap</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-每个-vue-ueditor-wrap-组件都是独立的，你甚至可以使用-v-for-一次渲染-100-个"><a href="#3-每个-vue-ueditor-wrap-组件都是独立的，你甚至可以使用-v-for-一次渲染-100-个" class="headerlink" title="(3) 每个 vue-ueditor-wrap 组件都是独立的，你甚至可以使用 v-for 一次渲染 100 个"></a>(3) 每个 vue-ueditor-wrap 组件都是独立的，你甚至可以使用 v-for 一次渲染 100 个</h3>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中使用无缝滚动</title>
      <link href="/2019/11/15/vuecha4/"/>
      <url>/2019/11/15/vuecha4/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-实现无缝滚动-vue-seamless-scroll"><a href="#Vue-实现无缝滚动-vue-seamless-scroll" class="headerlink" title="Vue 实现无缝滚动 vue-seamless-scroll"></a>Vue 实现无缝滚动 vue-seamless-scroll</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="(1) 安装"></a>(1) 安装</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm install vue<span class="token operator">-</span>seamless<span class="token operator">-</span>scroll <span class="token operator">--</span>save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-在-main-js-中使用"><a href="#2-在-main-js-中使用" class="headerlink" title="(2) 在 main.js 中使用"></a>(2) 在 main.js 中使用</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// **main.js**</span><span class="token comment" spellcheck="true">// 1.global install</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> scroll <span class="token keyword">from</span> <span class="token string">'vue-seamless-scroll'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>scroll<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//or you can set componentName default componentName is vue-seamless-scroll</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>scroll<span class="token punctuation">,</span> <span class="token punctuation">{</span> componentName<span class="token punctuation">:</span> <span class="token string">'scroll-seamless'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="(3)使用"></a>(3)使用</h2><blockquote><p>注意：需要给父容器一个 height 和:data=’Array’和 overfolw:hidden;左右滚动需要给 ul 容器一个初始化 css width。</p></blockquote><blockquote><p>参数 direction 0 down、 1 up 、 2 left 、 3 right</p></blockquote><blockquote><p>参数 autoPlay true or false</p></blockquote><blockquote><p>参数 navigation true or false</p></blockquote><blockquote><p>参数 ScrollEnd 方法 回调方法</p></blockquote><blockquote><p>参数 limitMoveNum 最低多少个数据开始滚动</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-seamless-scroll</span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>listData<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>seamless-warp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in listData<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span>        <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-seamless-scroll</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector"><span class="token class">.seamless-warp</span> </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">229</span>px<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        listData<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第一行无缝滚动第一行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第二行无缝滚动第二行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第三行无缝滚动第三行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第四行无缝滚动第四行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第五行无缝滚动第五行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第六行无缝滚动第六行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第七行无缝滚动第七行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第八行无缝滚动第八行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第九行无缝滚动第九行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>向下滚动</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-seamless-scroll</span>    <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>listData<span class="token punctuation">"</span></span>    <span class="token attr-name">:class-option</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>classOption<span class="token punctuation">"</span></span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>seamless-warp<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in listData<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span>        <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>date<span class="token punctuation">"</span></span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-seamless-scroll</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector"><span class="token class">.seamless-warp</span> </span><span class="token punctuation">{</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">229</span>px<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        listData<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第一行无缝滚动第一行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第二行无缝滚动第二行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第三行无缝滚动第三行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第四行无缝滚动第四行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第五行无缝滚动第五行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第六行无缝滚动第六行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第七行无缝滚动第七行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第八行无缝滚动第八行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'无缝滚动第九行无缝滚动第九行'</span><span class="token punctuation">,</span>            date<span class="token punctuation">:</span> <span class="token string">'2017-12-16'</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">classOption</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>          direction<span class="token punctuation">:</span> <span class="token number">0</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>向左边滚动</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-seamless-scroll</span>    <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>newsList<span class="token punctuation">"</span></span>    <span class="token attr-name">:class-option</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>optionLeft<span class="token punctuation">"</span></span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>seamless-warp2<span class="token punctuation">"</span></span>  <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item in newsList<span class="token punctuation">"</span></span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-seamless-scroll</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector"><span class="token class">.seamless-warp2</span> </span><span class="token punctuation">{</span>    <span class="token selector">overflow: hidden;    height: 25px;    width: 380px;    ul<span class="token class">.item</span> </span><span class="token punctuation">{</span>      <span class="token selector">width: 580px;      li </span><span class="token punctuation">{</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        newsList<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'A simple, seamless scrolling for Vue.js'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            title<span class="token punctuation">:</span> <span class="token string">'A curated list of awesome things related to Vue.js'</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">optionLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span>          direction<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>          limitMoveNum<span class="token punctuation">:</span> <span class="token number">2</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中使用图片轮播</title>
      <link href="/2019/11/14/vuecha3/"/>
      <url>/2019/11/14/vuecha3/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-中使用-vue-awesome-swiper"><a href="#Vue-中使用-vue-awesome-swiper" class="headerlink" title="Vue 中使用 vue-awesome-swiper"></a>Vue 中使用 vue-awesome-swiper</h1><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="(1) 安装"></a>(1) 安装</h2><blockquote><p>这里特别注意的就是必须要 2 版本的</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">npm i vue<span class="token operator">-</span>awesome<span class="token operator">-</span>swiper@<span class="token number">2</span> <span class="token operator">-</span>S<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-在-main-js-中引入组件"><a href="#2-在-main-js-中引入组件" class="headerlink" title="(2)在 main.js 中引入组件"></a>(2)在 main.js 中引入组件</h2><pre class="line-numbers language-javascript"><code class="language-javascript">mport Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App'</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span><span class="token keyword">import</span> FastClick <span class="token keyword">from</span> <span class="token string">'fastclick'</span><span class="token keyword">import</span> <span class="token string">'styles/reset.css'</span><span class="token keyword">import</span> <span class="token string">'styles/border.css'</span><span class="token keyword">import</span> <span class="token string">'styles/iconfont.css'</span><span class="token keyword">import</span> VueAwesomeSwiper <span class="token keyword">from</span> <span class="token string">'vue-awesome-swiper'</span> <span class="token comment" spellcheck="true">//必须要引入</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store/index.js'</span><span class="token comment" spellcheck="true">// require styles</span><span class="token keyword">import</span> <span class="token string">'swiper/dist/css/swiper.css'</span> <span class="token comment" spellcheck="true">//必须要引入</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span>FastClick<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">)</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueAwesomeSwiper<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//必须要使用的</span><span class="token comment" spellcheck="true">/* eslint-disable no-new */</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  router<span class="token punctuation">,</span>  store<span class="token punctuation">,</span>  components<span class="token punctuation">:</span> <span class="token punctuation">{</span>    App  <span class="token punctuation">}</span><span class="token punctuation">,</span>  template<span class="token punctuation">:</span> <span class="token string">'&lt;App/>'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-自己建一个基础的-swiper-vue-组件"><a href="#3-自己建一个基础的-swiper-vue-组件" class="headerlink" title="(3) 自己建一个基础的 swiper.vue 组件"></a>(3) 自己建一个基础的 swiper.vue 组件</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiperwrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 加v-if就是为了防止轮播图展现最后一个，必须要加length,这样等数据出来后就会看的到 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>swiper</span> <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiperOption<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mySwiper<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>SwiperList.length<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- slides --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>swiper-slide</span>        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(item, index) in banners<span class="token punctuation">"</span></span>        <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span>        <span class="token attr-name">@click.native</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gotourl<span class="token punctuation">"</span></span>      <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>imgcontent<span class="token punctuation">"</span></span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.src<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>swiper-slide</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!-- Optional controls --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>swiper-pagination<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pagination<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>swiper</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    name<span class="token punctuation">:</span> <span class="token string">'HomeSwiper'</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        banners<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            src<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@/assets/images/banner1.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            link<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            src<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@/assets/images/banner2.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            link<span class="token punctuation">:</span> <span class="token string">'http://piao.qunar.com/touch/'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            src<span class="token punctuation">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@/assets/images/banner3.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            link<span class="token punctuation">:</span> <span class="token string">'http://www.sohu.com'</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        swiperOption<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// some swiper options/callbacks</span>          <span class="token comment" spellcheck="true">// 所有的参数同 swiper 官方 api 参数</span>          <span class="token comment" spellcheck="true">// ...</span>          autoplay<span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>          autoplayDisableOnInteraction<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          loop<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>          pagination<span class="token punctuation">:</span> <span class="token string">'.swiper-pagination'</span><span class="token punctuation">,</span>          paginationType<span class="token punctuation">:</span> <span class="token string">'bullets'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">swiper</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>mySwiper<span class="token punctuation">.</span>swiper      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// current swiper instance</span>      <span class="token comment" spellcheck="true">// 然后你就可以使用当前上下文内的swiper对象去做你想做的事了</span>      <span class="token comment" spellcheck="true">// console.log('this is current swiper instance object', this.swiper)</span>      <span class="token comment" spellcheck="true">// this.swiper.slideTo(3, 1000, false)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">gotourl</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>swiper<span class="token punctuation">.</span>activeIndex        window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>banners<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>link      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token atrule"><span class="token rule">@import</span> <span class="token string">'~styles/common.less'</span><span class="token punctuation">;</span></span>  <span class="token selector"><span class="token class">.swiperwrapper</span> </span><span class="token punctuation">{</span>    <span class="token selector">width: 100%;    height: 26<span class="token class">.6vw</span>;    background: <span class="token id">#ccc</span>;    margin-bottom: 0<span class="token class">.2rem</span>;    <span class="token class">.imgcontent</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>      <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.swiper-pagination</span> </span><span class="token punctuation">{</span>      <span class="token selector"><span class="token class">.swiper-pagination-bullet</span> </span><span class="token punctuation">{</span>        <span class="token selector">width: 10px;        height: 10px;        background: white;        opacity: 1;        &amp;<span class="token class">.swiper-pagination-bullet-active</span> </span><span class="token punctuation">{</span>          <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue中使用vue-lottie动画</title>
      <link href="/2019/11/13/vuecha2/"/>
      <url>/2019/11/13/vuecha2/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-中的动画"><a href="#Vue-中的动画" class="headerlink" title="Vue 中的动画"></a>Vue 中的动画</h1><h2 id="vue-lottie-使用-这个类库主要就是加载-JSON-形成动画"><a href="#vue-lottie-使用-这个类库主要就是加载-JSON-形成动画" class="headerlink" title="vue-lottie 使用 这个类库主要就是加载 JSON 形成动画"></a>vue-lottie 使用 这个类库主要就是加载 JSON 形成动画</h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="(1) 安装"></a>(1) 安装</h3><pre class="line-numbers language-javascript"><code class="language-javascript">npm install <span class="token operator">--</span>save vue<span class="token operator">-</span>lottie<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-基础组件必须要有"><a href="#2-基础组件必须要有" class="headerlink" title="(2) 基础组件必须要有"></a>(2) 基础组件必须要有</h3><ul><li>lottie.vue</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">:</span><span class="token style-attr language-css"><span class="token attr-name"><span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value">style</span><span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>lavContainer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> lottie <span class="token keyword">from</span> <span class="token string">'lottie-web'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>      options<span class="token punctuation">:</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> Object<span class="token punctuation">,</span>        required<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      height<span class="token punctuation">:</span> Number<span class="token punctuation">,</span>      width<span class="token punctuation">:</span> Number    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        style<span class="token punctuation">:</span> <span class="token punctuation">{</span>          width<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">?</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>width<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px`</span></span> <span class="token punctuation">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>          height<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">?</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>height<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px`</span></span> <span class="token punctuation">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>          overflow<span class="token punctuation">:</span> <span class="token string">'hidden'</span><span class="token punctuation">,</span>          margin<span class="token punctuation">:</span> <span class="token string">'0 auto'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>anim <span class="token operator">=</span> lottie<span class="token punctuation">.</span><span class="token function">loadAnimation</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        container<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>lavContainer<span class="token punctuation">,</span>        renderer<span class="token punctuation">:</span> <span class="token string">'svg'</span><span class="token punctuation">,</span>        loop<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>loop <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        autoplay<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>autoplay <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        animationData<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>animationData<span class="token punctuation">,</span>        rendererSettings<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>rendererSettings      <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'animCreated'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>anim<span class="token punctuation">)</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-使用的时候，引用-json-必须要有-default-否则会报错"><a href="#3-使用的时候，引用-json-必须要有-default-否则会报错" class="headerlink" title="(3)使用的时候，引用 json 必须要有 default 否则会报错"></a>(3)使用的时候，引用 json 必须要有 default 否则会报错</h3><ul><li>json 文件可以去官网下载 <a href="https://lottiefiles.com/" target="_blank" rel="noopener">点击下载</a></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lottie</span>      <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>defaultOptions<span class="token punctuation">"</span></span>      <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span>      <span class="token attr-name">:width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span>      <span class="token attr-name"><span class="token namespace">v-on:</span>animCreated</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>handleAnimation<span class="token punctuation">"</span></span>    <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Speed: x{{animationSpeed}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>range<span class="token punctuation">"</span></span>        <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>        <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>        <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span>        <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">v-on:</span>change</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>onSpeedChange<span class="token punctuation">"</span></span>        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>animationSpeed<span class="token punctuation">"</span></span>      <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stop<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>stop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pause<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name"><span class="token namespace">v-on:</span>click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>play<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>play<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> Lottie <span class="token keyword">from</span> <span class="token string">'@/pages/Common/Lottie'</span>  <span class="token comment" spellcheck="true">// import * as animationData from '@/assets/197-glow-loading.json';</span>  <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> animationData <span class="token keyword">from</span> <span class="token string">'@/assets/data.json'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>      Lottie<span class="token punctuation">:</span> Lottie    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        defaultOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span> animationData<span class="token punctuation">:</span> animationData<span class="token punctuation">.</span><span class="token keyword">default</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 必须有default</span>        animationSpeed<span class="token punctuation">:</span> <span class="token number">1</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      handleAnimation<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>anim<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>anim <span class="token operator">=</span> anim      <span class="token punctuation">}</span><span class="token punctuation">,</span>      stop<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>anim<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      play<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>anim<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      pause<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>anim<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      onSpeedChange<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>anim<span class="token punctuation">.</span><span class="token function">setSpeed</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>animationSpeed<span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-axios-中使用-loading-动画"><a href="#4-axios-中使用-loading-动画" class="headerlink" title="(4) axios 中使用 loading 动画"></a>(4) axios 中使用 loading 动画</h3><h4 id="i-在-vuex-中写一个状态来控制-loading-组件的显示和隐藏"><a href="#i-在-vuex-中写一个状态来控制-loading-组件的显示和隐藏" class="headerlink" title="(i)在 vuex 中写一个状态来控制 loading 组件的显示和隐藏"></a>(i)在 vuex 中写一个状态来控制 loading 组件的显示和隐藏</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  state<span class="token punctuation">:</span> <span class="token punctuation">{</span>    isShow<span class="token punctuation">:</span> <span class="token boolean">false</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ii-Axios-拦截器配置"><a href="#ii-Axios-拦截器配置" class="headerlink" title="(ii) Axios 拦截器配置"></a>(ii) Axios 拦截器配置</h4><pre class="line-numbers language-javascript"><code class="language-javascript">axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token punctuation">{</span>  store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>isShow <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//在请求发出之前进行一些操作</span>  <span class="token keyword">return</span> config<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//定义一个响应拦截器</span>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token punctuation">{</span>  store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>isShow <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//在这里对返回的数据进行处理</span>  <span class="token keyword">return</span> config<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="iii-在-app-vue-中引入-loading-组件"><a href="#iii-在-app-vue-中引入-loading-组件" class="headerlink" title="(iii)在 app.vue 中引入 loading 组件"></a>(iii)在 app.vue 中引入 loading 组件</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>loading v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">"this.$store.state.isShow"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>loading<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue双语</title>
      <link href="/2019/11/12/vuecha1/"/>
      <url>/2019/11/12/vuecha1/</url>
      
        <content type="html"><![CDATA[<h1 id="在-Vue-中使用-vue-i18n，配套双语"><a href="#在-Vue-中使用-vue-i18n，配套双语" class="headerlink" title="在 Vue 中使用 vue-i18n，配套双语"></a>在 Vue 中使用 vue-i18n，配套双语</h1><h2 id="1-安装-vue-i18n"><a href="#1-安装-vue-i18n" class="headerlink" title="1 安装 vue-i18n"></a>1 安装 vue-i18n</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm install vue<span class="token operator">-</span>i18n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2 配置文件"></a>2 配置文件</h2><blockquote><p>在 src 目录下新建一个 i18n 文件夹，在 i18n 文件夹里分别创建 i18n.js、langs 文件夹，在 langs 文件夹下面创建你的语言文件（cn.js/en.js/ja.js）和 index.js 文件</p></blockquote><p><img src="http://qiniu.sadfog.com/222.png" alt="结构"></p><h2 id="3-i18n-js"><a href="#3-i18n-js" class="headerlink" title="3 i18n.js"></a>3 i18n.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> VueI18n <span class="token keyword">from</span> <span class="token string">'vue-i18n'</span><span class="token keyword">import</span> messages <span class="token keyword">from</span> <span class="token string">'./langs'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueI18n<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//从localStorage中拿到用户的语言选择，如果没有，那默认中文。</span><span class="token keyword">const</span> i18n <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueI18n</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  locale<span class="token punctuation">:</span> localStorage<span class="token punctuation">.</span>lang <span class="token operator">||</span> <span class="token string">'cn'</span><span class="token punctuation">,</span>  messages<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> i18n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-index-js"><a href="#4-index-js" class="headerlink" title="4 index.js"></a>4 index.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> en <span class="token keyword">from</span> <span class="token string">'./en'</span><span class="token keyword">import</span> cn <span class="token keyword">from</span> <span class="token string">'./cn'</span><span class="token keyword">import</span> ja <span class="token keyword">from</span> <span class="token string">'./ja'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  en<span class="token punctuation">,</span>  cn<span class="token punctuation">,</span>  ja<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-cn-js"><a href="#5-cn-js" class="headerlink" title="5 cn.js"></a>5 cn.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> cn <span class="token operator">=</span> <span class="token punctuation">{</span>  message<span class="token punctuation">:</span> <span class="token punctuation">{</span>    hello<span class="token punctuation">:</span> <span class="token string">'你好'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> cn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-en-js"><a href="#6-en-js" class="headerlink" title="6 en.js"></a>6 en.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">const</span> en <span class="token operator">=</span> <span class="token punctuation">{</span>  message<span class="token punctuation">:</span> <span class="token punctuation">{</span>    hello<span class="token punctuation">:</span> <span class="token string">'hello'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> en<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在配置语言包的时候，key 值一定要保持统一，因为 i18n 是通过你的 key 值来切换语言的，如果 key 值有误，就不能正确的切换语言包，这一点千万要注意</p></blockquote><h2 id="7-引用-main-js"><a href="#7-引用-main-js" class="headerlink" title="7 引用 main.js"></a>7 引用 main.js</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App'</span><span class="token keyword">import</span> i18n <span class="token keyword">from</span> <span class="token string">'./i18n/i18n'</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  i18n<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//加上i18n</span>  components<span class="token punctuation">:</span> <span class="token punctuation">{</span> App <span class="token punctuation">}</span><span class="token punctuation">,</span>  template<span class="token punctuation">:</span> <span class="token string">'&lt;App/>'</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="配置页面"><a href="#配置页面" class="headerlink" title="配置页面"></a>配置页面</h1><h2 id="HTML-部分"><a href="#HTML-部分" class="headerlink" title="HTML 部分"></a>HTML 部分</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>{{$t('message.hello')}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>//此时应该是中文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switchLang(<span class="token punctuation">'</span>en<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>英语<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switchLang(<span class="token punctuation">'</span>cn<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>中文<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switchLang(<span class="token punctuation">'</span>ja<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>日语<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Js-部分"><a href="#Js-部分" class="headerlink" title="Js 部分"></a>Js 部分</h2><pre class="line-numbers language-javascript"><code class="language-javascript">methods<span class="token punctuation">:</span><span class="token punctuation">{</span>    <span class="token function">switchLang</span><span class="token punctuation">(</span>lang<span class="token punctuation">)</span>  <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$i18n<span class="token punctuation">.</span>locale <span class="token operator">=</span> lang        <span class="token comment" spellcheck="true">//把语言保存在localStorage中</span>        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'lang'</span><span class="token punctuation">,</span>lang<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这样可以正常使用了</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue技巧和插件合集</title>
      <link href="/2019/11/11/vuehigh/"/>
      <url>/2019/11/11/vuehigh/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-中使用双语"><a href="#Vue-中使用双语" class="headerlink" title="Vue 中使用双语"></a>Vue 中使用双语</h1><p><a href="https://uiyin.github.io/2019/11/12/vuecha1/" target="_blank" rel="noopener">点此跳转</a></p><h1 id="vue-中使用-vue-lottie-动画"><a href="#vue-中使用-vue-lottie-动画" class="headerlink" title="vue 中使用 vue-lottie 动画"></a>vue 中使用 vue-lottie 动画</h1><p><a href="https://uiyin.github.io/2019/11/13/vuecha2/" target="_blank" rel="noopener">点此跳转</a></p><h1 id="vue-中使用-swiper-图片轮播"><a href="#vue-中使用-swiper-图片轮播" class="headerlink" title="vue 中使用 swiper 图片轮播"></a>vue 中使用 swiper 图片轮播</h1><p><a href="https://uiyin.github.io/2019/11/14/vuecha3/" target="_blank" rel="noopener">点此跳转</a></p><h1 id="vue-中使用无缝滚动"><a href="#vue-中使用无缝滚动" class="headerlink" title="vue 中使用无缝滚动"></a>vue 中使用无缝滚动</h1><p><a href="https://uiyin.github.io/2019/11/15/vuecha4/" target="_blank" rel="noopener">点此跳转</a></p><h1 id="vue-中使用-Ueedit-富文本"><a href="#vue-中使用-Ueedit-富文本" class="headerlink" title="vue 中使用 Ueedit 富文本"></a>vue 中使用 Ueedit 富文本</h1><p><a href="https://uiyin.github.io/2019/11/16/vuecha5/" target="_blank" rel="noopener">点此跳转</a></p><h1 id="vue-中使用-Stripe-验证美国信用卡"><a href="#vue-中使用-Stripe-验证美国信用卡" class="headerlink" title="vue 中使用 Stripe 验证美国信用卡"></a>vue 中使用 Stripe 验证美国信用卡</h1><p><a href="https://uiyin.github.io/2019/11/18/vuecha6/" target="_blank" rel="noopener">点此跳转</a></p><h1 id="vue-中使用数学计算-Math-和金融验证"><a href="#vue-中使用数学计算-Math-和金融验证" class="headerlink" title="vue 中使用数学计算(Math 和金融验证)"></a>vue 中使用数学计算(Math 和金融验证)</h1><p><a href="https://uiyin.github.io/2019/11/20/vuecha7/" target="_blank" rel="noopener">点此跳转</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>axios</title>
      <link href="/2019/11/10/axios/"/>
      <url>/2019/11/10/axios/</url>
      
        <content type="html"><![CDATA[<h1 id="axios-全攻略"><a href="#axios-全攻略" class="headerlink" title="axios 全攻略"></a>axios 全攻略</h1><ul><li>最早的异步请求用的是源生的，然后进化到 jquery, 接着逐渐演变到现在的 axios</li></ul><h2 id="axios-简介"><a href="#axios-简介" class="headerlink" title="axios 简介"></a>axios 简介</h2><blockquote><p>axios 是一个基于 Promise 用于浏览器和 nodejs 的 HTTP 客户端,它具有以下特征</p></blockquote><ul><li><p>从浏览器中创建 XMLHttpRequest</p></li><li><p>从 node.js 发出请求</p></li><li><p>支持 Promise API</p></li><li><p>拦截请求和响应</p></li><li><p>转换请求和响应数据</p></li><li><p>取消请求</p></li><li><p>自动转换 json 数据</p></li><li><p>客户端支持防止 CSRF/XSRF</p></li></ul><h2 id="axios-引入方式"><a href="#axios-引入方式" class="headerlink" title="axios 引入方式"></a>axios 引入方式</h2><pre class="line-numbers language-javascript"><code class="language-javascript">npm i axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者使用 cdn</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/axios/dist/axios.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="简易的-get-请求-POST-请求-执行多个并发请求"><a href="#简易的-get-请求-POST-请求-执行多个并发请求" class="headerlink" title="简易的 get 请求,POST 请求,执行多个并发请求"></a>简易的 get 请求,POST 请求,执行多个并发请求</h2><h3 id="执行-GET-请求"><a href="#执行-GET-请求" class="headerlink" title="执行 GET 请求"></a>执行 GET 请求</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 向具有指定ID的用户发出请求</span>axios  <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/user?ID=12345'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 也可以通过 params 对象传递参数,要是get需要里面写params</span>axios  <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/user'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    params<span class="token punctuation">:</span> <span class="token punctuation">{</span>      ID<span class="token punctuation">:</span> <span class="token number">12345</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="执行-POST-请求"><a href="#执行-POST-请求" class="headerlink" title="执行 POST 请求"></a>执行 POST 请求</h3><pre class="line-numbers language-javascript"><code class="language-javascript">axios  <span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/user'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    firstName<span class="token punctuation">:</span> <span class="token string">'Fred'</span><span class="token punctuation">,</span>    lastName<span class="token punctuation">:</span> <span class="token string">'Flintstone'</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="执行多个并发请求"><a href="#执行多个并发请求" class="headerlink" title="执行多个并发请求"></a>执行多个并发请求</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/user/12345'</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">getUserPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/user/12345/permissions'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>axios<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getUserAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getUserPermissions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>  axios<span class="token punctuation">.</span><span class="token function">spread</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>acct<span class="token punctuation">,</span> perms<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//两个请求现已完成</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="传入相关配置-个人用的最多"><a href="#传入相关配置-个人用的最多" class="headerlink" title="传入相关配置(个人用的最多)"></a>传入相关配置(个人用的最多)</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  method<span class="token punctuation">:</span> <span class="token string">'post'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//或者get</span>  url<span class="token punctuation">:</span> <span class="token string">'/user/12345'</span><span class="token punctuation">,</span>  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>    firstName<span class="token punctuation">:</span> <span class="token string">'Fred'</span><span class="token punctuation">,</span>    lastName<span class="token punctuation">:</span> <span class="token string">'Flintstone'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定义配置-axios"><a href="#自定义配置-axios" class="headerlink" title="自定义配置 axios"></a>自定义配置 axios</h2><h3 id="请求方法别名"><a href="#请求方法别名" class="headerlink" title="请求方法别名"></a>请求方法别名</h3><ul><li><p>axios.request(config)</p></li><li><p>axios.get(url,[config])</p></li><li><p>axios.delete(url,[config])</p></li><li><p>axios.head(url,[config])</p></li><li><p>axios.post(url,data,[config])</p></li><li><p>axios.put(url,data,[config])</p></li><li><p>axios.patch(url,data,[config])</p></li></ul><h3 id="并发"><a href="#并发" class="headerlink" title="并发"></a>并发</h3><ul><li><p>axios.all(iterable)</p></li><li><p>axios.spread(callback)</p></li></ul><h3 id="创建实例"><a href="#创建实例" class="headerlink" title="创建实例"></a>创建实例</h3><h4 id="您可以使用自定义配置来创建-axios-的新实例"><a href="#您可以使用自定义配置来创建-axios-的新实例" class="headerlink" title="您可以使用自定义配置来创建 axios 的新实例"></a>您可以使用自定义配置来创建 axios 的新实例</h4><ul><li>axios.create([config])</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> axiosobj <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  baseURL<span class="token punctuation">:</span> <span class="token string">'https://some-domain.com/api/'</span><span class="token punctuation">,</span>  timeout<span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token string">'X-Custom-Header'</span><span class="token punctuation">:</span> <span class="token string">'foobar'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="实例方法"><a href="#实例方法" class="headerlink" title="实例方法"></a>实例方法</h4><blockquote><p>可用的实例方法如下，指定的配置与实例结合</p></blockquote><ul><li><p>axios.request(config)</p></li><li><p>axios.get(url,[config])</p></li><li><p>axios.delete(url,[config])</p></li><li><p>axios.head(url,[config])</p></li><li><p>axios.post(url,data,[config])</p></li><li><p>axios.put(url,data,[config])</p></li><li><p>axios.patch(url,data,[config])</p></li></ul><h4 id="请求配置"><a href="#请求配置" class="headerlink" title="请求配置"></a>请求配置</h4><blockquote><p>下面这些用于发出请求的可用配置选项，只有 URL 是必须的。如果未指定方法，请求默认就是 GET</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// `url`是将用于请求的服务器URL</span>  url<span class="token punctuation">:</span> <span class="token string">'/user'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `method`是发出请求时使用的请求方法</span>  method<span class="token punctuation">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 默认</span>  <span class="token comment" spellcheck="true">// `baseURL`将被添加到`url`前面，除非`url`是绝对的。</span>  <span class="token comment" spellcheck="true">// 可以方便地为 axios 的实例设置`baseURL`，以便将相对 URL 传递给该实例的方法。</span>  baseURL<span class="token punctuation">:</span> <span class="token string">'https://some-domain.com/api/'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `transformRequest`允许在请求数据发送到服务器之前对其进行更改</span>  <span class="token comment" spellcheck="true">// 这只适用于请求方法'PUT'，'POST'和'PATCH'</span>  <span class="token comment" spellcheck="true">// 数组中的最后一个函数必须返回一个字符串，一个 ArrayBuffer或一个 Stream</span>  transformRequest<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 做任何你想要的数据转换</span>    <span class="token keyword">return</span> data<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `transformResponse`允许在 then / catch之前对响应数据进行更改</span>  transformResponse<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Do whatever you want to transform the data</span>    <span class="token keyword">return</span> data<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `headers`是要发送的自定义 headers</span>  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'X-Requested-With'</span><span class="token punctuation">:</span> <span class="token string">'XMLHttpRequest'</span><span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `params`是要与请求一起发送的URL参数</span>  <span class="token comment" spellcheck="true">// 必须是纯对象或URLSearchParams对象</span>  params<span class="token punctuation">:</span> <span class="token punctuation">{</span>    ID<span class="token punctuation">:</span> <span class="token number">12345</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `paramsSerializer`是一个可选的函数，负责序列化`params`</span>  <span class="token comment" spellcheck="true">// (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)</span>  paramsSerializer<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> Qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> <span class="token punctuation">{</span>arrayFormat<span class="token punctuation">:</span> <span class="token string">'brackets'</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `data`是要作为请求主体发送的数据</span>  <span class="token comment" spellcheck="true">// 仅适用于请求方法“PUT”，“POST”和“PATCH”</span>  <span class="token comment" spellcheck="true">// 当没有设置`transformRequest`时，必须是以下类型之一：</span>  <span class="token comment" spellcheck="true">// - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams</span>  <span class="token comment" spellcheck="true">// - Browser only: FormData, File, Blob</span>  <span class="token comment" spellcheck="true">// - Node only: Stream</span>  data<span class="token punctuation">:</span> <span class="token punctuation">{</span>    firstName<span class="token punctuation">:</span> <span class="token string">'Fred'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `timeout`指定请求超时之前的毫秒数。</span>  <span class="token comment" spellcheck="true">// 如果请求的时间超过'timeout'，请求将被中止。</span>  timeout<span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `withCredentials`指示是否跨站点访问控制请求</span>  <span class="token comment" spellcheck="true">// should be made using credentials</span>  withCredentials<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// default</span>  <span class="token comment" spellcheck="true">// `adapter'允许自定义处理请求，这使得测试更容易。</span>  <span class="token comment" spellcheck="true">// 返回一个promise并提供一个有效的响应（参见[response docs]（＃response-api））</span>  adapter<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* ... */</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `auth'表示应该使用 HTTP 基本认证，并提供凭据。</span>  <span class="token comment" spellcheck="true">// 这将设置一个`Authorization'头，覆盖任何现有的`Authorization'自定义头，使用`headers`设置。</span>  auth<span class="token punctuation">:</span> <span class="token punctuation">{</span>    username<span class="token punctuation">:</span> <span class="token string">'janedoe'</span><span class="token punctuation">,</span>    password<span class="token punctuation">:</span> <span class="token string">'s00pers3cret'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// “responseType”表示服务器将响应的数据类型</span>  <span class="token comment" spellcheck="true">// 包括 'arraybuffer', 'blob', 'document', 'json', 'text', 'stream'</span>  responseType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// default</span>  <span class="token comment" spellcheck="true">//`xsrfCookieName`是要用作 xsrf 令牌的值的cookie的名称</span>  xsrfCookieName<span class="token punctuation">:</span> <span class="token string">'XSRF-TOKEN'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// default</span>  <span class="token comment" spellcheck="true">// `xsrfHeaderName`是携带xsrf令牌值的http头的名称</span>  xsrfHeaderName<span class="token punctuation">:</span> <span class="token string">'X-XSRF-TOKEN'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// default</span>  <span class="token comment" spellcheck="true">// `onUploadProgress`允许处理上传的进度事件</span>  onUploadProgress<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>progressEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 使用本地 progress 事件做任何你想要做的</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `onDownloadProgress`允许处理下载的进度事件</span>  onDownloadProgress<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>progressEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Do whatever you want with the native progress event</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `maxContentLength`定义允许的http响应内容的最大大小</span>  maxContentLength<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `validateStatus`定义是否解析或拒绝给定的promise</span>  <span class="token comment" spellcheck="true">// HTTP响应状态码。如果`validateStatus`返回`true`（或被设置为`null` promise将被解析;否则，promise将被</span>  <span class="token comment" spellcheck="true">// 拒绝。</span>  validateStatus<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// default</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// `maxRedirects`定义在node.js中要遵循的重定向的最大数量。</span>  <span class="token comment" spellcheck="true">// 如果设置为0，则不会遵循重定向。</span>  maxRedirects<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 默认</span>  <span class="token comment" spellcheck="true">// `httpAgent`和`httpsAgent`用于定义在node.js中分别执行http和https请求时使用的自定义代理。</span>  <span class="token comment" spellcheck="true">// 允许配置类似`keepAlive`的选项，</span>  <span class="token comment" spellcheck="true">// 默认情况下不启用。</span>  httpAgent<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">http<span class="token punctuation">.</span>Agent</span><span class="token punctuation">(</span><span class="token punctuation">{</span> keepAlive<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  httpsAgent<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">https<span class="token punctuation">.</span>Agent</span><span class="token punctuation">(</span><span class="token punctuation">{</span> keepAlive<span class="token punctuation">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 'proxy'定义代理服务器的主机名和端口</span>  <span class="token comment" spellcheck="true">// `auth`表示HTTP Basic auth应该用于连接到代理，并提供credentials。</span>  <span class="token comment" spellcheck="true">// 这将设置一个`Proxy-Authorization` header，覆盖任何使用`headers`设置的现有的`Proxy-Authorization` 自定义 headers。</span>  proxy<span class="token punctuation">:</span> <span class="token punctuation">{</span>    host<span class="token punctuation">:</span> <span class="token string">'127.0.0.1'</span><span class="token punctuation">,</span>    port<span class="token punctuation">:</span> <span class="token number">9000</span><span class="token punctuation">,</span>    auth<span class="token punctuation">:</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span>      username<span class="token punctuation">:</span> <span class="token string">'mikeymike'</span><span class="token punctuation">,</span>      password<span class="token punctuation">:</span> <span class="token string">'rapunz3l'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// “cancelToken”指定可用于取消请求的取消令牌</span>  <span class="token comment" spellcheck="true">// (see Cancellation section below for details)</span>  cancelToken<span class="token punctuation">:</span> <span class="token keyword">new</span> <span class="token class-name">CancelToken</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>cancel<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>使用 then 时,您将收到如下响应</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">axios<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/user/12345'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>statusText<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>config<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置默认值"><a href="#配置默认值" class="headerlink" title="配置默认值"></a>配置默认值</h2><blockquote><p>您可以指定将应用于每个请求的配置默认值</p></blockquote><h3 id="全局-axios-默认值"><a href="#全局-axios-默认值" class="headerlink" title="全局 axios 默认值"></a>全局 axios 默认值</h3><pre class="line-numbers language-javascript"><code class="language-javascript">axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">'https://api.example.com'</span>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">]</span> <span class="token operator">=</span> AUTH_TOKENaxios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>post<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span>  <span class="token string">'application/x-www-form-urlencoded'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义实例默认值"><a href="#自定义实例默认值" class="headerlink" title="自定义实例默认值"></a>自定义实例默认值</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//在创建实例时设置配置默认值</span><span class="token keyword">var</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span>create（<span class="token punctuation">{</span>   baseURL：<span class="token string">'https://api.example.com'</span><span class="token punctuation">}</span>）<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//在实例创建后改变默认值</span>instance<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common <span class="token punctuation">[</span><span class="token string">'Authorization'</span><span class="token punctuation">]</span> <span class="token operator">=</span> AUTH_TOKEN<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="配置优先级顺序"><a href="#配置优先级顺序" class="headerlink" title="配置优先级顺序"></a>配置优先级顺序</h3><blockquote><p>配置将与优先顺序合并。顺序是 lib/defaults.js 库中的默认值。然后是实例的 defaults 属性,最后是请求的 config 参数,后者优先于前者。</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//使用库提供的配置默认值创建实例</span><span class="token comment" spellcheck="true">//此时，超时配置值为`0`，这是库的默认值</span><span class="token comment" spellcheck="true">//优先级最低</span><span class="token keyword">var</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span>create（）<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//覆盖库的超时默认值</span><span class="token comment" spellcheck="true">//现在所有请求将在超时前等待2.5秒</span>instance<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">2500</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//覆盖此请求的超时，因为它知道需要很长时间</span><span class="token comment" spellcheck="true">//优先级最高</span>instance<span class="token punctuation">.</span><span class="token keyword">get</span>（<span class="token string">'/ longRequest'</span>，<span class="token punctuation">{</span>   timeout：<span class="token number">5000</span><span class="token punctuation">}</span>）<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><blockquote><p>你可以截取请求或者响应在被 then 或者 catch 之前处理</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//添加请求拦截器</span>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span>use（<span class="token keyword">function</span>（config）<span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//在发送请求之前做某事</span>     <span class="token keyword">return</span> config<span class="token punctuation">;</span>   <span class="token punctuation">}</span>，<span class="token keyword">function</span>（error）<span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//请求错误时做些事</span>     <span class="token keyword">return</span> Promise<span class="token punctuation">.</span>reject（error）<span class="token punctuation">;</span>   <span class="token punctuation">}</span>）<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加响应拦截器</span>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span>use（<span class="token keyword">function</span>（response）<span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//对响应数据做些事</span>     <span class="token keyword">return</span> response<span class="token punctuation">;</span>   <span class="token punctuation">}</span>，<span class="token keyword">function</span>（error）<span class="token punctuation">{</span>     <span class="token comment" spellcheck="true">//请求错误时做些事</span>     <span class="token keyword">return</span> Promise<span class="token punctuation">.</span>reject（error）<span class="token punctuation">;</span>   <span class="token punctuation">}</span>）<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果你以后可能需要删除拦截器</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> myInterceptor <span class="token operator">=</span> axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*...*/</span><span class="token punctuation">}</span><span class="token punctuation">)</span>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">eject</span><span class="token punctuation">(</span>myInterceptor<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>你可以将拦截器添加到 axios 的自定义实例</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span>instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/*...*/</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>完整版本的拦截器。目前我用的</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// Vue版本的拦截器request.js</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'@/router'</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'@/store'</span><span class="token comment" spellcheck="true">/** **** request拦截器==>对请求参数做处理 ******/</span>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  config <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 加载</span>    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>loadingflag <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//加载等待动画loading,改变store值</span>    <span class="token keyword">let</span> value <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">let</span> result <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>      config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>authorization <span class="token operator">=</span>        result<span class="token punctuation">.</span>token_type <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>access_token    <span class="token punctuation">}</span>    <span class="token keyword">return</span> config  <span class="token punctuation">}</span><span class="token punctuation">,</span>  error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/** **** respone拦截器==>对响应做处理 ******/</span>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>loadingflag <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//加载等待动画loading不需要可以删除</span>    <span class="token keyword">return</span> response  <span class="token punctuation">}</span><span class="token punctuation">,</span>  error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 错误提醒</span>    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>loadingflag <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> error<span class="token punctuation">.</span>response    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 页面跳转</span>    router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> axios<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="处理错误"><a href="#处理错误" class="headerlink" title="处理错误"></a>处理错误</h3><pre class="line-numbers language-javascript"><code class="language-javascript">axios<span class="token punctuation">.</span><span class="token keyword">get</span>（<span class="token string">'/ user / 12345'</span>）   <span class="token punctuation">.</span><span class="token keyword">catch</span>（<span class="token keyword">function</span>（error）<span class="token punctuation">{</span>     <span class="token keyword">if</span>（error<span class="token punctuation">.</span>response）<span class="token punctuation">{</span>       <span class="token comment" spellcheck="true">//请求已发出，但服务器使用状态代码进行响应</span>       <span class="token comment" spellcheck="true">//落在2xx的范围之外</span>       console<span class="token punctuation">.</span>log（error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data）<span class="token punctuation">;</span>       console<span class="token punctuation">.</span>log（error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>status）<span class="token punctuation">;</span>       console<span class="token punctuation">.</span>log（error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>headers）<span class="token punctuation">;</span>     <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>       <span class="token comment" spellcheck="true">//在设置触发错误的请求时发生了错误</span>       console<span class="token punctuation">.</span>log（<span class="token string">'Error'</span>，error<span class="token punctuation">.</span>message）<span class="token punctuation">;</span>     <span class="token punctuation">}</span><span class="token punctuation">}</span>     console<span class="token punctuation">.</span>log（error<span class="token punctuation">.</span>config）<span class="token punctuation">;</span>   <span class="token punctuation">}</span>）<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>您可以用 validateStatus 配置选项定义 http 状态码的错误范围</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">axios<span class="token punctuation">.</span><span class="token keyword">get</span>（<span class="token string">'/ user / 12345'</span>，<span class="token punctuation">{</span>   validateStatus：<span class="token keyword">function</span>（status）<span class="token punctuation">{</span>     <span class="token keyword">return</span> status <span class="token operator">&lt;</span> <span class="token number">500</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//仅当状态代码大于或等于500时拒绝</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span>）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用-application-x-www-form-urlencoded-格式"><a href="#使用-application-x-www-form-urlencoded-格式" class="headerlink" title="使用 application / x-www-form-urlencoded 格式"></a>使用 application / x-www-form-urlencoded 格式</h3><blockquote><p>默认情况下,axios 将 Javascript 对象序列化 JSON，要以应用程序/ x-www-form-urlencoded 格式发送数据，您可以使用以下选项之一。</p></blockquote><h4 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h4><blockquote><p>在浏览器中，您可以使用 URLSearchParams API，如下所示：</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span>params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'param1'</span><span class="token punctuation">,</span> <span class="token string">'value1'</span><span class="token punctuation">)</span>params<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'param2'</span><span class="token punctuation">,</span> <span class="token string">'value2'</span><span class="token punctuation">)</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/foo'</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>请注意所有浏览器都不支持 URLSearchParams，但是有一个 polyfill 可用（确保 polyfill 全局环境）。</p></blockquote><ul><li>或者您可以使用 qs 库对数据进行编码</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> qs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'qs'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'/foo'</span><span class="token punctuation">,</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">'bar'</span><span class="token punctuation">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="Node-js-中"><a href="#Node-js-中" class="headerlink" title="Node.js 中"></a>Node.js 中</h4><ul><li>在 node.js 中 可以使用 querystring 模块,如下所示</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> querystring <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'querystring'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'http://something.com/'</span><span class="token punctuation">,</span> querystring<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> foo<span class="token punctuation">:</span> <span class="token string">'bar'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h4><ul><li>axios 依赖本机要支持 ES6 Promise 实现。 如果您的环境不支持 ES6 Promises，您可以使用 polyfill。</li></ul><h3 id="还有一种可能性换-token"><a href="#还有一种可能性换-token" class="headerlink" title="还有一种可能性换 token"></a>还有一种可能性换 token</h3><blockquote><p>当 token 过期了,我们需要重新发送 token，然后重新发送请求.</p></blockquote><blockquote><p>两个难点 1.当一个 token 刷新的时候其他接口怎么办?(这里用到了锁和队列) 2.刷新 token 和获取 token 接口不一致</p></blockquote><blockquote><p>下面放上完整版代码</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// request.js</span><span class="token comment" spellcheck="true">/*思路 1.创建了两个实例 一个暴露以后使用,一个就为了重新刷新token   之所以创立两个是因为headers里面放的内容不一样 2.千万不能在暴露的实例里写headers这样他里面的值不会改变 3.多个请求利用了锁的概念,上锁了则必须要把其他的请求存到数组里。解锁后在执行*/</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'@/router'</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'@/store'</span><span class="token keyword">import</span> url <span class="token keyword">from</span> <span class="token string">'@/config.js'</span><span class="token comment" spellcheck="true">// 是否正在刷新的标记</span><span class="token keyword">let</span> isRefreshing <span class="token operator">=</span> <span class="token boolean">false</span><span class="token comment" spellcheck="true">// 重试队列，每一项将是一个待执行的函数形式</span><span class="token keyword">let</span> requests <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">//获取token</span><span class="token keyword">function</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">const</span> token <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>    <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      token_type<span class="token punctuation">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>      access_token<span class="token punctuation">:</span> <span class="token keyword">null</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*自定义实例开始*/</span><span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//这里千万不能写headers否则会造成数据缓存</span>  timeout<span class="token punctuation">:</span> <span class="token number">300000</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/*获取refreshtoken开始*/</span><span class="token keyword">const</span> Base64 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'js-base64'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Base64<span class="token keyword">let</span> headers <span class="token operator">=</span> <span class="token string">'Basic '</span> <span class="token operator">+</span> Base64<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> url<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token keyword">const</span> refreshinstance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  timeout<span class="token punctuation">:</span> <span class="token number">300000</span><span class="token punctuation">,</span>  headers<span class="token punctuation">:</span> <span class="token punctuation">{</span>    authorization<span class="token punctuation">:</span> headers  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">function</span> <span class="token function">refreshToken</span><span class="token punctuation">(</span>lastrequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> data <span class="token operator">=</span> window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span>  <span class="token keyword">let</span> result <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'grant_type'</span><span class="token punctuation">,</span> <span class="token string">'refresh_token'</span><span class="token punctuation">)</span>  formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'refresh_token'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>refresh_token<span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token function">refreshinstance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> url<span class="token punctuation">.</span>token<span class="token punctuation">,</span>    data<span class="token punctuation">:</span> formData<span class="token punctuation">,</span>    method<span class="token punctuation">:</span> <span class="token string">'POST'</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//console.log(res.data);</span>    <span class="token keyword">let</span> result <span class="token operator">=</span> res<span class="token punctuation">.</span>data    <span class="token keyword">let</span> tokenresult <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">,</span> tokenresult<span class="token punctuation">)</span>    lastrequest<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>      authorization<span class="token punctuation">:</span> result<span class="token punctuation">.</span>token_type <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> result<span class="token punctuation">.</span>access_token    <span class="token punctuation">}</span>    requests<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>cb <span class="token operator">=</span><span class="token operator">></span> <span class="token function">cb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//请求完成将所有队列的请求重新来一次</span>    requests <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//清空它</span>    isRefreshing <span class="token operator">=</span> <span class="token boolean">false</span> <span class="token comment" spellcheck="true">//解开锁</span>    <span class="token comment" spellcheck="true">//window.location.reload(); //在考虑一下</span>    <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span>lastrequest<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">/*获取refreshtoken结束*/</span><span class="token comment" spellcheck="true">/** **** request拦截器==>对请求参数做处理 ******/</span>instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  config <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 加载</span>    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>loadingflag <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>authorization <span class="token operator">=</span> value<span class="token punctuation">.</span>token_type <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> value<span class="token punctuation">.</span>access_token    <span class="token keyword">return</span> config  <span class="token punctuation">}</span><span class="token punctuation">,</span>  error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/** **** respone拦截器==>对响应做处理 ******/</span>instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>loadingflag <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">return</span> response  <span class="token punctuation">}</span><span class="token punctuation">,</span>  error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 错误提醒</span>    <span class="token comment" spellcheck="true">//console.log(error.config);</span>    <span class="token keyword">let</span> lastrequest <span class="token operator">=</span> error<span class="token punctuation">.</span>config    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>loadingflag <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> error<span class="token punctuation">.</span>response    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isRefreshing<span class="token punctuation">)</span> <span class="token punctuation">{</span>        isRefreshing <span class="token operator">=</span> <span class="token boolean">true</span>        <span class="token keyword">return</span> <span class="token function">refreshToken</span><span class="token punctuation">(</span>lastrequest<span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>          requests<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>            lastrequest<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>              authorization<span class="token punctuation">:</span>                <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>token_type <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> <span class="token function">getToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>access_token            <span class="token punctuation">}</span>            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">instance</span><span class="token punctuation">(</span>lastrequest<span class="token punctuation">)</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">//return Promise.reject(error);</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 页面跳转</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/*刷新token对响应的处理*/</span>refreshinstance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>  response <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>loadingflag <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">return</span> response  <span class="token punctuation">}</span><span class="token punctuation">,</span>  error <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 错误提醒</span>    store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>loadingflag <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> error<span class="token punctuation">.</span>response    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// // // 清除token</span>      window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">// // 页面跳转</span>      router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">//刷新页面</span>      window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span>    window<span class="token punctuation">.</span>sessionStorage<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">// // 页面跳转</span>    router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//刷新页面</span>    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/*刷新token对响应的处理结束*/</span><span class="token keyword">export</span> <span class="token keyword">default</span> instance<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> axios </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> axios </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学记笔记(八) Vue路由传参数，动画和钩子函数</title>
      <link href="/2019/11/09/vueba/"/>
      <url>/2019/11/09/vueba/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-路由传参"><a href="#Vue-路由传参" class="headerlink" title="Vue 路由传参"></a>Vue 路由传参</h1><h2 id="动态路径传参数"><a href="#动态路径传参数" class="headerlink" title="动态路径传参数"></a>动态路径传参数</h2><blockquote><p>比如我们要传递的路径 /hi/hahah/123 第一个是组件名 第二个，第三个是参数</p></blockquote><h3 id="1-路由里面配置参数"><a href="#1-路由里面配置参数" class="headerlink" title="(1) 路由里面配置参数"></a>(1) 路由里面配置参数</h3><blockquote><p>看路径 利用冒号绑定好参数</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>      path<span class="token punctuation">:</span><span class="token string">'/Hi/:username/:id'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span><span class="token string">"Hi"</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span>Hi<span class="token punctuation">,</span>      children<span class="token punctuation">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>path<span class="token punctuation">:</span><span class="token string">"hi1"</span><span class="token punctuation">,</span>name<span class="token punctuation">:</span><span class="token string">"Hi1"</span><span class="token punctuation">,</span>component<span class="token punctuation">:</span>Hi1<span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>path<span class="token punctuation">:</span><span class="token string">"hi2"</span><span class="token punctuation">,</span>name<span class="token punctuation">:</span><span class="token string">"Hi2"</span><span class="token punctuation">,</span>component<span class="token punctuation">:</span>Hi2<span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-组件里面输出"><a href="#2-组件里面输出" class="headerlink" title="(2) 组件里面输出"></a>(2) 组件里面输出</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>  <span class="token punctuation">{</span>    $route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>username  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span>  <span class="token punctuation">{</span>    $route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="路由跳转参数的两种方法"><a href="#路由跳转参数的两种方法" class="headerlink" title="路由跳转参数的两种方法"></a>路由跳转参数的两种方法</h2><ul><li><p>是利用 query 方式传递参数</p></li><li><p>是利用 params 方式传递参数</p></li></ul><h3 id="利用-query-方式传递参数"><a href="#利用-query-方式传递参数" class="headerlink" title="利用 query 方式传递参数"></a>利用 query 方式传递参数</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  传参<span class="token punctuation">:</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          path<span class="token punctuation">:</span><span class="token string">'/xxx'</span>          query<span class="token punctuation">:</span><span class="token punctuation">{</span>            id<span class="token punctuation">:</span>id          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>  接收参数<span class="token punctuation">:</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="利用-params-方式传递参数"><a href="#利用-params-方式传递参数" class="headerlink" title="利用 params 方式传递参数"></a>利用 params 方式传递参数</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  传参<span class="token punctuation">:</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          name<span class="token punctuation">:</span><span class="token string">'xxx'</span>          params<span class="token punctuation">:</span><span class="token punctuation">{</span>            id<span class="token punctuation">:</span>id          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>  接收参数<span class="token punctuation">:</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意:params 传参，push 里面只能是 name:’xxxx’,不能是 path:’/xxx’,因为 params 只能用 name 来引入路由，如果这里写成了 path，接收参数页面会是 undefined！！！另外，二者还有点区别，直白的来说 query 相当于 get 请求，页面跳转的时候，可以在地址栏看到请求参数，而 params 相当于 post 请求，参数不会再地址栏中显示.另外要是通过 query 传值，页面刷新的话参数不丢失</p></blockquote><h1 id="Vue-动画"><a href="#Vue-动画" class="headerlink" title="Vue 动画"></a>Vue 动画</h1><ul><li>想要路由有过度动画效果只需要在 router-view 外部加载一个 transition 标签即可</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gotop<span class="token punctuation">"</span></span> <span class="token attr-name">model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>out-in<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>allcontent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>name 就是 css 类前面开头制定的名称，model 就是执行的顺序，他有两个。第一个是 out-in 第二个是 in-out</p></blockquote><ul><li>然后在 css 里面写</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector"><span class="token class">.gotop-enter-active</span>,  <span class="token class">.gotop-leave-active</span> </span><span class="token punctuation">{</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.4</span>s linear<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token class">.gotop-enter</span>,  <span class="token class">.gotop-leave-to</span> </span><span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token class">.gotop-leave</span>,  <span class="token class">.gotop-enter-to</span> </span><span class="token punctuation">{</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Vue-导航里面的钩子函数"><a href="#Vue-导航里面的钩子函数" class="headerlink" title="Vue 导航里面的钩子函数"></a>Vue 导航里面的钩子函数</h1><ul><li><p>第一种就是全局匹配 beforeeach</p></li><li><p>第二种就是单个路由下面写配置,beforeEnter</p></li><li><p>第三种就是组件里面写钩子函数 beforeRouterEnter</p></li></ul><h2 id="1-全局匹配"><a href="#1-全局匹配" class="headerlink" title="(1) 全局匹配"></a>(1) 全局匹配</h2><blockquote><p>一般情况我们管这个叫路由守卫，简称全拦，他一般有 3 个参数 to from next 表示通过才跳转,一般写在 main.js 里面</p></blockquote><blockquote><p>to 表示要跳转的路径信息,from 表示从哪里来的,next 表示路由控制的参数,通过与否</p></blockquote><blockquote><p>代码如下</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript">router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 设置延时器让created先执行在进行路由跳转</span>  <span class="token comment" spellcheck="true">// 取出token值</span>  <span class="token keyword">let</span> value <span class="token operator">=</span> storgeMemery<span class="token punctuation">.</span><span class="token function">getvalue</span><span class="token punctuation">(</span><span class="token string">'token'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 取出来token</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 判断该路由是否需要登录权限</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">'Login'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          path<span class="token punctuation">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>          query<span class="token punctuation">:</span> <span class="token punctuation">{</span>            redirect<span class="token punctuation">:</span> to<span class="token punctuation">.</span>fullPath          <span class="token punctuation">}</span> <span class="token comment" spellcheck="true">// 将跳转的路由path作为参数，登录成功后跳转到该路由</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-单个路由下配置"><a href="#2-单个路由下配置" class="headerlink" title="(2) 单个路由下配置"></a>(2) 单个路由下配置</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'HelloWorld'</span><span class="token punctuation">,</span>      components<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token keyword">default</span><span class="token punctuation">:</span> HelloWorld<span class="token punctuation">,</span>        left<span class="token punctuation">:</span> Hi1<span class="token punctuation">,</span>        right<span class="token punctuation">:</span> Hi2<span class="token punctuation">,</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>beforeEnter<span class="token punctuation">:</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span><span class="token keyword">from</span><span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">></span><span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"我进来了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-组件里面写钩子函数-beforeRouterEnter-beforeRouterLeave"><a href="#3-组件里面写钩子函数-beforeRouterEnter-beforeRouterLeave" class="headerlink" title="(3)组件里面写钩子函数 beforeRouterEnter,beforeRouterLeave"></a>(3)组件里面写钩子函数 beforeRouterEnter,beforeRouterLeave</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>      name<span class="token punctuation">:</span><span class="token string">"Hi2"</span><span class="token punctuation">,</span>      <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token keyword">return</span> <span class="token punctuation">{</span>           message2<span class="token punctuation">:</span><span class="token string">"这个就是Hi2页面"</span>         <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>beforeRouterEnter<span class="token punctuation">:</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span><span class="token keyword">from</span><span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"我进来了"</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">.</span>beforeRouterLeave<span class="token punctuation">:</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span>form<span class="token punctuation">,</span>next<span class="token punctuation">)</span><span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"我离开了"</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学记笔记(七) Vue路由</title>
      <link href="/2019/11/08/vueqi/"/>
      <url>/2019/11/08/vueqi/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-router"><a href="#Vue-router" class="headerlink" title="Vue-router"></a>Vue-router</h1><p>Vue 通过管理 URL 来实现 url 和组件的对应。通过 url 来进行组件之间的切换</p><h2 id="Vue-router-路由有两种模式"><a href="#Vue-router-路由有两种模式" class="headerlink" title="Vue-router 路由有两种模式"></a>Vue-router 路由有两种模式</h2><h3 id="1-第一种-hash-模式-俗称哈希-即地址栏-url-中的-符号-一般默认就是-hash"><a href="#1-第一种-hash-模式-俗称哈希-即地址栏-url-中的-符号-一般默认就是-hash" class="headerlink" title="(1) 第一种 hash 模式,俗称哈希 即地址栏 url 中的#符号.一般默认就是 hash"></a>(1) 第一种 hash 模式,俗称哈希 即地址栏 url 中的#符号.一般默认就是 hash</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>例如这个URL http://www.abc.com/#/home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>那么他的hash值就是为/#/home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>hash值好处就是对后端完全没有影响,改变hash值不会重新加载页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-history-就是平常的-url"><a href="#2-history-就是平常的-url" class="headerlink" title="(2) history(就是平常的 url)"></a>(2) history(就是平常的 url)</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>但是在2.x版本中打包后会出现一片空白<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Vue-router-的使用"><a href="#Vue-router-的使用" class="headerlink" title="Vue-router 的使用"></a>Vue-router 的使用</h2><h3 id="1-纯静态加载组件"><a href="#1-纯静态加载组件" class="headerlink" title="(1)纯静态加载组件"></a>(1)纯静态加载组件</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span> <span class="token comment" spellcheck="true">//引入vue</span><span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span> <span class="token comment" spellcheck="true">//引入router</span><span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">'@/components/HelloWorld'</span> <span class="token comment" spellcheck="true">//加载组件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//使用组件</span><span class="token comment" spellcheck="true">//路由的核心文件</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'HelloWorld'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> HelloWorld    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-动态引入，按需加载-常用"><a href="#2-动态引入，按需加载-常用" class="headerlink" title="(2)动态引入，按需加载(常用)"></a>(2)动态引入，按需加载(常用)</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token keyword">const</span> Index <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">'@/views/Index.vue'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//首页</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  mode<span class="token punctuation">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>  base<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>BASE_URL<span class="token punctuation">,</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'Index'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> Index    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-html-要是想跳转的话，通过链接"><a href="#3-html-要是想跳转的话，通过链接" class="headerlink" title="(3)html 要是想跳转的话，通过链接"></a>(3)html 要是想跳转的话，通过链接</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/xxx<span class="token punctuation">"</span></span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>li<span class="token punctuation">"</span></span> <span class="token attr-name">event</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mouseover<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>选中了以后他会自动给当前路由加载一个类名，表示选中的状态</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>router-link-active 全局匹配 即path名包含在所有路由都会匹配<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>router-link-exact-active 精确匹配 即点击哪个路由，哪个被匹配。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>如果希望改变这个类名可以在下面改变</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  mode<span class="token punctuation">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>  base<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>BASE_URL<span class="token punctuation">,</span>  linkActiveClass<span class="token punctuation">:</span> <span class="token string">'is-active'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//这样选中的类名就改变了就变成router-link-active</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'Index'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> Index    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-404-页面，必须把匹配-放在最后，否则他会直接-404"><a href="#4-404-页面，必须把匹配-放在最后，否则他会直接-404" class="headerlink" title="(4) 404 页面，必须把匹配*放在最后，否则他会直接 404"></a>(4) 404 页面，必须把匹配*放在最后，否则他会直接 404</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">"vue"</span><span class="token punctuation">;</span><span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">"vue-router"</span><span class="token punctuation">;</span><span class="token keyword">const</span> Index <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"@/views/Index.vue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//首页</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  mode<span class="token punctuation">:</span> <span class="token string">"history"</span><span class="token punctuation">,</span>  base<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>BASE_URL<span class="token punctuation">,</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">"Index"</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> Index    <span class="token punctuation">}</span>，   <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">"*"</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">"Index"</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> Index    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-重定向-redirect-就是用户访问的是-A-网址-实际跳转到-B-网址"><a href="#5-重定向-redirect-就是用户访问的是-A-网址-实际跳转到-B-网址" class="headerlink" title="(5) 重定向 redirect 就是用户访问的是 A 网址 实际跳转到 B 网址"></a>(5) 重定向 redirect 就是用户访问的是 A 网址 实际跳转到 B 网址</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">{</span> path<span class="token punctuation">:</span><span class="token string">'/goback/:username/:id'</span><span class="token punctuation">,</span> redireact<span class="token punctuation">:</span> <span class="token string">'/Hi/:username/:id'</span> <span class="token comment" spellcheck="true">//也可以跳转到name</span> <span class="token comment" spellcheck="true">// redireact: {name:'home'} 前提是必须有name属性</span> <span class="token comment" spellcheck="true">//也可以使用函数比如</span> <span class="token comment" spellcheck="true">/* redirect:(to)=>{   if(to.path==="123")   {     return {name:'home'} // 或者path之类的或者路径   } } */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-别名"><a href="#6-别名" class="headerlink" title="(6) 别名"></a>(6) 别名</h3><ul><li>它不同于重定向，它相当于换了个名字</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>     path<span class="token punctuation">:</span><span class="token string">'/Hi/:username/:id'</span><span class="token punctuation">,</span>     component<span class="token punctuation">:</span>Hi<span class="token punctuation">,</span>     alias<span class="token punctuation">:</span><span class="token string">"gofor"</span>  <span class="token comment" spellcheck="true">//前面不要加/</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>前端访问 gofor 实际访问的还是那个 hi 路由</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/gofor<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>gofor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="7-子路由"><a href="#7-子路由" class="headerlink" title="(7)子路由"></a>(7)子路由</h3><blockquote><p>比如我们想/hi/hi1 这样的，我们管这个叫子路由</p></blockquote><h4 id="i-必须要在路由是-hi-里面放一个-routerview"><a href="#i-必须要在路由是-hi-里面放一个-routerview" class="headerlink" title="(i) 必须要在路由是 hi 里面放一个 routerview"></a>(i) 必须要在路由是 hi 里面放一个 routerview</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      {{msg}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ii-然后在路由里面写-children-属性，千万记住了子路由不能加"><a href="#ii-然后在路由里面写-children-属性，千万记住了子路由不能加" class="headerlink" title="(ii) 然后在路由里面写 children 属性，千万记住了子路由不能加/"></a>(ii) 然后在路由里面写 children 属性，千万记住了子路由不能加/</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>      path<span class="token punctuation">:</span><span class="token string">'/hi'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span><span class="token string">"Hi"</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span>Hi<span class="token punctuation">,</span>      children<span class="token punctuation">:</span><span class="token punctuation">[</span>        <span class="token punctuation">{</span>path<span class="token punctuation">:</span><span class="token string">" "</span><span class="token punctuation">,</span>component<span class="token punctuation">:</span>Hi<span class="token punctuation">,</span>name<span class="token punctuation">:</span><span class="token string">"Hi"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>path<span class="token punctuation">:</span><span class="token string">"hi1"</span><span class="token punctuation">,</span>component<span class="token punctuation">:</span>Hi1<span class="token punctuation">,</span>name<span class="token punctuation">:</span><span class="token string">"Hi1"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>path<span class="token punctuation">:</span><span class="token string">"hi2"</span><span class="token punctuation">,</span>component<span class="token punctuation">:</span>Hi2<span class="token punctuation">,</span>name<span class="token punctuation">:</span><span class="token string">"Hi2"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">]</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="单页面多路由多个-routerview"><a href="#单页面多路由多个-routerview" class="headerlink" title="单页面多路由多个 routerview"></a>单页面多路由多个 routerview</h3><h4 id="1-写好位置"><a href="#1-写好位置" class="headerlink" title="(1) 写好位置"></a>(1) 写好位置</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">  <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span>left</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">  <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">50%</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">400</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-在路由里面设置，记住一定是-components"><a href="#2-在路由里面设置，记住一定是-components" class="headerlink" title="(2)在路由里面设置，记住一定是 components"></a>(2)在路由里面设置，记住一定是 components</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Router <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token keyword">import</span> HelloWorld <span class="token keyword">from</span> <span class="token string">'@/components/HelloWorld'</span><span class="token keyword">import</span> Hi <span class="token keyword">from</span> <span class="token string">'@/components/Hi'</span><span class="token keyword">import</span> Hi1 <span class="token keyword">from</span> <span class="token string">'@/components/Hi1'</span><span class="token keyword">import</span> Hi2 <span class="token keyword">from</span> <span class="token string">'@/components/Hi2'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Router<span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'HelloWorld'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">//这里就是要加载你要显示的组件 对应name</span>      components<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token keyword">default</span><span class="token punctuation">:</span> HelloWorld<span class="token punctuation">,</span>        left<span class="token punctuation">:</span> Hi1<span class="token punctuation">,</span>        right<span class="token punctuation">:</span> Hi2      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="重点开始滚动行为，当用户滚动后加载路由"><a href="#重点开始滚动行为，当用户滚动后加载路由" class="headerlink" title="重点开始滚动行为，当用户滚动后加载路由"></a>重点开始滚动行为，当用户滚动后加载路由</h3><blockquote><p>要是有记录滚动条从记录开始，要是没记录从 0 开始，要是想从 0 开始 直接 return {x:0,y:0}</p></blockquote><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Router</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  mode<span class="token punctuation">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>  base<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>BASE_URL<span class="token punctuation">,</span>  <span class="token function">scrollBehavior</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> savePosition<span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">)</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>savePosition<span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//如果滚动条有位置就记住，没有就是从0开始</span>    <span class="token comment" spellcheck="true">// if (savePosition) {</span>    <span class="token comment" spellcheck="true">//   return savePosition;</span>    <span class="token comment" spellcheck="true">// } else {</span>    <span class="token comment" spellcheck="true">//   return { x: 0, y: 0 };</span>    <span class="token comment" spellcheck="true">// }</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      y<span class="token punctuation">:</span> <span class="token number">0</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'home'</span><span class="token punctuation">,</span>      component<span class="token punctuation">:</span> Home    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/about'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'about'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// route level code-splitting</span>      <span class="token comment" spellcheck="true">// this generates a separate chunk (about.[hash].js) for this route</span>      <span class="token comment" spellcheck="true">// which is lazy-loaded when the route is visited.</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> About    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span>      path<span class="token punctuation">:</span> <span class="token string">'/index'</span><span class="token punctuation">,</span>      name<span class="token punctuation">:</span> <span class="token string">'Index'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// route level code-splitting</span>      <span class="token comment" spellcheck="true">// this generates a separate chunk (about.[hash].js) for this route</span>      <span class="token comment" spellcheck="true">// which is lazy-loaded when the route is visited.</span>      component<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> Index    <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果希望刷新后滚动条从 0 开始直接</p></blockquote><pre class="line-numbers language-html"><code class="language-html">只有在最外层export default 的最外面 写代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'beforeunload'</span><span class="token punctuation">,</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    xxxxxxxxxxxx  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学记笔记(六) Vuex</title>
      <link href="/2019/11/07/vueliu/"/>
      <url>/2019/11/07/vueliu/</url>
      
        <content type="html"><![CDATA[<h1 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h1><ul><li>可以理解为公共仓库，它只要一刷新数据就清空。负责组件之间传值。父子，兄弟都可以</li></ul><h2 id="Vuex-分成几个部分"><a href="#Vuex-分成几个部分" class="headerlink" title="Vuex 分成几个部分"></a>Vuex 分成几个部分</h2><ul><li><p>state (存放公共数据)</p></li><li><p>getters (对 state 数据二次封装，防止污染 state)</p></li><li><p>mutations (里面都是方法，它的作用就是修改 state 里面的数据)</p></li><li><p>actions (可以理解为 mutations 里面的一个合集,它能执行很多个 mutations)</p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//要设置的全局访问的state对象</span>  showFooter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  changableNum<span class="token punctuation">:</span> <span class="token number">0</span>  <span class="token comment" spellcheck="true">//要设置的初始属性值</span><span class="token punctuation">}</span><span class="token keyword">const</span> getters <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//实时监听state值的变化(最新状态)</span>  <span class="token function">isShow</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//承载变化的showFooter的值</span>    <span class="token keyword">return</span> state<span class="token punctuation">.</span>showFooter  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">getChangedNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//承载变化的changebleNum的值</span>    <span class="token keyword">return</span> state<span class="token punctuation">.</span>changableNum  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> mutations <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token function">show</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//自定义改变state初始值的方法，这里面的参数除了state之外还可以再传额外的参数(变量或对象);</span>    state<span class="token punctuation">.</span>showFooter <span class="token operator">=</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">hide</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//同上</span>    state<span class="token punctuation">.</span>showFooter <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">newNum</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span> sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//同上，这里面的参数除了state之外还传了需要增加的值sum</span>    state<span class="token punctuation">.</span>changableNum <span class="token operator">+</span><span class="token operator">=</span> sum  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> actions <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token function">hideFooter</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//自定义触发mutations里函数的方法，context与store 实例具有相同方法和属性</span>    context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'hide'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">showFooter</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//同上注释</span>    context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'show'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token function">getNewNum</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//同上注释，num为要变化的形参</span>    context<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'newNum'</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  state<span class="token punctuation">,</span>  getters<span class="token punctuation">,</span>  mutations<span class="token punctuation">,</span>  actions<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">default</span> store<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>使用的时候 actions 第一个参数和 mutations 的第一个参数都可以不传</p></li><li><p>mapState,mapMutations 是 Vue 提供的语法糖可以直接使用</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> <span class="token punctuation">{</span> mapState<span class="token punctuation">,</span> mapMutations <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        singerId<span class="token punctuation">:</span> <span class="token string">'singer'</span> <span class="token comment" spellcheck="true">//改名</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'汇总'</span><span class="token punctuation">,</span>        showflag2<span class="token punctuation">:</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token operator">...</span><span class="token function">mapMutations</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        setsinger<span class="token punctuation">:</span> <span class="token string">'setsinger'</span> <span class="token comment" spellcheck="true">//改名</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 点击方法</span>      <span class="token function">gotourl</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setsinger</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Vuex-也可以分着写，然后在汇总"><a href="#Vuex-也可以分着写，然后在汇总" class="headerlink" title="Vuex 也可以分着写，然后在汇总"></a>Vuex 也可以分着写，然后在汇总</h2><ul><li>单独的第一个 store 文件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  state<span class="token punctuation">:</span> <span class="token punctuation">{</span>    orderData<span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">updateOrder</span><span class="token punctuation">(</span>state<span class="token punctuation">:</span> any<span class="token punctuation">,</span> orderData<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token punctuation">{</span>      state<span class="token punctuation">.</span>orderData <span class="token operator">=</span> orderData    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>单独的第二个 store 文件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>  state<span class="token punctuation">:</span> <span class="token punctuation">{</span>    modalHow<span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mutations<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token function">updateModalClose</span><span class="token punctuation">(</span>state<span class="token punctuation">:</span> any<span class="token punctuation">,</span> modalClose<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token punctuation">{</span>      state<span class="token punctuation">.</span>modalClose <span class="token operator">=</span> modalClose    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>汇总</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token keyword">import</span> footer <span class="token keyword">from</span> <span class="token string">'./modules/kiosk_footer'</span> <span class="token comment" spellcheck="true">// 引入第一个store对象</span><span class="token keyword">import</span> cart <span class="token keyword">from</span> <span class="token string">'./modules/kiosk_cart'</span> <span class="token comment" spellcheck="true">//引入第二个store对象</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  modules<span class="token punctuation">:</span> <span class="token punctuation">{</span>    footer<span class="token punctuation">,</span>    cart  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学记笔记(五) 组件</title>
      <link href="/2019/11/06/vuewu/"/>
      <url>/2019/11/06/vuewu/</url>
      
        <content type="html"><![CDATA[<h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><p>Vue 的核心就在于组件。组件的作用就是:复用。</p><p>小到一个按钮，大到一个页面都可以是组件</p><h2 id="组件的三元素"><a href="#组件的三元素" class="headerlink" title="组件的三元素"></a>组件的三元素</h2><p>每一个组件都必须包括三元素</p><ul><li><p>template (用来存放 html)</p></li><li><p>script (用来写 js)</p></li><li><p>style (用来写 css)</p></li><li><p>这里千万注意的是组件必须要大写，我这里是因为格式化所以变小写。实际要大写</p></li></ul><blockquote><p>特别注意的就是组件外面必须有一个包裹层，否则直接报错误</p></blockquote><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginbox_wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'@/pages/common/Header'</span>  <span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">'@/pages/common/Footer'</span>  <span class="token keyword">import</span> Main <span class="token keyword">from</span> <span class="token string">'@/pages/Login/components/Main'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'登陆'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>      Header<span class="token punctuation">,</span>      Footer<span class="token punctuation">,</span>      Main    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token comment" spellcheck="true">/*mobile*/</span>  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 767px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.loginbox_wrap</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span>vh - <span class="token number">200</span>px - <span class="token number">73</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*pad*/</span>  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span> and <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 1024px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.loginbox_wrap</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span>vh - <span class="token number">108</span>px - <span class="token number">150</span>px - <span class="token number">50</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#f3f3f3</span><span class="token punctuation">;</span>      <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span>  <span class="token comment" spellcheck="true">/*desktop*/</span>  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 1025px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span>    <span class="token selector"><span class="token class">.loginbox_wrap</span> </span><span class="token punctuation">{</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>      <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span><span class="token number">100</span>vh - <span class="token number">108</span>px - <span class="token number">150</span>px - <span class="token number">50</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#f3f3f3</span><span class="token punctuation">;</span>      <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组件的引入必须有三点"><a href="#组件的引入必须有三点" class="headerlink" title="组件的引入必须有三点"></a>组件的引入必须有三点</h2><ul><li><p>第一步：引入组件(import)</p></li><li><p>第二步: 注册组件(components)</p></li><li><p>第三步: 使用组件(自定义标签)</p></li><li><p>这里千万注意的是组件必须要大写，我这里是因为格式化所以变小写。实际要大写</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'@/pages/common/Header'</span>  <span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">'@/pages/common/Footer'</span>  <span class="token keyword">import</span> Main <span class="token keyword">from</span> <span class="token string">'@/pages/Login/components/Main'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'登陆'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>      Header<span class="token punctuation">,</span>      Footer<span class="token punctuation">,</span>      Main    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组件之间的数据传递"><a href="#组件之间的数据传递" class="headerlink" title="组件之间的数据传递"></a>组件之间的数据传递</h2><p>组件之间的数据传递有两种</p><ul><li><p>父子组件</p></li><li><p>Vuex</p></li><li><p>总线机制</p></li><li><p>卡槽</p></li></ul><h3 id="父子组件"><a href="#父子组件" class="headerlink" title="父子组件"></a>父子组件</h3><p>父子组件传值就两点</p><ul><li><p>传递数据 props</p></li><li><p>子组件改变数据</p></li></ul><h4 id="父组件"><a href="#父组件" class="headerlink" title="父组件"></a>父组件</h4><ul><li>通过绑定:来传递数据,这样就把数据传递过去了,监听子组件传过来的事件，来调用父组件的方法改变值</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>loginbox_wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">:info</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span> <span class="token attr-name">:infoflag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span> <span class="token attr-name">@changeflag</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>switchflag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'@/pages/common/Header'</span>  <span class="token keyword">import</span> Footer <span class="token keyword">from</span> <span class="token string">'@/pages/common/Footer'</span>  <span class="token keyword">import</span> Main <span class="token keyword">from</span> <span class="token string">'@/pages/Login/components/Main'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'登陆'</span><span class="token punctuation">,</span>        flag<span class="token punctuation">:</span> <span class="token boolean">false</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>      Header<span class="token punctuation">,</span>      Footer<span class="token punctuation">,</span>      Main    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">switchflag</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> content      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="子组件"><a href="#子组件" class="headerlink" title="子组件"></a>子组件</h4><ul><li><p>通过 props 接受数据</p></li><li><p>发射出一个自定义事件来改变父元素的值，然后传递新的值,子组件永远不能直接改变父元素的值</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    {{info}} ----{{infoflag}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changedata<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    props<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'info'</span><span class="token punctuation">,</span> <span class="token string">'infoflag'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'子组件'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">changedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'changeflag'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>也可以有第二种父元素传递过来的值验证</p></li><li><p>下面的例子说明 两个值必须要传递进来，一个是数字 一个是布尔</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    {{info}} ----{{infoflag}}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changedata<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    props<span class="token punctuation">:</span> <span class="token punctuation">{</span>      info<span class="token punctuation">:</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> Number<span class="token punctuation">,</span>        required<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      infoflag<span class="token punctuation">:</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> Boolean<span class="token punctuation">,</span>        required<span class="token punctuation">:</span> <span class="token boolean">true</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'子组件'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">changedata</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'changeflag'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Vue-总线机制"><a href="#Vue-总线机制" class="headerlink" title="Vue 总线机制"></a>Vue 总线机制</h3><ul><li>总线机制主要是用在爷孙组件或者爷穷孙组件，这样省的一层层发射</li></ul><h4 id="第一步创建总线-挂载到-bus-属性上"><a href="#第一步创建总线-挂载到-bus-属性上" class="headerlink" title="第一步创建总线 挂载到 bus 属性上"></a>第一步创建总线 挂载到 bus 属性上</h4><pre class="line-numbers language-javascript"><code class="language-javascript">Vue<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第二步-孙子组件发射出去自定义事件"><a href="#第二步-孙子组件发射出去自定义事件" class="headerlink" title="第二步 孙子组件发射出去自定义事件"></a>第二步 孙子组件发射出去自定义事件</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> <span class="token string">'想改变的值'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="第三步-爷爷组件监听此事件"><a href="#第三步-爷爷组件监听此事件" class="headerlink" title="第三步 爷爷组件监听此事件"></a>第三步 爷爷组件监听此事件</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">let</span> _this <span class="token operator">=</span> <span class="token keyword">this</span><span class="token keyword">this</span><span class="token punctuation">.</span>bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token punctuation">{</span>  _this<span class="token punctuation">.</span>xxx <span class="token operator">=</span> content<span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="卡槽"><a href="#卡槽" class="headerlink" title="卡槽"></a>卡槽</h3><ul><li>卡槽的作用就是有的时候我们不想只传递数据，还想传递 html 代码</li></ul><h4 id="匿名卡槽-只有一个卡槽，直接找默认"><a href="#匿名卡槽-只有一个卡槽，直接找默认" class="headerlink" title="匿名卡槽(只有一个卡槽，直接找默认)"></a>匿名卡槽(只有一个卡槽，直接找默认)</h4><ul><li>父组件 我想把 div 里面的 html 代码传递给子组件</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    {{ message }}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Chacaoa</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sloata<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>A里面的数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Chacaoa</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'@/components/common/Header'</span>  <span class="token keyword">import</span> Chacaoa <span class="token keyword">from</span> <span class="token string">'@/components/common/Sloata'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'首页'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>      Header<span class="token punctuation">,</span>      Chacaoa    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector"><span class="token class">.sloata</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子组件</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'子组件'</span><span class="token punctuation">,</span>        dataA<span class="token punctuation">:</span> <span class="token string">'dataA里面的数据'</span><span class="token punctuation">,</span>        dataB<span class="token punctuation">:</span> <span class="token string">'dataB里面的数据'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="具名卡槽"><a href="#具名卡槽" class="headerlink" title="具名卡槽"></a>具名卡槽</h4><ul><li><p>卡槽不止一个，需要传递多个 html 代码(署名)</p></li><li><p>父组件</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    {{ message }}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Chacaoa</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sloata<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>kaocaoa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>A里面的内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sloatb<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>kaocaob<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>B里面的内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Chacaoa</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'@/components/common/Header'</span>  <span class="token keyword">import</span> Chacaoa <span class="token keyword">from</span> <span class="token string">'@/components/common/Sloata'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'首页'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>      Header<span class="token punctuation">,</span>      Chacaoa    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector"><span class="token class">.sloata</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token class">.sloatb</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子组件</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>kaocaoa<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>kaocaob<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'子组件'</span><span class="token punctuation">,</span>        dataA<span class="token punctuation">:</span> <span class="token string">'dataA里面的数据'</span><span class="token punctuation">,</span>        dataB<span class="token punctuation">:</span> <span class="token string">'dataB里面的数据'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="卡槽里面子组件想给父组件传值"><a href="#卡槽里面子组件想给父组件传值" class="headerlink" title="卡槽里面子组件想给父组件传值"></a>卡槽里面子组件想给父组件传值</h4><ul><li><p>只有利用 slot-scope</p></li><li><p>父组件</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    {{ message }}    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Chacaoa</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sloata<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>kaocaoa<span class="token punctuation">"</span></span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shuju1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>{{ shuju1.data }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sloatb<span class="token punctuation">"</span></span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>kaocaob<span class="token punctuation">"</span></span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>shuju2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>{{ shuju2.data }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Chacaoa</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'@/components/common/Header'</span>  <span class="token keyword">import</span> Chacaoa <span class="token keyword">from</span> <span class="token string">'@/components/common/Sloata'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'首页'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    components<span class="token punctuation">:</span> <span class="token punctuation">{</span>      Header<span class="token punctuation">,</span>      Chacaoa    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css">  <span class="token selector"><span class="token class">.sloata</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector"><span class="token class">.sloatb</span> </span><span class="token punctuation">{</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">300</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>子组件</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>kaocaoa<span class="token punctuation">"</span></span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataA<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>kaocaob<span class="token punctuation">"</span></span> <span class="token attr-name">:data</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>dataB<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>slot</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>    <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        message<span class="token punctuation">:</span> <span class="token string">'子组件'</span><span class="token punctuation">,</span>        dataA<span class="token punctuation">:</span> <span class="token string">'dataA里面的数据'</span><span class="token punctuation">,</span>        dataB<span class="token punctuation">:</span> <span class="token string">'dataB里面的数据'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style language-css"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Vuex-下章在重点介绍"><a href="#Vuex-下章在重点介绍" class="headerlink" title="Vuex 下章在重点介绍"></a>Vuex 下章在重点介绍</h3>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学记笔记(四) computed与watch</title>
      <link href="/2019/11/05/vuesi/"/>
      <url>/2019/11/05/vuesi/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-中-Computed-与-Watch-区别"><a href="#Vue-中-Computed-与-Watch-区别" class="headerlink" title="Vue 中 Computed 与 Watch 区别"></a>Vue 中 Computed 与 Watch 区别</h1><h2 id="Computed"><a href="#Computed" class="headerlink" title="Computed"></a>Computed</h2><ul><li><p>computed 是一个计算属性，类似过滤器，对绑定的 view 的数据进行处理</p></li><li><p>computed get 里面必有 return 如果没有直接报错</p></li></ul><h3 id="get-用法"><a href="#get-用法" class="headerlink" title="get 用法"></a>get 用法</h3><pre class="line-numbers language-javascript"><code class="language-javascript">data<span class="token punctuation">:</span> <span class="token punctuation">{</span>    firstName<span class="token punctuation">:</span> <span class="token string">'Foo'</span><span class="token punctuation">,</span>    lastName<span class="token punctuation">:</span> <span class="token string">'Bar'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>    fullName<span class="token punctuation">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>fullName 不能在 data 里面定义,因为 computed 作为计算属性定义的 fullName 并返回对应的结果给这个变量,变量不可以重复定义和赋值</li></ul><h3 id="get-和-set-用法"><a href="#get-和-set-用法" class="headerlink" title="get 和 set 用法"></a>get 和 set 用法</h3><pre class="line-numbers language-javascript"><code class="language-javascript">data<span class="token punctuation">:</span> <span class="token punctuation">{</span>    firstName<span class="token punctuation">:</span> <span class="token string">'Foo'</span><span class="token punctuation">,</span>    lastName<span class="token punctuation">:</span> <span class="token string">'Bar'</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  computed<span class="token punctuation">:</span> <span class="token punctuation">{</span>  fullName：<span class="token punctuation">{</span>   <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//回调函数 当需要读取当前属性值是执行，根据相关数据计算并返回当前属性的值</span>      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName    <span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token keyword">set</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//监视当前属性值的变化，当属性值发生变化时执行，更新相关的属性数据</span>       <span class="token comment" spellcheck="true">//val就是fullName的最新属性值</span>       console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>        <span class="token keyword">const</span> names <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Watch"><a href="#Watch" class="headerlink" title="Watch"></a>Watch</h2><ul><li>watch 就是一个观察动作</li></ul><h3 id="监听简单类型"><a href="#监听简单类型" class="headerlink" title="监听简单类型"></a>监听简单类型</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span><span class="token punctuation">{</span>        <span class="token string">'first'</span><span class="token punctuation">:</span><span class="token number">2</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    watch<span class="token punctuation">:</span><span class="token punctuation">{</span>      <span class="token function">first</span><span class="token punctuation">(</span>newvalue<span class="token punctuation">,</span>oldvalue<span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newvalue<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oldvalue<span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>first<span class="token punctuation">)</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="监听复杂类型"><a href="#监听复杂类型" class="headerlink" title="监听复杂类型"></a>监听复杂类型</h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">return</span><span class="token punctuation">{</span>        <span class="token string">'first'</span><span class="token punctuation">:</span><span class="token punctuation">{</span>          second<span class="token punctuation">:</span><span class="token number">0</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    watch<span class="token punctuation">:</span><span class="token punctuation">{</span>      first<span class="token punctuation">.</span>second<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>newVal<span class="token punctuation">,</span>oldVal<span class="token punctuation">)</span><span class="token punctuation">{</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newVal<span class="token punctuation">,</span>oldVal<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="computed-与-watch-区别"><a href="#computed-与-watch-区别" class="headerlink" title="computed 与 watch 区别"></a>computed 与 watch 区别</h2><h3 id="computed-特性"><a href="#computed-特性" class="headerlink" title="computed 特性"></a>computed 特性</h3><ul><li><p>计算值</p></li><li><p>应用:就是相当于对 data 数据里面的二次封装</p></li><li><p>具有缓存性质。页面重新渲染值不变化。计算属性会立即返回之间的计算结果,而不必在执行函数</p></li></ul><h3 id="watch-特性"><a href="#watch-特性" class="headerlink" title="watch 特性"></a>watch 特性</h3><ul><li>观察</li><li>应用: 监听 props $emit 或本组件的值执行异步操作</li><li>无缓存性 : 页面重新渲染时值不变化也会执行</li></ul>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学记笔记(三) 生命周期</title>
      <link href="/2019/11/05/vuesan/"/>
      <url>/2019/11/05/vuesan/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-生命周期"><a href="#Vue-生命周期" class="headerlink" title="Vue 生命周期"></a>Vue 生命周期</h1><h2 id="什么是生命周期函数"><a href="#什么是生命周期函数" class="headerlink" title="什么是生命周期函数"></a>什么是生命周期函数</h2><p>生命周期函数俗称钩子函数，它只的是只有在特定的时候才执行的函数，这个时候以前或者以后都不执行</p><h2 id="Vue-里面有八大钩子函数"><a href="#Vue-里面有八大钩子函数" class="headerlink" title="Vue 里面有八大钩子函数"></a>Vue 里面有八大钩子函数</h2><h3 id="beforeCreate"><a href="#beforeCreate" class="headerlink" title="beforeCreate"></a>beforeCreate</h3><ul><li>它只得是在组件创建前执行,这个时候它只是个对象</li></ul><h3 id="created-创建后"><a href="#created-创建后" class="headerlink" title="created 创建后"></a>created 创建后</h3><ul><li>这个时候对象及其事件完全初始化了</li></ul><h3 id="beforeMounted"><a href="#beforeMounted" class="headerlink" title="beforeMounted"></a>beforeMounted</h3><ul><li>加载组件之前。这个时候表示还没有加载组件</li></ul><h3 id="mounted"><a href="#mounted" class="headerlink" title="mounted"></a>mounted</h3><ul><li>加载组件之后，这个时候表示已经加载完毕了。一般在这个钩子函数里面写获取数据，一些异步操作赋值等等</li></ul><h3 id="beforeUpdate"><a href="#beforeUpdate" class="headerlink" title="beforeUpdate"></a>beforeUpdate</h3><ul><li>更新组件，表示的是组件里面的数据有变化的时候，它在组件变化之前执行</li></ul><h3 id="updated"><a href="#updated" class="headerlink" title="updated"></a>updated</h3><ul><li>更新组件之后，表示的是组件里面的数据更新完毕才执行</li></ul><h3 id="beforeDestroy"><a href="#beforeDestroy" class="headerlink" title="beforeDestroy"></a>beforeDestroy</h3><ul><li>销毁前 表示组件在销毁前执行的函数</li></ul><h3 id="destroyed"><a href="#destroyed" class="headerlink" title="destroyed"></a>destroyed</h3><ul><li>销毁后表示的是组件销毁后执行的函数</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changeMsg()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>change<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{msg}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    el<span class="token punctuation">:</span> <span class="token string">'#container'</span><span class="token punctuation">,</span>    data<span class="token punctuation">:</span> <span class="token punctuation">{</span>      msg<span class="token punctuation">:</span> <span class="token string">'TigerChain'</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'beforeCreate--实例创建前状态'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">created</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'created--实例创建完成状态'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">beforeMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'beforeMount--挂载之前的状态'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'mounted--已经挂载的状态'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">beforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'beforeUpdate--数据更新前的状态'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>        <span class="token string">'%c%s'</span><span class="token punctuation">,</span>        <span class="token string">'color:green'</span><span class="token punctuation">,</span>        <span class="token string">'真实的 DOM 结构:'</span> <span class="token operator">+</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML      <span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">updated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'updated--数据更新完成时状态'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>        <span class="token string">'%c%s'</span><span class="token punctuation">,</span>        <span class="token string">'color:green'</span><span class="token punctuation">,</span>        <span class="token string">'真实的 DOM 结构:'</span> <span class="token operator">+</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'container'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML      <span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">activated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span>        <span class="token string">'%c%s'</span><span class="token punctuation">,</span>        <span class="token string">'color:red'</span><span class="token punctuation">,</span>        <span class="token string">'activated-- keep-alive 组件激活时调用'</span>      <span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">deactivated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'deactivated-- keep-alive 停用时调用'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">beforeDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'beforeDestroy-- vue实例销毁前的状态'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token function">destroyed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      console<span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:red'</span><span class="token punctuation">,</span> <span class="token string">'destroyed-- vue实例销毁完成时调用'</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'el  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'data  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$data<span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'%c%s'</span><span class="token punctuation">,</span> <span class="token string">'color:blue'</span><span class="token punctuation">,</span> <span class="token string">'message  :'</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msg<span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">changeMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>msg <span class="token operator">=</span> <span class="token string">'TigerChain111'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学记笔记(二) 基本指令</title>
      <link href="/2019/11/04/vue-er-ji-ben-zhi-ling/"/>
      <url>/2019/11/04/vue-er-ji-ben-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-基本指令"><a href="#Vue-基本指令" class="headerlink" title="Vue 基本指令"></a>Vue 基本指令</h1><h3 id="1-v-text"><a href="#1-v-text" class="headerlink" title="(1) v-text"></a>(1) v-text</h3><ul><li>它的作用就是里面有 HTML 代码的话也不转义直接显示</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          msg<span class="token punctuation">:</span> <span class="token string">'&lt;strong>Hello&lt;/strong> Vue!'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>渲染的结果就是&lt;strong&gt;Hello&lt;/strong&gt; Vue! 一个字符串</li></ul><h3 id="2-v-html"><a href="#2-v-html" class="headerlink" title="(2) v-html"></a>(2) v-html</h3><ul><li>它的作用就是绑定 html 属性把里面的 html 代码渲染出来</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          msg<span class="token punctuation">:</span> <span class="token string">'&lt;strong>Hello&lt;/strong> Vue!'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>渲染结果就是 <strong>Hello</strong> Vue!</li></ul><h3 id="3-v-if-判断"><a href="#3-v-if-判断" class="headerlink" title="(3) v-if 判断"></a>(3) v-if 判断</h3><ul><li>(i) 真就渲染 假就不渲染,假的话就是根本没有这个 dom</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>不渲染<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          flag<span class="token punctuation">:</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>这样结果就是不渲染，移除了 DOM</p></li><li><p>(ii) 有 if 就会有 v-else</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>不渲染<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>最后的结果<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          flag<span class="token punctuation">:</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>这里 v-if,v-else 要紧贴着使用,不然会报错误,v-if 显示 v-else 隐藏。v-if 隐藏 v-else 就显示</p></li><li><p>(3) v-else-if</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>show<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">'</span>a<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>渲染A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else-if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>show<span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">'</span>b<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>渲染B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>渲染C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          show<span class="token punctuation">:</span> <span class="token string">'a'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>依据 show 值不同渲染不同的数据</li></ul><h3 id="4-v-show"><a href="#4-v-show" class="headerlink" title="(4) v-show"></a>(4) v-show</h3><ul><li><p>它不用于 v-if ,它的作用是渲染了但是依据变量的真假来隐藏,等价于 display:none</p></li><li><p>而 v-if 则是 DOM 根本不会加载</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>渲染了,有DOM但是隐藏了<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          flag<span class="token punctuation">:</span> <span class="token boolean">false</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-v-for"><a href="#5-v-for" class="headerlink" title="(5) v-for"></a>(5) v-for</h3><ul><li>列表循环</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>(content,index) in listdata<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        这是第{{index}}数据,数据内容是{{content}}      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          listdata<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'第一条数据'</span><span class="token punctuation">,</span> <span class="token string">'第二条数据'</span><span class="token punctuation">,</span> <span class="token string">'第三条数据'</span><span class="token punctuation">]</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>必须要有:key</li></ul><h3 id="6-v-once"><a href="#6-v-once" class="headerlink" title="(6) v-once"></a>(6) v-once</h3><ul><li>只会渲染一次，即使数据改变了他也不会改变</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-once</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          msg<span class="token punctuation">:</span> <span class="token string">'只渲染一次，即使改变了也不会再次渲染'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-v-bind"><a href="#7-v-bind" class="headerlink" title="(7) v-bind"></a>(7) v-bind</h3><ul><li>v-bind 绑定数据 在 Vue 中可以简写成: 可以绑定数据,也可以当作给子组件传递数据</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>[flag?<span class="token punctuation">'</span>active<span class="token punctuation">'</span>:<span class="token punctuation">'</span><span class="token punctuation">'</span>]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          flag<span class="token punctuation">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>flag 要是真就加载 active 的类名 flag 要是假就加载空</p></li><li><p>动态 class 几种方式</p></li><li><p>(1)最简单的 flag 为真就加载 active 为假就不渲染</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{<span class="token punctuation">'</span>active<span class="token punctuation">'</span>:flag}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          flag<span class="token punctuation">:</span> <span class="token boolean">true</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>(2)依据条件来加载,flag 要是-1 就加载,要不是就不加载</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{<span class="token punctuation">'</span>active<span class="token punctuation">'</span>:flag<span class="token punctuation">=</span><span class="token punctuation">=</span>-1}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          flag<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>(3) 绑定并判断多个,属性名就是类名，值就是判断条件</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{<span class="token punctuation">'</span>active<span class="token punctuation">'</span>:flag,<span class="token punctuation">'</span>sort<span class="token punctuation">'</span>:flagsort}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          flag<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span>          flagsort<span class="token punctuation">:</span><span class="token boolean">true</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="8-v-on"><a href="#8-v-on" class="headerlink" title="(8) v-on"></a>(8) v-on</h3><ul><li><p>监听事件 可以简写成@</p></li><li><p>v-on:click 可以简写成@click</p></li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>change<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>点击我弹出来<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'弹出来'</span><span class="token punctuation">)</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="9-v-model"><a href="#9-v-model" class="headerlink" title="(9) v-model"></a>(9) v-model</h3><ul><li>数据的双向绑定 一般结合 input textarea 使用的修饰符可以有.lazy , .number, .trim</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://unpkg.com/vue<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inputdata<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//element</span>        data<span class="token punctuation">:</span> <span class="token punctuation">{</span>          inputdata<span class="token punctuation">:</span> <span class="token string">'获取到数据'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue学记笔记(一) 安装</title>
      <link href="/2019/11/02/vue-yi-an-zhuang/"/>
      <url>/2019/11/02/vue-yi-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-介绍"><a href="#Vue-介绍" class="headerlink" title="Vue 介绍"></a>Vue 介绍</h1><h2 id="Vue-概述"><a href="#Vue-概述" class="headerlink" title="Vue 概述"></a>Vue 概述</h2><h3 id="1-什么是-Vue"><a href="#1-什么是-Vue" class="headerlink" title="(1) 什么是 Vue"></a>(1) 什么是 Vue</h3><p>Vue.js 是一套构建用户界面的渐进式框架，Vue 采用自下向上增量开发的设计，其核心库只关注视图层，易于上手，同时 vue 完全有能力驱动采用单文件组件和 Vue 生态系统支持的库开发的复杂单页应用。其实抛开官方的一些不知所云的说法，简单来说，在传统 web 开发中，我们搭建项目都以 html 结构为基础，然后通过 jquery 或者 js 来添加各种特效功能，需要去选中每一个元素进行命令，这些内容在简单的项目中或者不变的项目中还能应付得来，一旦项目改动或者项目工程较大，代码的修改将是复杂繁琐的，而这时候用了 vue，这些问题都不复存在。在比如一些单网页制作成的应用程序，一般涉及到数据交互的内容都很多，而应用了 vue 之后将大大缩减工作量。</p><h3 id="2-Vue-的好处"><a href="#2-Vue-的好处" class="headerlink" title="(2) Vue 的好处"></a>(2) Vue 的好处</h3><h4 id="i-数据绑定："><a href="#i-数据绑定：" class="headerlink" title="(i) 数据绑定："></a>(i) 数据绑定：</h4><p>vue 会根据对应的元素，进行设置元素数据，通过输入框，以及 get 获取数据等多种方式进行数据的实时绑定，进行网页及应用的数据渲染 。</p><h4 id="ii-组件式开发："><a href="#ii-组件式开发：" class="headerlink" title="(ii) 组件式开发："></a>(ii) 组件式开发：</h4><p>通过 vue 的模块封装，它可以将一个 web 开发中设计的各种模块进行拆分，变成单独的组件，然后通过数据绑定，调用对应模版组件，同时传入参数，即可完成对整个项目的开发。</p><h2 id="Vue-安装"><a href="#Vue-安装" class="headerlink" title="Vue 安装"></a>Vue 安装</h2><h3 id="1-Vuecli2-0-版本下的安装"><a href="#1-Vuecli2-0-版本下的安装" class="headerlink" title="(1) Vuecli2.0 版本下的安装"></a>(1) Vuecli2.0 版本下的安装</h3><h4 id="i-安装-vue-cli"><a href="#i-安装-vue-cli" class="headerlink" title="(i) 安装 vue-cli"></a>(i) 安装 vue-cli</h4><pre class="line-numbers language-javascript"><code class="language-javascript">npm i vue<span class="token operator">-</span>cli <span class="token operator">-</span> g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="ii-初始化项目"><a href="#ii-初始化项目" class="headerlink" title="(ii)初始化项目"></a>(ii)初始化项目</h4><pre class="line-numbers language-javascript"><code class="language-javascript">vue init webpack <span class="token function">text2</span><span class="token punctuation">(</span>项目名称随意填写不要有大写<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="iii-按照提示"><a href="#iii-按照提示" class="headerlink" title="(iii)按照提示"></a>(iii)按照提示</h4><pre class="line-numbers language-javascript"><code class="language-javascript">cd  text2npm run dev<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="iv-这样就完成了安装下面再说下配置"><a href="#iv-这样就完成了安装下面再说下配置" class="headerlink" title="(iv)这样就完成了安装下面再说下配置"></a>(iv)这样就完成了安装下面再说下配置</h4><pre class="line-numbers language-javascript"><code class="language-javascript">一般情况我们在build文件下找到webpack<span class="token punctuation">.</span>base<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>js 在里面修改别名比如proxyconfig 文件夹下面就是项目配置文件，我们要的变量配置都在这里src 重点我们平时写的文件都在这里components 文件夹就是组件assets 文件夹就是静态文件router 文件就是路由文件里面都是js文件main<span class="token punctuation">.</span>js 就是入口文件。引入全部来自这里<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="v-设置别名"><a href="#v-设置别名" class="headerlink" title="(v)设置别名"></a>(v)设置别名</h4><ul><li><p>在 webpack.base.conf.js 文件中可以找到这样一段代码</p></li><li><p>@components 是我们自己自定义的，可以随意替换</p></li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>    extensions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.js'</span><span class="token punctuation">,</span> <span class="token string">'.vue'</span><span class="token punctuation">,</span> <span class="token string">'.json'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    alias<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">'vue$'</span><span class="token punctuation">:</span> <span class="token string">'vue/dist/vue.esm.js'</span><span class="token punctuation">,</span>      <span class="token string">'@'</span><span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token string">'@components'</span><span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'src/components'</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="vi-设置代理"><a href="#vi-设置代理" class="headerlink" title="(vi)设置代理"></a>(vi)设置代理</h4><ul><li>找到 config 文件夹下面的 index.js 文件</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">proxyTable<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">"/api"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// api相当于一个别名，代指 http://192.168.0.14:8081</span><span class="token string">'target'</span><span class="token punctuation">:</span><span class="token string">'http://192.168.0.14:8081'</span><span class="token punctuation">,</span><span class="token string">'changeOrigin'</span><span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span><span class="token string">'pathRewrite'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">'^/api'</span><span class="token punctuation">:</span><span class="token string">""</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-Vuecli3-0-版本的安装"><a href="#2-Vuecli3-0-版本的安装" class="headerlink" title="(2)Vuecli3.0 版本的安装"></a>(2)Vuecli3.0 版本的安装</h3><ul><li>设置淘宝镜像</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript">npm install <span class="token operator">-</span>g cnpm <span class="token operator">--</span>registry<span class="token operator">=</span>https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>registry<span class="token punctuation">.</span>npm<span class="token punctuation">.</span>taobao<span class="token punctuation">.</span>org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="i-利用-cnpm-来安装"><a href="#i-利用-cnpm-来安装" class="headerlink" title="(i) 利用 cnpm 来安装"></a>(i) 利用 cnpm 来安装</h4><pre class="line-numbers language-javascript"><code class="language-javascript">npm i @vue<span class="token operator">/</span>cli <span class="token operator">-</span>goryarn global add @vue<span class="token operator">/</span>cli<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="ii-创建项目"><a href="#ii-创建项目" class="headerlink" title="(ii)创建项目"></a>(ii)创建项目</h4><pre class="line-numbers language-javascript"><code class="language-javascript">vue create <span class="token function">项目名称</span><span class="token punctuation">(</span>必须小写<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="iii-正式进去安装步骤"><a href="#iii-正式进去安装步骤" class="headerlink" title="(iii) 正式进去安装步骤"></a>(iii) 正式进去安装步骤</h4><pre class="line-numbers language-javascript"><code class="language-javascript">Vue CLI v3<span class="token number">.3</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">?</span> Please pick a preset<span class="token punctuation">:</span> <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span><span class="token operator">></span> <span class="token keyword">default</span> <span class="token punctuation">(</span>babel<span class="token punctuation">,</span> eslint<span class="token punctuation">)</span>  Manually select features它的意思是选择默认还是手动选择<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="iv-下一步空格表示选择-回车表示进入下一步"><a href="#iv-下一步空格表示选择-回车表示进入下一步" class="headerlink" title="(iv)下一步空格表示选择 回车表示进入下一步"></a>(iv)下一步空格表示选择 回车表示进入下一步</h4><pre class="line-numbers language-javascript"><code class="language-javascript">Vue CLI v3<span class="token number">.3</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">?</span> Please pick a preset<span class="token punctuation">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token punctuation">:</span> <span class="token punctuation">(</span>Press <span class="token operator">&lt;</span>space<span class="token operator">></span> to select<span class="token punctuation">,</span> <span class="token operator">&lt;</span>a<span class="token operator">></span> to toggle all<span class="token punctuation">,</span> <span class="token operator">&lt;</span>i<span class="token operator">></span> to invert selection<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Babel <span class="token punctuation">(</span> <span class="token punctuation">)</span> TypeScript <span class="token punctuation">(</span> <span class="token punctuation">)</span> Progressive Web App <span class="token punctuation">(</span>PWA<span class="token punctuation">)</span> Support <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Router <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Vuex <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> CSS Pre<span class="token operator">-</span>processors <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> Linter <span class="token operator">/</span> Formatter <span class="token punctuation">(</span> <span class="token punctuation">)</span> Unit Testing <span class="token punctuation">(</span> <span class="token punctuation">)</span> E2E Testing<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="v-模块安装询问我因为安装了-router-所以会弹出来-Y"><a href="#v-模块安装询问我因为安装了-router-所以会弹出来-Y" class="headerlink" title="(v) 模块安装询问我因为安装了 router 所以会弹出来 Y"></a>(v) 模块安装询问我因为安装了 router 所以会弹出来 Y</h4><pre class="line-numbers language-javascript"><code class="language-javascript">Vue CLI v3<span class="token number">.3</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">?</span> Please pick a preset<span class="token punctuation">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token punctuation">:</span> Babel<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> Vuex<span class="token punctuation">,</span> CSS Pre<span class="token operator">-</span>processors<span class="token punctuation">,</span> Linter<span class="token operator">?</span> Use history mode <span class="token keyword">for</span> router<span class="token operator">?</span> <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> <span class="token punctuation">(</span>Y<span class="token operator">/</span>n<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="vi-后面还有几步我就不列举了，发一个汇总版本的"><a href="#vi-后面还有几步我就不列举了，发一个汇总版本的" class="headerlink" title="(vi) 后面还有几步我就不列举了，发一个汇总版本的"></a>(vi) 后面还有几步我就不列举了，发一个汇总版本的</h4><pre class="line-numbers language-javascript"><code class="language-javascript">Vue CLI v3<span class="token number">.3</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token operator">?</span> Please pick a preset<span class="token punctuation">:</span> Manually select features<span class="token operator">?</span> Check the features needed <span class="token keyword">for</span> your project<span class="token punctuation">:</span> Babel<span class="token punctuation">,</span> Router<span class="token punctuation">,</span> Vuex<span class="token punctuation">,</span> CSS Pre<span class="token operator">-</span>processors<span class="token punctuation">,</span> Linter<span class="token operator">?</span> Use history mode <span class="token keyword">for</span> router<span class="token operator">?</span> <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes<span class="token operator">?</span> Pick a CSS pre<span class="token operator">-</span>processor <span class="token punctuation">(</span>PostCSS<span class="token punctuation">,</span> Autoprefixer and CSS Modules are supported by <span class="token keyword">default</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Less<span class="token operator">?</span> Pick a linter <span class="token operator">/</span> formatter config<span class="token punctuation">:</span> Prettier<span class="token operator">?</span> Pick additional lint features<span class="token punctuation">:</span> <span class="token punctuation">(</span>Press <span class="token operator">&lt;</span>space<span class="token operator">></span> to select<span class="token punctuation">,</span> <span class="token operator">&lt;</span>a<span class="token operator">></span> to toggle all<span class="token punctuation">,</span> <span class="token operator">&lt;</span>i<span class="token operator">></span> to invert selection<span class="token punctuation">)</span>Lint on save<span class="token operator">?</span> Where <span class="token keyword">do</span> you prefer placing config <span class="token keyword">for</span> Babel<span class="token punctuation">,</span> PostCSS<span class="token punctuation">,</span> ESLint<span class="token punctuation">,</span> etc<span class="token punctuation">.</span><span class="token operator">?</span> In <span class="token keyword">package</span><span class="token punctuation">.</span>json<span class="token operator">?</span> Save <span class="token keyword">this</span> <span class="token keyword">as</span> a preset <span class="token keyword">for</span> future projects<span class="token operator">?</span> <span class="token punctuation">(</span>y<span class="token operator">/</span>N<span class="token punctuation">)</span> N <span class="token comment" spellcheck="true">//是否记录下，以便下次继续使用这套配置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="vii-安装最后一步"><a href="#vii-安装最后一步" class="headerlink" title="(vii)安装最后一步"></a>(vii)安装最后一步</h4><pre class="line-numbers language-javascript"><code class="language-javascript">cd demo1  <span class="token comment" spellcheck="true">// 进入项目目录 这里demo1就是你一上来create 那个名称</span>npm run serve  <span class="token comment" spellcheck="true">// 这里和2不一样了。2是run dev 而 3 是run serve</span>DONE  Compiled successfully <span class="token keyword">in</span> 2232ms                                                                                                                                                                        App running at<span class="token punctuation">:</span>  <span class="token operator">-</span> Local<span class="token punctuation">:</span>   http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">8080</span><span class="token operator">/</span>  <span class="token operator">-</span> Network<span class="token punctuation">:</span> http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">0.8</span><span class="token punctuation">:</span><span class="token number">8080</span><span class="token operator">/</span>  Note that the development build is not optimized<span class="token punctuation">.</span>  To create a production build<span class="token punctuation">,</span> run npm run build<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="viii-根目录新建-vue-config-js-里面的配置"><a href="#viii-根目录新建-vue-config-js-里面的配置" class="headerlink" title="(viii)根目录新建 vue.config.js 里面的配置"></a>(viii)根目录新建 vue.config.js 里面的配置</h4><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// vue.config.js 配置说明</span><span class="token comment" spellcheck="true">//官方vue.config.js 参考文档 https://cli.vuejs.org/zh/config/#css-loaderoptions</span><span class="token comment" spellcheck="true">// 这里只列一部分，具体配置参考文档</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//别名设置</span>  configureWebpack<span class="token punctuation">:</span> <span class="token punctuation">{</span>    resolve<span class="token punctuation">:</span> <span class="token punctuation">{</span>      alias<span class="token punctuation">:</span> <span class="token punctuation">{</span>        assets<span class="token punctuation">:</span> <span class="token string">'@/assets'</span><span class="token punctuation">,</span>        components<span class="token punctuation">:</span> <span class="token string">'@/components'</span><span class="token punctuation">,</span>        views<span class="token punctuation">:</span> <span class="token string">'@/views'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 部署生产环境和开发环境下的URL。</span>  <span class="token comment" spellcheck="true">// 默认情况下，Vue CLI 会假设你的应用是被部署在一个域名的根路径上</span>  <span class="token comment" spellcheck="true">//例如 https://www.my-app.com/。如果应用被部署在一个子路径上，你就需要用这个选项指定这个子路径。例如，如果你的应用被部署在 https://www.my-app.com/my-app/，则设置 baseUrl 为 /my-app/。</span>  baseUrl<span class="token punctuation">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV <span class="token operator">===</span> <span class="token string">'production'</span> <span class="token operator">?</span> <span class="token string">'./'</span> <span class="token punctuation">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// outputDir: 在npm run build 或 yarn build 时 ，生成文件的目录名称（要和baseUrl的生产环境路径一致）</span>  outputDir<span class="token punctuation">:</span> <span class="token string">'dist'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//用于放置生成的静态资源 (js、css、img、fonts) 的；（项目打包之后，静态资源会放在这个文件夹下）</span>  assetsDir<span class="token punctuation">:</span> <span class="token string">'assets'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//指定生成的 index.html 的输出路径  (打包之后，改变系统默认的index.html的文件名)</span>  <span class="token comment" spellcheck="true">// indexPath: "myIndex.html",</span>  <span class="token comment" spellcheck="true">//默认情况下，生成的静态资源在它们的文件名中包含了 hash 以便更好的控制缓存。你可以通过将这个选项设为 false 来关闭文件名哈希。(false的时候就是让原来的文件名不改变)</span>  filenameHashing<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//   lintOnSave：{ type:Boolean default:true } 问你是否使用eslint</span>  lintOnSave<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//如果你想要在生产构建时禁用 eslint-loader，你可以用如下配置</span>  <span class="token comment" spellcheck="true">// lintOnSave: process.env.NODE_ENV !== 'production',</span>  <span class="token comment" spellcheck="true">//是否使用包含运行时编译器的 Vue 构建版本。设置为 true 后你就可以在 Vue 组件中使用 template 选项了，但是这会让你的应用额外增加 10kb 左右。(默认false)</span>  <span class="token comment" spellcheck="true">// runtimeCompiler: false,</span>  <span class="token comment" spellcheck="true">/**   * 如果你不需要生产环境的 source map，可以将其设置为 false 以加速生产环境构建。   *  打包之后发现map文件过大，项目文件体积很大，设置为false就可以不输出map文件   *  map文件的作用在于：项目打包后，代码都是经过压缩加密的，如果运行时报错，输出的错误信息无法准确得知是哪里的代码报错。   *  有了map就可以像未加密的代码一样，准确的输出是哪一行哪一列有错。   * */</span>  productionSourceMap<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 它支持webPack-dev-server的所有选项</span>  devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 这里有个前提必须引入文件     const appData = require("./data.json");     const seller = appData.seller;     const goods = appData.goods;     const ratings = appData.ratings;    */</span>    <span class="token function">before</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span> <span class="token punctuation">{</span>      app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/api/seller'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          errno<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>          data<span class="token punctuation">:</span> seller        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/api/goods'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          errno<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>          data<span class="token punctuation">:</span> goods        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>      app<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/api/ratings'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>          errno<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>          data<span class="token punctuation">:</span> ratings        <span class="token punctuation">}</span><span class="token punctuation">)</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    host<span class="token punctuation">:</span> <span class="token string">'localhost'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//也可以直接写IP地址这样方便真机测试</span>    port<span class="token punctuation">:</span> <span class="token number">8080</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 端口号</span>    https<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// https:{type:Boolean}</span>    open<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//配置自动启动浏览器</span>    <span class="token comment" spellcheck="true">// proxy: 'http://localhost:4000' // 配置跨域处理,只有一个代理</span>    <span class="token comment" spellcheck="true">// 配置多个代理</span>    proxy<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">'/api'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        target<span class="token punctuation">:</span> <span class="token string">'&lt;url>'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//写地址</span>        ws<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 允许跨域</span>        changeOrigin<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//允许跨域</span>        pathRewrite<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token string">'^/api'</span><span class="token punctuation">:</span> <span class="token string">''</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token string">'/foo'</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        target<span class="token punctuation">:</span> <span class="token string">'&lt;other_url>'</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="viv-修改-配置可以在-package-json-里面"><a href="#viv-修改-配置可以在-package-json-里面" class="headerlink" title="(viv)修改 配置可以在 package.json 里面"></a>(viv)修改 配置可以在 package.json 里面</h4><ul><li>增加了 rules 选项</li></ul><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token string">"eslintConfig"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token string">"root"</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token string">"env"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">"node"</span><span class="token punctuation">:</span> <span class="token boolean">true</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token string">"extends"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token string">"plugin:vue/essential"</span><span class="token punctuation">,</span>      <span class="token string">"@vue/prettier"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token string">"rules"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">"no-console"</span><span class="token punctuation">:</span> <span class="token string">"off"</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token string">"parserOptions"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">"parser"</span><span class="token punctuation">:</span> <span class="token string">"babel-eslint"</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue基础语法学记笔记</title>
      <link href="/2019/11/01/vueall/"/>
      <url>/2019/11/01/vueall/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Vue-安装"><a href="#1-Vue-安装" class="headerlink" title="(1) Vue 安装"></a>(1) Vue 安装</h1><p><a href="https://uiyin.github.io/2019/11/02/vue-yi-an-zhuang/" target="_blank" rel="noopener">点击跳转</a></p><h1 id="2-Vue-基本指令"><a href="#2-Vue-基本指令" class="headerlink" title="(2) Vue 基本指令"></a>(2) Vue 基本指令</h1><p><a href="https://uiyin.github.io/2019/11/04/vue-er-ji-ben-zhi-ling/" target="_blank" rel="noopener">点击跳转</a></p><h1 id="3-Vue-生命周期"><a href="#3-Vue-生命周期" class="headerlink" title="(3) Vue 生命周期"></a>(3) Vue 生命周期</h1><p><a href="https://uiyin.github.io/2019/11/05/vuesan/" target="_blank" rel="noopener">点击跳转</a></p><h1 id="4-Vue-computed-与-watch-区别"><a href="#4-Vue-computed-与-watch-区别" class="headerlink" title="(4) Vue computed 与 watch 区别"></a>(4) Vue computed 与 watch 区别</h1><p><a href="https://uiyin.github.io/2019/11/05/vuesi/" target="_blank" rel="noopener">点击跳转</a></p><h1 id="5-Vue-组件"><a href="#5-Vue-组件" class="headerlink" title="(5) Vue 组件"></a>(5) Vue 组件</h1><p><a href="https://uiyin.github.io/2019/11/06/vuewu/" target="_blank" rel="noopener">点击跳转</a></p><h1 id="6-Vue-Vuex"><a href="#6-Vue-Vuex" class="headerlink" title="(6) Vue Vuex"></a>(6) Vue Vuex</h1><p><a href="https://uiyin.github.io/2019/11/07/vueliu/" target="_blank" rel="noopener">点击跳转</a></p><h1 id="7-Vue-路由"><a href="#7-Vue-路由" class="headerlink" title="(7) Vue 路由"></a>(7) Vue 路由</h1><p><a href="https://uiyin.github.io/2019/11/08/vueqi/" target="_blank" rel="noopener">点击跳转</a></p><h1 id="8-Vue-路由参数，动画和钩子函数"><a href="#8-Vue-路由参数，动画和钩子函数" class="headerlink" title="(8) Vue 路由参数，动画和钩子函数"></a>(8) Vue 路由参数，动画和钩子函数</h1><p><a href="https://uiyin.github.io/2019/11/09/vueba/" target="_blank" rel="noopener">点击跳转</a></p>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
